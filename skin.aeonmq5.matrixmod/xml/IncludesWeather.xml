<?xml version="1.0" encoding="UTF-8"?>
<!-- Aeon MQ 5  Helix 6.1.0/6.1.7 -->
<!-- Jarvis 8.1.14 -->
<!-- Krypton 9.1.19/9.2.1 window IDs/9.2.3 -->
<!-- Leia 10.3.0/10.4.0/10.5.1/10.6.2 -->
<includes>
	<!-- ######################################################################### Current #########################################################################-->
	<!-- Widget Common Values -->
	<include name="TWC.ScrollbarCommon">
		<include>ScrollBar_Vertical</include>
		<posx>945</posx>
		<posy>75</posy>
		<width>98</width>
		<height>698</height>
	</include>
	<include name="TWC.LoadingLabelCommon">
		<posx>8</posx>
		<posy>398</posy>
		<width>1200</width>
		<height>120</height>
		<font>Font_15</font>
		<align>center</align>
		<aligny>center</aligny>
		<label>$LOCALIZE[31863]</label>
		<wrapmultiline>true</wrapmultiline>
	</include>
	<include name="TWC.Current.DailyWeekdayBG">
		<colordiffuse>30FFFFFF</colordiffuse>
		<texture border="10">DailyWeekdayBG.png</texture>
		<include>TWC.Current.DailyWeekendBG</include>
	</include>
	<include name="TWC.Current.DailyWeekendBG">
		<posy>0</posy>
		<posx>0</posx>
		<width>171</width>
		<height>417</height>
		<colordiffuse>30FFFFFF</colordiffuse>
		<texture border="10">DailyWeekendBG.png</texture>
		<aspectratio>stretch</aspectratio>
		<include>TWC.Current.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Current.DailyPrecipitationCommon">
		<posy>210</posy>
		<height>45</height>
		<textcolor>FFFFFAF0</textcolor>
		<font>Font_23</font>
		<include>TWC.Current.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Current.DailyHighLabelsCommon">
		<posy>285</posy>
		<height>45</height>
		<textcolor>FFFF0000</textcolor>
		<font>Font_23</font>
		<include>TWC.Current.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Current.DailyLowLabelsCommon">
		<posy>360</posy>
		<height>45</height>
		<textcolor>FF00AFFF</textcolor>
		<font>Font_20</font>
		<include>TWC.Current.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Current.DailyIconCommon">
		<posy>90</posy>
		<height>108</height>
		<aspectratio>keep</aspectratio>
		<include>TWC.Current.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Current.DailyDayLabelsCommon">
		<posx>-8</posx>
		<posy>8</posy>
		<height>30</height>
		<width>180</width>
		<align>center</align>
		<aligny>center</aligny>
		<textcolor>FFFFFAF0</textcolor>
		<font>Font_15</font>
	</include>
	<include name="TWC.Current.DailyDateLabelsCommon">
		<posy>38</posy>
		<font>Font_15</font>
		<include>TWC.Current.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Current.ConditionLabelsCommon">
		<posx>0</posx>
		<posy>-135</posy>
		<height>45</height>
		<width>450</width>
		<font>Font_15</font>
		<align>right</align>
		<aligny>center</aligny>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<focusedcolor>white</focusedcolor>
		<texturefocus></texturefocus>
		<texturenofocus></texturenofocus>
	</include>
	<include name="TWC.Current.ConditionValuesCommon">
		<align>left</align>
		<textcolor>FFf5f5f5</textcolor>
		<include>TWC.Current.ConditionLabelsCommon</include>
	</include>
	<include name="TWC.Current">
		<control type="group">
			<posx>435</posx>
			<posy>90</posy>
			<visible>String.IsEqual(Window.Property(Weather.CurrentView),current)</visible>
			<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
			<control type="group">
				<posx>-45</posx>
				<posy>-30</posy>
				<control type="group">
					<posx>15</posx>
					<control type="label">
						<description>current temp value</description>
						<posx>15</posx>
						<posy>120</posy>
						<width>270</width>
						<height>60</height>
						<font>Font_50</font>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[Window.Property(Current.Temperature)]$INFO[System.TemperatureUnits]</label>
						<animation effect="slide" start="0,0" end="-26,0" time="0" condition="Integer.IsGreater(Window.Property(Current.Temperature),-100) + !Integer.IsGreater(Window.Property(Current.Temperature),9)">Conditional</animation>
					</control>
					<control type="label">
						<!-- Local -->
						<posx>75</posx>
						<posy>68</posy>
						<width>495</width>
						<height>38</height>
						<align>left</align>
						<aligny>center</aligny>
						<font>Font_23</font>
						<textcolor>FFFFFAF0</textcolor>
						<label>[UPPERCASE]$INFO[Window(Weather).Property(Location)][/UPPERCASE]</label>
						<scrollout>false</scrollout>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<description>current feels like label</description>
						<posx>45</posx>
						<posy>202</posy>
						<width>210</width>
						<height>60</height>
						<font>Font_18</font>
						<align>center</align>
						<aligny>center</aligny>
						<label>[B]$LOCALIZE[402][/B]</label>
						<textcolor>$VAR[value_headercolor]</textcolor>
					</control>
					<control type="label">
						<description>current feels like value</description>
						<posx>45</posx>
						<posy>256</posy>
						<width>210</width>
						<height>60</height>
						<font>Font_23</font>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[Window.Property(Current.FeelsLike)]$INFO[System.TemperatureUnits]</label>
						<textcolor>$VAR[value_headercolor]</textcolor>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Current.FeelsLike),-100) + !Integer.IsGreater(Window.Property(Current.FeelsLike),9)">Conditional</animation>
					</control>
				</control>
				<control type="image">
					<description>current weather icon</description>
					<posx>270</posx>
					<posy>52</posy>
					<width>345</width>
					<height>270</height>
					<info>Window.Property(Current.ConditionIcon)</info>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="label">
					<description>current condition label</description>
					<posx>68</posx>
					<posy>360</posy>
					<width>510</width>
					<height>75</height>
					<label>$INFO[Window.Property(Current.Condition)]</label>
					<wrapmultiline>true</wrapmultiline>
					<font>Font_18</font>
					<align>center</align>
					<aligny>top</aligny>
				</control>
				<control type="image">
					<posx>622</posx>
					<posy>60</posy>
					<width>3</width>
					<height>420</height>
					<texture>line_v.png</texture>
				</control>
			</control>
			<control type="grouplist">
				<posx>417</posx>
				<posy>30</posy>
				<width>450</width>
				<itemgap>0</itemgap>
				<orientation>vertical</orientation>
				<control type="label">
					<description>current dew label</description>
					<include>TWC.Current.ConditionLabelsCommon</include>
					<label>$LOCALIZE[405] :</label>
				</control>
				<control type="label">
					<description>current humidity label</description>
					<include>TWC.Current.ConditionLabelsCommon</include>
					<label>$LOCALIZE[406] :</label>
				</control>
				<control type="label">
					<description>current UV Index label</description>
					<include>TWC.Current.ConditionLabelsCommon</include>
					<label>$LOCALIZE[403] :</label>
					<visible>![String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended) | String.Contains(Window.Property(WeatherProvider),Yahoo)]</visible>
				</control>
				<control type="label">
					<description>current Wind label</description>
					<include>TWC.Current.ConditionLabelsCommon</include>
					<label>$LOCALIZE[404] :</label>
				</control>
				<control type="label">
					<description>current Precipitation label</description>
					<include>TWC.Current.ConditionLabelsCommon</include>
					<label>$LOCALIZE[33021] :</label>
					<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) | String.Contains(Window.Property(WeatherProvider),Weatherbit)</visible>
				</control>
				<control type="label">
					<description>barometric pressure</description>
					<include>TWC.Current.ConditionLabelsCommon</include>
					<label>$LOCALIZE[31859] :</label>
					<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) | String.Contains(Window.Property(WeatherProvider),Yahoo) | String.Contains(Window.Property(WeatherProvider),Weatherbit)</visible>
				</control>
				<control type="label">
					<description>visibility</description>
					<include>TWC.Current.ConditionLabelsCommon</include>
					<label>$LOCALIZE[31860] :</label>
					<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) + !String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended) | String.Contains(Window.Property(WeatherProvider),Yahoo) | String.Contains(Window.Property(WeatherProvider),Weatherbit)</visible>
				</control>
				<control type="label">
					<description>current Sunrise label</description>
					<include>TWC.Current.ConditionLabelsCommon</include>
					<label>$LOCALIZE[33027] :</label>
					<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) | String.Contains(Window.Property(WeatherProvider),Yahoo) | String.Contains(Window.Property(WeatherProvider),Weatherbit)</visible>
				</control>
				<control type="label">
					<description>current Sunset label</description>
					<include>TWC.Current.ConditionLabelsCommon</include>
					<label>$LOCALIZE[33028] :</label>
					<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) |String.Contains(Window.Property(WeatherProvider),Yahoo)  | String.Contains(Window.Property(WeatherProvider),Weatherbit)</visible>
				</control>
			</control>
			<control type="grouplist">
				<posx>878</posx>
				<posy>30</posy>
				<width>450</width>
				<itemgap>0</itemgap>
				<orientation>vertical</orientation>
				<control type="label">
					<description>current dew Value</description>
					<include>TWC.Current.ConditionValuesCommon</include>
					<label>$INFO[Window.Property(Current.DewPoint)]</label>
				</control>
				<control type="label">
					<description>current humidity Value</description>
					<include>TWC.Current.ConditionValuesCommon</include>
					<label>$INFO[Window.Property(Current.Humidity)]</label>
				</control>
				<control type="label">
					<description>current UV Index Value</description>
					<include>TWC.Current.ConditionValuesCommon</include>
					<label>$INFO[Window.Property(Current.UVIndex)]</label>
					<visible>![String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended) | String.Contains(Window.Property(WeatherProvider),Yahoo)]</visible>
				</control>
				<control type="label">
					<description>current Wind Value</description>
					<include>TWC.Current.ConditionValuesCommon</include>
					<label>$INFO[Window.Property(Current.Wind)]</label>
				</control>
				<control type="label">
					<description>current Precip Value</description>
					<include>TWC.Current.ConditionValuesCommon</include>
					<label>$INFO[Window.Property(36Hour.1.ChancePrecipitation)]</label>
					<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) + ![String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended) | String.Contains(Window.Property(WeatherProvider),Yahoo) | String.Contains(Window.Property(WeatherProvider),Weatherbit)]</visible>
				</control>
				<control type="label">
					<description>current Precip Value</description>
					<include>TWC.Current.ConditionValuesCommon</include>
					<label>$INFO[Window.Property(Current.Precipitation)]</label>
					<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended) | String.Contains(Window.Property(WeatherProvider),Weatherbit)</visible>
				</control>
				<control type="label">
					<description>current Pressure Value</description>
					<include>TWC.Current.ConditionValuesCommon</include>
					<label>$INFO[Window.Property(Current.Pressure)]</label>
					<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) | String.Contains(Window.Property(WeatherProvider),Yahoo) | String.Contains(Window.Property(WeatherProvider),Weatherbit)</visible>
				</control>
				<control type="label">
					<description>current Visibilty Value</description>
					<include>TWC.Current.ConditionValuesCommon</include>
					<label>$INFO[Window.Property(Current.Visibility)]</label>
					<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) + !String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended) | String.Contains(Window.Property(WeatherProvider),Yahoo) | String.Contains(Window.Property(WeatherProvider),Weatherbit)</visible>
				</control>
				<control type="label">
					<description>current Sunrise Value</description>
					<include>TWC.Current.ConditionValuesCommon</include>
					<label>$INFO[Window.Property(Today.Sunrise)]</label>
					<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) | String.Contains(Window.Property(WeatherProvider),Yahoo) | String.Contains(Window.Property(WeatherProvider),Weatherbit)</visible>
				</control>
				<control type="label">
					<description>current Sunset Value</description>
					<include>TWC.Current.ConditionValuesCommon</include>
					<label>$INFO[Window.Property(Today.Sunset)]</label>
					<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) | String.Contains(Window.Property(WeatherProvider),Yahoo) | String.Contains(Window.Property(WeatherProvider),Weatherbit)</visible>
				</control>
			</control>
			<control type="label">
				<description>Loading label</description>
				<posy>600</posy>
				<include>TWC.LoadingLabelCommon</include>
				<visible>[[String.IsEmpty(Window.Property(Daily.IsFetched)) + !Skin.HasSetting(TWC.ShowCurrentHourly)] | [String.IsEmpty(Window.Property(Hourly.IsFetched)) + Skin.HasSetting(TWC.ShowCurrentHourly)]] + !String.Contains(Window.Property(WeatherProvider),Yahoo)</visible>
			</control>
			<!-- Daily forecast -->
			<control type="grouplist">
				<posx>-16</posx>
				<posy>458</posy>
				<width>1260</width>
				<itemgap>0</itemgap>
				<orientation>horizontal</orientation>
				<visible>!Skin.HasSetting(TWC.ShowCurrentHourly) + !String.IsEmpty(Window.Property(Daily.IsFetched))</visible>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
						<visible>!String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17]) + !String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[11])</visible>
					</control>
					<control type="image">
						<description>weekend image</description>
						<include>TWC.Current.DailyWeekendBG</include>
						<visible>String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17]) | String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[11])</visible>
					</control>
					<control type="label">
						<description>Day label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Daily.1.ShortDay)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.1.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.1.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.1.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.1.HighTemperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.1.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.1.HighTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.1.LowTemperature)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.1.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.1.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Daily.1.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
						<visible>!String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="image">
						<description>weekend image</description>
						<include>TWC.Current.DailyWeekendBG</include>
						<visible>String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="label">
						<description>Day label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Daily.2.ShortDay)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.2.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.2.OutlookIcon)]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.2.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.2.HighTemperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.2.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.2.HighTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.2.LowTemperature)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.2.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.2.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Daily.2.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
						<visible>!String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="image">
						<description>weekend image</description>
						<include>TWC.Current.DailyWeekendBG</include>
						<visible>String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="label">
						<description>Day label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Daily.3.ShortDay)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.3.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.3.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.3.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.3.HighTemperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.3.HighTemperature),-1000) + !Integer.IsGreater(Window.Property(Daily.3.HighTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.3.LowTemperature)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.3.LowTemperature),-1000) + !Integer.IsGreater(Window.Property(Daily.3.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Daily.3.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
						<visible>!String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="image">
						<description>weekend image</description>
						<include>TWC.Current.DailyWeekendBG</include>
						<visible>String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="label">
						<description>Day label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Daily.4.ShortDay)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.4.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.4.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.4.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.4.HighTemperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.4.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.4.HighTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.4.LowTemperature)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.4.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.4.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Daily.4.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
						<visible>!String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="image">
						<description>weekend image</description>
						<include>TWC.Current.DailyWeekendBG</include>
						<visible>String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="label">
						<description>Day label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Daily.5.ShortDay)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.5.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.5.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.5.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.5.HighTemperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.5.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.5.HighTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.5.LowTemperature)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.5.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.5.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Daily.5.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
						<visible>!String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="image">
						<description>weekend image</description>
						<include>TWC.Current.DailyWeekendBG</include>
						<visible>String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="label">
						<description>Day label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Daily.6.ShortDay)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.6.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.6.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.6.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.6.HighTemperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.6.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.6.HighTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.6.LowTemperature)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.6.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.6.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Daily.6.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
						<visible>!String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="image">
						<description>weekend image</description>
						<include>TWC.Current.DailyWeekendBG</include>
						<visible>String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
					</control>
					<control type="label">
						<description>Day label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Daily.7.ShortDay)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.7.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.7.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.7.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.7.HighTemperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.7.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.7.HighTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Daily.7.LowTemperature)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.7.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.7.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Daily.7.ChancePrecipitation)]</label>
					</control>
				</control>
			</control>
			<!-- Hourly forecast -->
			<control type="grouplist">
				<posx>-16</posx>
				<posy>458</posy>
				<width>1260</width>
				<itemgap>0</itemgap>
				<orientation>horizontal</orientation>
				<visible>Skin.HasSetting(TWC.ShowCurrentHourly) + !String.IsEmpty(Window.Property(Hourly.IsFetched))</visible>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
					</control>
					<control type="label">
						<description>Time label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Hourly.1.Time)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.1.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.1.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.1.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.1.Temperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.1.Temperature),-100) + !Integer.IsGreater(Window.Property(Hourly.1.Temperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.1.FeelsLike)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.1.FeelsLike),-100) + !Integer.IsGreater(Window.Property(Hourly.1.FeelsLike),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Hourly.1.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
					</control>
					<control type="label">
						<description>Time label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Hourly.2.Time)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.2.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.2.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.2.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.2.Temperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.2.Temperature),-100) + !Integer.IsGreater(Window.Property(Hourly.2.Temperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.2.FeelsLike)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.2.FeelsLike),-100) + !Integer.IsGreater(Window.Property(Hourly.2.FeelsLike),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Hourly.2.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
					</control>
					<control type="label">
						<description>Time label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Hourly.3.Time)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.3.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.3.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.3.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.3.Temperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.3.Temperature),-100) + !Integer.IsGreater(Window.Property(Hourly.3.Temperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.3.FeelsLike)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.3.FeelsLike),-100) + !Integer.IsGreater(Window.Property(Hourly.3.FeelsLike),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Hourly.3.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
					</control>
					<control type="label">
						<description>Time label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Hourly.4.Time)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.4.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.4.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.4.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.4.Temperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.4.Temperature),-100) + !Integer.IsGreater(Window.Property(Hourly.4.Temperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.4.FeelsLike)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.4.FeelsLike),-100) + !Integer.IsGreater(Window.Property(Hourly.4.FeelsLike),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Hourly.4.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
					</control>
					<control type="label">
						<description>Time label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Hourly.5.Time)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.5.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.5.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.5.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.5.Temperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.5.Temperature),-100) + !Integer.IsGreater(Window.Property(Hourly.5.Temperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.5.FeelsLike)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.5.FeelsLike),-100) + !Integer.IsGreater(Window.Property(Hourly.5.FeelsLike),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Hourly.5.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
					</control>
					<control type="label">
						<description>Time label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Hourly.6.Time)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.6.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.6.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.6.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.6.Temperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.6.Temperature),-100) + !Integer.IsGreater(Window.Property(Hourly.6.Temperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.6.FeelsLike)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.6.FeelsLike),-100) + !Integer.IsGreater(Window.Property(Hourly.6.FeelsLike),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Hourly.6.ChancePrecipitation)]</label>
					</control>
				</control>
				<control type="group">
					<width>180</width>
					<control type="image">
						<description>weekday image</description>
						<include>TWC.Current.DailyWeekdayBG</include>
					</control>
					<control type="label">
						<description>Time label</description>
						<include>TWC.Current.DailyDayLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Hourly.7.Time)][/B]</label>
					</control>
					<control type="label">
						<description>Date label</description>
						<include>TWC.Current.DailyDateLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.7.ShortDate)]</label>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.7.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Current.DailyIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.7.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>High Temp label</description>
						<include>TWC.Current.DailyHighLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.7.Temperature)]</label>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.7.Temperature),-100) + !Integer.IsGreater(Window.Property(Hourly.7.Temperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>Low Temp label</description>
						<include>TWC.Current.DailyLowLabelsCommon</include>
						<label>$INFO[Window.Property(Hourly.7.FeelsLike)]</label>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Hourly.7.FeelsLike),-100) + !Integer.IsGreater(Window.Property(Hourly.7.FeelsLike),-1)">Conditional</animation>
					</control>
					<control type="label">
						<description>precip label</description>
						<include>TWC.Current.DailyPrecipitationCommon</include>
						<label>$INFO[Window.Property(Hourly.7.ChancePrecipitation)]</label>
					</control>
				</control>
			</control>
		</control>
	</include>
	<!-- ######################################################################### Daily #########################################################################-->
	<include name="TWC.Daily.DailyWeekdayBG">
		<colordiffuse>30FFFFFF</colordiffuse>
		<texture border="10">DailyWeekdayBG.png</texture>
		<include>TWC.Daily.DailyWeekendBG</include>
	</include>
	<include name="TWC.Daily.DailyWeekendBG">
		<posx>0</posx>
		<posy>0</posy>
		<width>238</width>
		<height>405</height>
		<colordiffuse>30FFFFFF</colordiffuse>
		<texture border="10">DailyWeekendBG.png</texture>
		<aspectratio>stretch</aspectratio>
		<include>TWC.Daily.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Daily.DailyHorizontalSeparator">
		<control type="image">
			<posx>-30</posx>
			<posy>402</posy>
			<width>1185</width>
			<height>3</height>
			<texture>line.png</texture>
		</control>
	</include>
	<include name="TWC.Daily.DailyPrecipitationLabel">
		<control type="fadelabel">
			<description>precip label</description>
			<posx>120</posx>
			<posy>94</posy>
			<width>90</width>
			<align>center</align>
			<aligny>center</aligny>
			<textcolor>$VAR[value_headercolor]</textcolor>
			<font>Font_15</font>
			<include>TWC.Daily.DailyDayLabelsCommon</include>
			<label>[B]$LOCALIZE[31862][/B]</label>
			<scrollout>false</scrollout>
		</control>
	</include>
	<include name="TWC.Daily.DailyPrecipitationCommon">
		<posx>60</posx>
		<posy>123</posy>
		<height>45</height>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<font>Font_23</font>
		<include>TWC.Daily.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Daily.DailyHighLabelsCommon">
		<posy>278</posy>
		<height>45</height>
		<font>Font_15</font>
		<include>TWC.Daily.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Daily.DailyLowLabelsCommon">
		<posy>345</posy>
		<height>45</height>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<font>Font_23</font>
		<include>TWC.Daily.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Daily.DailyIconCommon">
		<posx>-8</posx>
		<posy>90</posy>
		<width>150</width>
		<height>108</height>
		<aspectratio>keep</aspectratio>
		<include>TWC.Daily.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Daily.DailyOutlook">
		<posx>8</posx>
		<posy>202</posy>
		<width>224</width>
		<height>68</height>
		<aligny>top</aligny>
		<font>Font_15</font>
		<include>TWC.Daily.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Daily.DailyDayLabelsCommon">
		<posx>0</posx>
		<posy>8</posy>
		<height>30</height>
		<width>238</width>
		<align>center</align>
		<aligny>center</aligny>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<font>Font_15</font>
		<wrapmultiline>true</wrapmultiline>
	</include>
	<include name="TWC.Daily.DailyDateLabelsCommon">
		<posy>38</posy>
		<font>Font_15</font>
		<include>TWC.Daily.DailyDayLabelsCommon</include>
	</include>
	<include name="TWC.Daily.HeadingCommon">
		<posx>0</posx>
		<posy>-15</posy>
		<width>165</width>
		<height>60</height>
		<font>Font_15</font>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<align>center</align>
		<aligny>top</aligny>
		<wrapmultiline>true</wrapmultiline>
	</include>
	<include name="TWC.Daily.ListDay">
		<posx>0</posx>
		<posy>0</posy>
		<width>165</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="TWC.Daily.ListNoFocusTexture">
		<control type="image">
			<posx>0</posx>
			<posy>0</posy>
			<width>1178</width>
			<height>120</height>
			<texture border="5">darkgrey.png</texture>
		</control>
	</include>
	<include name="TWC.Daily.ListConditionTexture">
		<posx>180</posx>
		<posy>0</posy>
		<width>330</width>
		<height>120</height>
		<colordiffuse>33FFFFFF</colordiffuse>
		<texture border="5">grey.png</texture>
	</include>
	<include name="TWC.Daily.ListConditionWeekendTexture">
		<texture border="5">DailyWeekendListBG.png</texture>
		<include>TWC.Daily.ListConditionTexture</include>
	</include>
	<include name="TWC.Daily.ListOutlookIcon">
		<posx>195</posx>
		<posy>0</posy>
		<width>96</width>
		<height>120</height>
		<align>center</align>
		<aligny>center</aligny>
		<aspectratio>keep</aspectratio>
	</include>
	<include name="TWC.Daily.ListOutlook">
		<posx>315</posx>
		<posy>0</posy>
		<width>180</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
		<wrapmultiline>true</wrapmultiline>
	</include>
	<include name="TWC.Daily.ListHighTemp">
		<posx>510</posx>
		<posy>0</posy>
		<width>135</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="TWC.Daily.ListLowTempTexture">
		<colordiffuse>33FFFFFF</colordiffuse>
		<texture></texture>
		<include>TWC.Daily.ListLowTemp</include>
	</include>
	<include name="TWC.Daily.ListLowTempWeekendTexture">
		<texture border="5">DailyWeekendListBG.png</texture>
		<include>TWC.Daily.ListLowTempTexture</include>
	</include>
	<include name="TWC.Daily.ListLowTemp">
		<posx>645</posx>
		<posy>0</posy>
		<width>135</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="TWC.Daily.ListPrecipitation">
		<posx>780</posx>
		<posy>0</posy>
		<width>135</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="TWC.Daily.ListWindTexture">
		<posx>922</posx>
		<posy>0</posy>
		<width>262</width>
		<height>120</height>
		<colordiffuse>33FFFFFF</colordiffuse>
		<texture border="5">grey.png</texture>
	</include>
	<include name="TWC.Daily.ListWindWeekendTexture">
		<texture border="5">DailyWeekendListBG.png</texture>
		<include>TWC.Daily.ListWindTexture</include>
	</include>
	<include name="TWC.Daily.ListWind">
		<posx>930</posx>
		<posy>0</posy>
		<width>248</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
		<wrapmultiline>true</wrapmultiline>
	</include>
	<include name="TWC.Daily">
		<control type="group">
			<posx>435</posx>
			<posy>90</posy>
			<visible>String.IsEqual(Window.Property(Weather.CurrentView),10days)</visible>
			<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
			<control type="label">
				<description>loading label</description>
				<include>TWC.LoadingLabelCommon</include>
				<visible>String.IsEmpty(Window.Property(Daily.IsFetched))</visible>
			</control>
			<!-- brief view -->
			<control type="group">
				<posx>-8</posx>
				<posy>52</posy>
				<visible>Skin.HasSetting(TWC.ShowDailyDetails) + !String.IsEmpty(Window.Property(Daily.IsFetched))</visible>
				<control type="grouplist">
					<posx>0</posx>
					<posy>0</posy>
					<width>1260</width>
					<itemgap>0</itemgap>
					<orientation>horizontal</orientation>
					<control type="group">
						<width>248</width>
						<control type="image">
							<description>weekday image</description>
							<include>TWC.Daily.DailyWeekdayBG</include>
							<visible>!String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17]) + !String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[11])</visible>
						</control>
						<control type="image">
							<description>weekend image</description>
							<include>TWC.Daily.DailyWeekendBG</include>
							<visible>String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17]) | String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[11])</visible>
						</control>
						<control type="label">
							<description>Day label</description>
							<include>TWC.Daily.DailyDayLabelsCommon</include>
							<label>[B]$INFO[Window.Property(Daily.1.LongDay)][/B]</label>
						</control>
						<control type="label">
							<description>Date label</description>
							<include>TWC.Daily.DailyDateLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.1.ShortDate)]</label>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.1.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.1.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<description>Outlook</description>
							<include>TWC.Daily.DailyOutlook</include>
							<label>$INFO[Window.Property(Daily.1.Outlook)]</label>
						</control>
						<include>TWC.Daily.DailyPrecipitationLabel</include>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.1.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.1.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>High Temp label</description>
							<include>TWC.Daily.DailyHighLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.1.HighTemperature)]</label>
							<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.1.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.1.HighTemperature),-1)">Conditional</animation>
						</control>
						<control type="label">
							<description>Low Temp label</description>
							<include>TWC.Daily.DailyLowLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.1.LowTemperature)]</label>
							<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.1.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.1.LowTemperature),-1)">Conditional</animation>
						</control>
					</control>
					<control type="group">
						<width>248</width>
						<control type="image">
							<description>weekday image</description>
							<include>TWC.Daily.DailyWeekdayBG</include>
							<visible>!String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<description>weekend image</description>
							<include>TWC.Daily.DailyWeekendBG</include>
							<visible>String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<description>Day label</description>
							<include>TWC.Daily.DailyDayLabelsCommon</include>
							<label>[B]$INFO[Window.Property(Daily.2.LongDay)][/B]</label>
						</control>
						<control type="label">
							<description>Date label</description>
							<include>TWC.Daily.DailyDateLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.2.ShortDate)]</label>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.2.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.2.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<description>Outlook</description>
							<include>TWC.Daily.DailyOutlook</include>
							<label>$INFO[Window.Property(Daily.2.Outlook)]</label>
						</control>
						<include>TWC.Daily.DailyPrecipitationLabel</include>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.2.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.2.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>High Temp label</description>
							<include>TWC.Daily.DailyHighLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.2.HighTemperature)]</label>
							<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.2.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.2.HighTemperature),-1)">Conditional</animation>
						</control>
						<control type="label">
							<description>Low Temp label</description>
							<include>TWC.Daily.DailyLowLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.2.LowTemperature)]</label>
							<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.2.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.2.LowTemperature),-1)">Conditional</animation>
						</control>
					</control>
					<control type="group">
						<width>248</width>
						<control type="image">
							<description>weekday image</description>
							<include>TWC.Daily.DailyWeekdayBG</include>
							<visible>!String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<description>weekend image</description>
							<include>TWC.Daily.DailyWeekendBG</include>
							<visible>String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<description>Day label</description>
							<include>TWC.Daily.DailyDayLabelsCommon</include>
							<label>[B]$INFO[Window.Property(Daily.3.LongDay)][/B]</label>
						</control>
						<control type="label">
							<description>Date label</description>
							<include>TWC.Daily.DailyDateLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.3.ShortDate)]</label>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.3.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.3.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<description>Outlook</description>
							<include>TWC.Daily.DailyOutlook</include>
							<label>$INFO[Window.Property(Daily.3.Outlook)]</label>
						</control>
						<include>TWC.Daily.DailyPrecipitationLabel</include>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.3.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.3.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>High Temp label</description>
							<include>TWC.Daily.DailyHighLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.3.HighTemperature)]</label>
							<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.3.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.3.HighTemperature),-1)">Conditional</animation>
						</control>
						<control type="label">
							<description>Low Temp label</description>
							<include>TWC.Daily.DailyLowLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.3.LowTemperature)]</label>
							<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.3.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.3.LowTemperature),-1)">Conditional</animation>
						</control>
					</control>
					<control type="group">
						<width>248</width>
						<control type="image">
							<description>weekday image</description>
							<include>TWC.Daily.DailyWeekdayBG</include>
							<visible>!String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<description>weekend image</description>
							<include>TWC.Daily.DailyWeekendBG</include>
							<visible>String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<description>Day label</description>
							<include>TWC.Daily.DailyDayLabelsCommon</include>
							<label>[B]$INFO[Window.Property(Daily.4.LongDay)][/B]</label>
						</control>
						<control type="label">
							<description>Date label</description>
							<include>TWC.Daily.DailyDateLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.4.ShortDate)]</label>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.4.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.4.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<description>Outlook</description>
							<include>TWC.Daily.DailyOutlook</include>
							<label>$INFO[Window.Property(Daily.4.Outlook)]</label>
						</control>
						<include>TWC.Daily.DailyPrecipitationLabel</include>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.4.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.4.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>High Temp label</description>
							<include>TWC.Daily.DailyHighLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.4.HighTemperature)]</label>
							<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.4.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.4.HighTemperature),-1)">Conditional</animation>
						</control>
						<control type="label">
							<description>Low Temp label</description>
							<include>TWC.Daily.DailyLowLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.4.LowTemperature)]</label>
							<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.4.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.4.LowTemperature),-1)">Conditional</animation>
						</control>
					</control>
					<control type="group">
						<width>248</width>
						<control type="image">
							<description>weekday image</description>
							<include>TWC.Daily.DailyWeekdayBG</include>
							<visible>!String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<description>weekend image</description>
							<include>TWC.Daily.DailyWeekendBG</include>
							<visible>String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<description>Day label</description>
							<include>TWC.Daily.DailyDayLabelsCommon</include>
							<label>[B]$INFO[Window.Property(Daily.5.LongDay)][/B]</label>
						</control>
						<control type="label">
							<description>Date label</description>
							<include>TWC.Daily.DailyDateLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.5.ShortDate)]</label>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.5.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.5.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<description>Outlook</description>
							<include>TWC.Daily.DailyOutlook</include>
							<label>$INFO[Window.Property(Daily.5.Outlook)]</label>
						</control>
						<include>TWC.Daily.DailyPrecipitationLabel</include>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.5.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.5.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>High Temp label</description>
							<include>TWC.Daily.DailyHighLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.5.HighTemperature)]</label>
							<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.5.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.5.HighTemperature),-1)">Conditional</animation>
						</control>
						<control type="label">
							<description>Low Temp label</description>
							<include>TWC.Daily.DailyLowLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.5.LowTemperature)]</label>
							<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.5.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.5.LowTemperature),-1)">Conditional</animation>
						</control>
					</control>
				</control>
			</control>
			<control type="group">
				<posx>-8</posx>
				<posy>468</posy>
				<visible>Skin.HasSetting(TWC.ShowDailyDetails) + !String.IsEmpty(Window.Property(Daily.IsFetched))</visible>
				<control type="grouplist">
					<posx>0</posx>
					<posy>0</posy>
					<width>1260</width>
					<itemgap>0</itemgap>
					<orientation>horizontal</orientation>
					<control type="group">
						<width>248</width>
						<control type="image">
							<description>weekday image</description>
							<include>TWC.Daily.DailyWeekdayBG</include>
							<visible>!String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<description>weekend image</description>
							<include>TWC.Daily.DailyWeekendBG</include>
							<visible>String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<description>Day label</description>
							<include>TWC.Daily.DailyDayLabelsCommon</include>
							<label>[B]$INFO[Window.Property(Daily.6.LongDay)][/B]</label>
						</control>
						<control type="label">
							<description>Date label</description>
							<include>TWC.Daily.DailyDateLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.6.ShortDate)]</label>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.6.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.6.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<description>Outlook</description>
							<include>TWC.Daily.DailyOutlook</include>
							<label>$INFO[Window.Property(Daily.6.Outlook)]</label>
						</control>
						<include>TWC.Daily.DailyPrecipitationLabel</include>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.6.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.6.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>High Temp label</description>
							<include>TWC.Daily.DailyHighLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.6.HighTemperature)]</label>
							<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.6.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.6.HighTemperature),-1)">Conditional</animation>
						</control>
						<control type="label">
							<description>Low Temp label</description>
							<include>TWC.Daily.DailyLowLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.6.LowTemperature)]</label>
							<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.6.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.6.LowTemperature),-1)">Conditional</animation>
						</control>
					</control>
					<control type="group">
						<width>248</width>
						<control type="image">
							<description>weekday image</description>
							<include>TWC.Daily.DailyWeekdayBG</include>
							<visible>!String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<description>weekend image</description>
							<include>TWC.Daily.DailyWeekendBG</include>
							<visible>String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<description>Day label</description>
							<include>TWC.Daily.DailyDayLabelsCommon</include>
							<label>[B]$INFO[Window.Property(Daily.7.LongDay)][/B]</label>
						</control>
						<control type="label">
							<description>Date label</description>
							<include>TWC.Daily.DailyDateLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.7.ShortDate)]</label>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.7.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.7.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<description>Outlook</description>
							<include>TWC.Daily.DailyOutlook</include>
							<label>$INFO[Window.Property(Daily.7.Outlook)]</label>
						</control>
						<include>TWC.Daily.DailyPrecipitationLabel</include>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.7.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.7.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>High Temp label</description>
							<include>TWC.Daily.DailyHighLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.7.HighTemperature)]</label>
							<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.7.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.7.HighTemperature),-1)">Conditional</animation>
						</control>
						<control type="label">
							<description>Low Temp label</description>
							<include>TWC.Daily.DailyLowLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.7.LowTemperature)]</label>
							<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.7.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.7.LowTemperature),-1)">Conditional</animation>
						</control>
					</control>
					<control type="group">
						<width>248</width>
						<control type="image">
							<description>weekday image</description>
							<include>TWC.Daily.DailyWeekdayBG</include>
							<visible>!String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<description>weekend image</description>
							<include>TWC.Daily.DailyWeekendBG</include>
							<visible>String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<description>Day label</description>
							<include>TWC.Daily.DailyDayLabelsCommon</include>
							<label>[B]$INFO[Window.Property(Daily.8.LongDay)][/B]</label>
						</control>
						<control type="label">
							<description>Date label</description>
							<include>TWC.Daily.DailyDateLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.8.ShortDate)]</label>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.8.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.8.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<description>Outlook</description>
							<include>TWC.Daily.DailyOutlook</include>
							<label>$INFO[Window.Property(Daily.8.Outlook)]</label>
						</control>
						<include>TWC.Daily.DailyPrecipitationLabel</include>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.8.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.8.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>High Temp label</description>
							<include>TWC.Daily.DailyHighLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.8.HighTemperature)]</label>
							<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.8.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.8.HighTemperature),-1)">Conditional</animation>
						</control>
						<control type="label">
							<description>Low Temp label</description>
							<include>TWC.Daily.DailyLowLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.8.LowTemperature)]</label>
							<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.8.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.8.LowTemperature),-1)">Conditional</animation>
						</control>
					</control>
					<control type="group">
						<width>248</width>
						<control type="image">
							<description>weekday image</description>
							<include>TWC.Daily.DailyWeekdayBG</include>
							<visible>!String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<description>weekend image</description>
							<include>TWC.Daily.DailyWeekendBG</include>
							<visible>String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<description>Day label</description>
							<include>TWC.Daily.DailyDayLabelsCommon</include>
							<label>[B]$INFO[Window.Property(Daily.9.LongDay)][/B]</label>
						</control>
						<control type="label">
							<description>Date label</description>
							<include>TWC.Daily.DailyDateLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.9.ShortDate)]</label>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.9.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.9.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<description>Outlook</description>
							<include>TWC.Daily.DailyOutlook</include>
							<label>$INFO[Window.Property(Daily.9.Outlook)]</label>
						</control>
						<include>TWC.Daily.DailyPrecipitationLabel</include>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.9.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.9.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>High Temp label</description>
							<include>TWC.Daily.DailyHighLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.9.HighTemperature)]</label>
							<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.9.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.9.HighTemperature),-1)">Conditional</animation>
						</control>
						<control type="label">
							<description>Low Temp label</description>
							<include>TWC.Daily.DailyLowLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.9.LowTemperature)]</label>
							<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.9.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.9.LowTemperature),-1)">Conditional</animation>
						</control>
					</control>
					<control type="group">
						<width>248</width>
						<visible>!String.IsEmpty(Window.Property(Daily.10.LongDay))</visible>
						<control type="image">
							<description>weekday image</description>
							<include>TWC.Daily.DailyWeekdayBG</include>
							<visible>!String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<description>weekend image</description>
							<include>TWC.Daily.DailyWeekendBG</include>
							<visible>String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<description>Day label</description>
							<include>TWC.Daily.DailyDayLabelsCommon</include>
							<label>[B]$INFO[Window.Property(Daily.10.LongDay)][/B]</label>
						</control>
						<control type="label">
							<description>Date label</description>
							<include>TWC.Daily.DailyDateLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.10.ShortDate)]</label>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.10.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.DailyIconCommon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.10.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<description>Outlook</description>
							<include>TWC.Daily.DailyOutlook</include>
							<label>$INFO[Window.Property(Daily.10.Outlook)]</label>
						</control>
						<include>TWC.Daily.DailyPrecipitationLabel</include>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.10.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>precip label</description>
							<include>TWC.Daily.DailyPrecipitationCommon</include>
							<label>$INFO[Window.Property(Daily.10.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>High Temp label</description>
							<include>TWC.Daily.DailyHighLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.10.HighTemperature)]</label>
							<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.10.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.10.HighTemperature),-1)">Conditional</animation>
						</control>
						<control type="label">
							<description>Low Temp label</description>
							<include>TWC.Daily.DailyLowLabelsCommon</include>
							<label>$INFO[Window.Property(Daily.10.LowTemperature)]</label>
							<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Daily.10.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Daily.10.LowTemperature),-1)">Conditional</animation>
						</control>
					</control>
				</control>
			</control>
			<!-- details view -->
			<control type="group">
				<posy>52</posy>
				<visible>!Skin.HasSetting(TWC.ShowDailyDetails) + !String.IsEmpty(Window.Property(Daily.IsFetched))</visible>
				<!-- List Headings -->
				<control type="group">
					<control type="label">
						<include>TWC.Daily.HeadingCommon</include>
						<label>[CR]$LOCALIZE[552]</label>
					</control>
					<control type="label">
						<posx>180</posx>
						<width>330</width>
						<include>TWC.Daily.HeadingCommon</include>
						<label>[CR]$LOCALIZE[33020]</label>
					</control>
					<control type="label">
						<posx>510</posx>
						<width>135</width>
						<include>TWC.Daily.HeadingCommon</include>
						<label>$LOCALIZE[393][CR]$LOCALIZE[401]</label>
					</control>
					<control type="label">
						<posx>645</posx>
						<width>135</width>
						<include>TWC.Daily.HeadingCommon</include>
						<label>$LOCALIZE[391][CR]$LOCALIZE[401]</label>
					</control>
					<control type="fadelabel">
						<posx>780</posx>
						<width>135</width>
						<include>TWC.Daily.HeadingCommon</include>
						<label>31862</label>
						<scrollout>false</scrollout>
					</control>
					<control type="label">
						<posx>915</posx>
						<width>262</width>
						<include>TWC.Daily.HeadingCommon</include>
						<label>[CR]$LOCALIZE[404]</label>
					</control>
				</control>
				<!-- Forecast list -->
				<control type="grouplist" id="700">
					<posx>0</posx>
					<posy>68</posy>
					<width>1192</width>
					<height>738</height>
					<itemgap>0</itemgap>
					<orientation>vertical</orientation>
					<onleft>9900</onleft>
					<onright>70000</onright>
					<onup>700</onup>
					<ondown>700</ondown>
					<pagecontrol>70000</pagecontrol>
					<scrolltime>200</scrolltime>
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<!-- Day 1 -->
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Daily.1.ShortDay))</visible>
						<height>123</height>
						<include>TWC.Daily.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Daily.ListDay</include>
							<label>[B]$INFO[Window.Property(Daily.1.ShortDay)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Daily.1.ShortDate)][/COLOR]</label>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) + !String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) | String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.1.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.1.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListOutlook</include>
							<label>$INFO[Window.Property(Daily.1.Outlook)]</label>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.1.HighTemperature)][/B]</label>
							<visible>!String.IsEqual(Window.Property(Daily.1.HighTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.1.HighTemperature)][/B]</label>
							<visible>String.IsEqual(Window.Property(Daily.1.HighTemperature),n/a)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) + !String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) | String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.1.LowTemperature)]</label>
							<visible>!String.IsEqual(Window.Property(Daily.1.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.1.LowTemperature)]</label>
							<visible>String.IsEqual(Window.Property(Daily.1.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.1.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.1.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) + !String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[11]) | String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListWind</include>
							<label>$INFO[Window.Property(Daily.1.WindDirection)][CR]$INFO[Window.Property(Daily.1.WindSpeed)]</label>
						</control>
					</control>
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<!-- Day 2 -->
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Daily.2.ShortDay))</visible>
						<height>123</height>
						<include>TWC.Daily.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Daily.ListDay</include>
							<label>[B]$INFO[Window.Property(Daily.2.ShortDay)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Daily.2.ShortDate)][/COLOR]</label>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.2.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.2.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListOutlook</include>
							<label>$INFO[Window.Property(Daily.2.Outlook)]</label>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.2.HighTemperature)][/B]</label>
							<visible>!String.IsEqual(Window.Property(Daily.2.HighTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.2.HighTemperature)][/B]</label>
							<visible>String.IsEqual(Window.Property(Daily.2.HighTemperature),n/a)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.2.LowTemperature)]</label>
							<visible>!String.IsEqual(Window.Property(Daily.2.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.2.LowTemperature)]</label>
							<visible>String.IsEqual(Window.Property(Daily.2.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.2.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.2.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.2.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListWind</include>
							<label>$INFO[Window.Property(Daily.2.WindDirection)][CR]$INFO[Window.Property(Daily.2.WindSpeed)]</label>
						</control>
					</control>
					<!-- Day 3 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Daily.3.ShortDay))</visible>
						<height>123</height>
						<include>TWC.Daily.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Daily.ListDay</include>
							<label>[B]$INFO[Window.Property(Daily.3.ShortDay)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Daily.3.ShortDate)][/COLOR]</label>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.3.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.3.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListOutlook</include>
							<label>$INFO[Window.Property(Daily.3.Outlook)]</label>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.3.HighTemperature)][/B]</label>
							<visible>!String.IsEqual(Window.Property(Daily.3.HighTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.3.HighTemperature)][/B]</label>
							<visible>String.IsEqual(Window.Property(Daily.3.HighTemperature),n/a)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.3.LowTemperature)]</label>
							<visible>!String.IsEqual(Window.Property(Daily.3.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.3.LowTemperature)]</label>
							<visible>String.IsEqual(Window.Property(Daily.3.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.3.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.3.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.3.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListWind</include>
							<label>$INFO[Window.Property(Daily.3.WindDirection)][CR]$INFO[Window.Property(Daily.3.WindSpeed)]</label>
						</control>
					</control>
					<!-- Day 4 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Daily.4.ShortDay))</visible>
						<height>123</height>
						<include>TWC.Daily.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Daily.ListDay</include>
							<label>[B]$INFO[Window.Property(Daily.4.ShortDay)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Daily.4.ShortDate)][/COLOR]</label>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.4.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.4.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListOutlook</include>
							<label>$INFO[Window.Property(Daily.4.Outlook)]</label>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.4.HighTemperature)][/B]</label>
							<visible>!String.IsEqual(Window.Property(Daily.4.HighTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.4.HighTemperature)][/B]</label>
							<visible>String.IsEqual(Window.Property(Daily.4.HighTemperature),n/a)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.4.LowTemperature)]</label>
							<visible>!String.IsEqual(Window.Property(Daily.4.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.4.LowTemperature)]</label>
							<visible>String.IsEqual(Window.Property(Daily.4.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.4.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.4.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.4.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListWind</include>
							<label>$INFO[Window.Property(Daily.4.WindDirection)][CR]$INFO[Window.Property(Daily.4.WindSpeed)]</label>
						</control>
					</control>
					<!-- Day 5 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Daily.5.ShortDay))</visible>
						<height>123</height>
						<include>TWC.Daily.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Daily.ListDay</include>
							<label>[B]$INFO[Window.Property(Daily.5.ShortDay)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Daily.5.ShortDate)][/COLOR]</label>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.5.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.5.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListOutlook</include>
							<label>$INFO[Window.Property(Daily.5.Outlook)]</label>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.5.HighTemperature)][/B]</label>
							<visible>!String.IsEqual(Window.Property(Daily.5.HighTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.5.HighTemperature)][/B]</label>
							<visible>String.IsEqual(Window.Property(Daily.5.HighTemperature),n/a)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.5.LowTemperature)]</label>
							<visible>!String.IsEqual(Window.Property(Daily.5.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.5.LowTemperature)]</label>
							<visible>String.IsEqual(Window.Property(Daily.5.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.5.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.5.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.5.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListWind</include>
							<label>$INFO[Window.Property(Daily.5.WindDirection)][CR]$INFO[Window.Property(Daily.5.WindSpeed)]</label>
						</control>
					</control>
					<!-- Day 6 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Daily.6.ShortDay))</visible>
						<height>123</height>
						<include>TWC.Daily.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Daily.ListDay</include>
							<label>[B]$INFO[Window.Property(Daily.6.ShortDay)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Daily.6.ShortDate)][/COLOR]</label>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.6.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.6.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListOutlook</include>
							<label>$INFO[Window.Property(Daily.6.Outlook)]</label>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.6.HighTemperature)][/B]</label>
							<visible>!String.IsEqual(Window.Property(Daily.6.HighTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.6.HighTemperature)][/B]</label>
							<visible>String.IsEqual(Window.Property(Daily.6.HighTemperature),n/a)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.6.LowTemperature)]</label>
							<visible>!String.IsEqual(Window.Property(Daily.6.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.6.LowTemperature)]</label>
							<visible>String.IsEqual(Window.Property(Daily.6.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.6.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.6.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.6.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListWind</include>
							<label>$INFO[Window.Property(Daily.6.WindDirection)][CR]$INFO[Window.Property(Daily.6.WindSpeed)]</label>
						</control>
					</control>
					<!-- Day 7 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Daily.7.ShortDay))</visible>
						<height>123</height>
						<include>TWC.Daily.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Daily.ListDay</include>
							<label>[B]$INFO[Window.Property(Daily.7.ShortDay)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Daily.7.ShortDate)][/COLOR]</label>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.7.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.7.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListOutlook</include>
							<label>$INFO[Window.Property(Daily.7.Outlook)]</label>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.7.HighTemperature)][/B]</label>
							<visible>!String.IsEqual(Window.Property(Daily.7.HighTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.7.HighTemperature)][/B]</label>
							<visible>String.IsEqual(Window.Property(Daily.7.HighTemperature),n/a)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.7.LowTemperature)]</label>
							<visible>!String.IsEqual(Window.Property(Daily.7.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.7.LowTemperature)]</label>
							<visible>String.IsEqual(Window.Property(Daily.7.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.7.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.7.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.7.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListWind</include>
							<label>$INFO[Window.Property(Daily.7.WindDirection)][CR]$INFO[Window.Property(Daily.7.WindSpeed)]</label>
						</control>
					</control>
					<!-- Day 8 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Daily.8.ShortDay))</visible>
						<height>123</height>
						<include>TWC.Daily.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Daily.ListDay</include>
							<label>[B]$INFO[Window.Property(Daily.8.ShortDay)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Daily.8.ShortDate)][/COLOR]</label>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.8.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.8.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListOutlook</include>
							<label>$INFO[Window.Property(Daily.8.Outlook)]</label>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.8.HighTemperature)][/B]</label>
							<visible>!String.IsEqual(Window.Property(Daily.8.HighTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.8.HighTemperature)][/B]</label>
							<visible>String.IsEqual(Window.Property(Daily.8.HighTemperature),n/a)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.8.LowTemperature)]</label>
							<visible>!String.IsEqual(Window.Property(Daily.8.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.8.LowTemperature)]</label>
							<visible>String.IsEqual(Window.Property(Daily.8.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.8.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.8.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.8.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListWind</include>
							<label>$INFO[Window.Property(Daily.8.WindDirection)][CR]$INFO[Window.Property(Daily.8.WindSpeed)]</label>
						</control>
					</control>
					<!-- Day 9 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Daily.9.ShortDay))</visible>
						<height>123</height>
						<include>TWC.Daily.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Daily.ListDay</include>
							<label>[B]$INFO[Window.Property(Daily.9.ShortDay)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Daily.9.ShortDate)][/COLOR]</label>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.9.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.9.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListOutlook</include>
							<label>$INFO[Window.Property(Daily.9.Outlook)]</label>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.9.HighTemperature)][/B]</label>
							<visible>!String.IsEqual(Window.Property(Daily.9.HighTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.9.HighTemperature)][/B]</label>
							<visible>String.IsEqual(Window.Property(Daily.9.HighTemperature),n/a)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.9.LowTemperature)]</label>
							<visible>!String.IsEqual(Window.Property(Daily.9.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.9.LowTemperature)]</label>
							<visible>String.IsEqual(Window.Property(Daily.9.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.9.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.9.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.9.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListWind</include>
							<label>$INFO[Window.Property(Daily.9.WindDirection)][CR]$INFO[Window.Property(Daily.9.WindSpeed)]</label>
						</control>
					</control>
					<!-- Day 10 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Daily.10.ShortDay))</visible>
						<height>123</height>
						<include>TWC.Daily.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Daily.ListDay</include>
							<label>[B]$INFO[Window.Property(Daily.10.ShortDay)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Daily.10.ShortDate)][/COLOR]</label>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListConditionWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Daily.10.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Daily.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.10.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListOutlook</include>
							<label>$INFO[Window.Property(Daily.10.Outlook)]</label>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.10.HighTemperature)][/B]</label>
							<visible>!String.IsEqual(Window.Property(Daily.10.HighTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListHighTemp</include>
							<label>[B]$INFO[Window.Property(Daily.10.HighTemperature)][/B]</label>
							<visible>String.IsEqual(Window.Property(Daily.10.HighTemperature),n/a)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListLowTempWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.10.LowTemperature)]</label>
							<visible>!String.IsEqual(Window.Property(Daily.10.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListLowTemp</include>
							<label>$INFO[Window.Property(Daily.10.LowTemperature)]</label>
							<visible>String.IsEqual(Window.Property(Daily.10.LowTemperature),n/a)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.10.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListPrecipitation</include>
							<label>$INFO[Window.Property(Daily.10.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindTexture</include>
							<visible>!String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) + !String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="image">
							<include>TWC.Daily.ListWindWeekendTexture</include>
							<visible>String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[16]) | String.IsEqual(Window.Property(Daily.10.LongDay),$LOCALIZE[17])</visible>
						</control>
						<control type="label">
							<include>TWC.Daily.ListWind</include>
							<label>$INFO[Window.Property(Daily.10.WindDirection)][CR]$INFO[Window.Property(Daily.10.WindSpeed)]</label>
						</control>
					</control>
				</control>
				<!-- Scrollbar for forecast list -->
				<control type="scrollbar" id="70000">
					<description>Scroll Bar</description>
					<posx>1200</posx>
					<posy>68</posy>
					<height>738</height>
					<include>TWC.ScrollbarCommon</include>
					<onleft>SetFocus(51)</onleft>
					<onright>SetFocus(51)</onright>
				</control>
			</control>
		</control>
	</include>
	<!-- ######################################################################### Hourly #########################################################################-->
	<include name="TWC.Hourly.HeadingCommon">
		<posx>0</posx>
		<posy>-15</posy>
		<width>165</width>
		<height>60</height>
		<font>Font_15</font>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<align>center</align>
		<aligny>top</aligny>
		<wrapmultiline>true</wrapmultiline>
	</include>
	<include name="TWC.Hourly.ListNoFocusTexture">
		<control type="image">
			<posx>0</posx>
			<posy>0</posy>
			<width>1178</width>
			<height>120</height>
			<texture></texture>
		</control>
	</include>
	<include name="TWC.Hourly.ListTime">
		<posx>0</posx>
		<posy>0</posy>
		<width>165</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="TWC.Hourly.ListConditionTexture">
		<control type="image">
			<posx>180</posx>
			<posy>0</posy>
			<width>330</width>
			<height>120</height>
			<colordiffuse>33FFFFFF</colordiffuse>
			<texture></texture>
		</control>
	</include>
	<include name="TWC.Hourly.ListOutlookIcon">
		<posx>195</posx>
		<posy>0</posy>
		<width>96</width>
		<height>120</height>
		<align>center</align>
		<aligny>center</aligny>
		<aspectratio>keep</aspectratio>
	</include>
	<include name="TWC.Hourly.ListOutlook">
		<posx>300</posx>
		<posy>0</posy>
		<width>210</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
		<wrapmultiline>true</wrapmultiline>
	</include>
	<include name="TWC.Hourly.ListTempFeelsLike">
		<posx>510</posx>
		<posy>0</posy>
		<width>135</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="TWC.Hourly.ListHumidityTexture">
		<control type="image">
			<colordiffuse>33FFFFFF</colordiffuse>
			<texture></texture>
			<include>TWC.Hourly.ListHumidity</include>
		</control>
	</include>
	<include name="TWC.Hourly.ListPrecipitation">
		<posx>780</posx>
		<posy>0</posy>
		<width>135</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="TWC.Hourly.ListHumidity">
		<posx>645</posx>
		<posy>0</posy>
		<width>135</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="TWC.Hourly.ListWindTexture">
		<control type="image">
			<colordiffuse>33FFFFFF</colordiffuse>
			<texture></texture>
			<include>TWC.Hourly.ListWind</include>
		</control>
	</include>
	<include name="TWC.Hourly.ListWind">
		<posx>922</posx>
		<posy>0</posy>
		<width>262</width>
		<height>120</height>
		<font>Font_15</font>
		<selectedcolor>white</selectedcolor>
		<align>center</align>
		<aligny>center</aligny>
		<wrapmultiline>true</wrapmultiline>
	</include>
	<include name="TWC.Hourly">
		<control type="group">
			<posx>435</posx>
			<posy>90</posy>
			<visible>String.IsEqual(Window.Property(Weather.CurrentView),hourly)</visible>
			<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
			<control type="label">
				<description>loading label</description>
				<include>TWC.LoadingLabelCommon</include>
				<visible>String.IsEmpty(Window.Property(Hourly.IsFetched))</visible>
			</control>
			<!-- details view -->
			<control type="group">
				<posy>52</posy>
				<visible>!String.IsEmpty(Window.Property(Hourly.IsFetched))</visible>
				<!-- List Headings -->
				<control type="group">
					<control type="label">
						<include>TWC.Hourly.HeadingCommon</include>
						<label>[CR]$LOCALIZE[555]</label>
					</control>
					<control type="label">
						<posx>180</posx>
						<width>330</width>
						<include>TWC.Hourly.HeadingCommon</include>
						<label>[CR]$LOCALIZE[33020]</label>
					</control>
					<control type="label">
						<posx>510</posx>
						<width>135</width>
						<include>TWC.Hourly.HeadingCommon</include>
						<label>$LOCALIZE[401][CR]$LOCALIZE[402]</label>
					</control>
					<control type="label">
						<posx>645</posx>
						<width>135</width>
						<include>TWC.Hourly.HeadingCommon</include>
						<label>[CR]$LOCALIZE[406]</label>
					</control>
					<control type="fadelabel">
						<posx>780</posx>
						<width>135</width>
						<include>TWC.Hourly.HeadingCommon</include>
						<label>31862</label>
						<scrollout>false</scrollout>
					</control>
					<control type="label">
						<posx>915</posx>
						<width>262</width>
						<include>TWC.Hourly.HeadingCommon</include>
						<label>[CR]$LOCALIZE[404]</label>
					</control>
				</control>
				<!-- Forecast list -->
				<control type="grouplist" id="600">
					<posx>0</posx>
					<posy>68</posy>
					<width>1192</width>
					<height>738</height>
					<itemgap>0</itemgap>
					<orientation>vertical</orientation>
					<onleft>50</onleft>
					<onright>6000</onright>
					<onup>600</onup>
					<ondown>600</ondown>
					<pagecontrol>6000</pagecontrol>
					<scrolltime>200</scrolltime>
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<!-- Hour 1 -->
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.1.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.1.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.1.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.1.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.1.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.1.Outlook)]$INFO[Window.Property(Hourly.1.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.1.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.1.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.1.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.1.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.1.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.1.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.1.WindDirection)][CR]$INFO[Window.Property(Hourly.1.WindSpeed)]</label>
						</control>
					</control>
					<!-- Hour 2 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.2.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.2.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.2.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.2.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.2.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.2.Outlook)]$INFO[Window.Property(Hourly.2.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.2.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.2.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.2.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.2.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.2.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.2.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.2.WindDirection)][CR]$INFO[Window.Property(Hourly.2.WindSpeed)]</label>
						</control>
					</control>
					<!-- Hour 3 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.3.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.3.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.3.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.3.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.3.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.3.Outlook)]$INFO[Window.Property(Hourly.3.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.3.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.3.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.3.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.3.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.3.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.3.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.3.WindDirection)][CR]$INFO[Window.Property(Hourly.3.WindSpeed)]</label>
						</control>
					</control>
					<!-- Hour 4 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.4.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.4.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.4.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.4.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.4.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.4.Outlook)]$INFO[Window.Property(Hourly.4.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.4.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.4.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.4.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.4.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.4.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.4.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.4.WindDirection)][CR]$INFO[Window.Property(Hourly.4.WindSpeed)]</label>
						</control>
					</control>
					<!-- Hour 5 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.5.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.5.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.5.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.5.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.5.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.5.Outlook)]$INFO[Window.Property(Hourly.5.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.5.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.5.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.5.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.5.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.5.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.5.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.5.WindDirection)][CR]$INFO[Window.Property(Hourly.5.WindSpeed)]</label>
						</control>
					</control>
					<!-- Hour 6 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.6.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.6.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.6.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.6.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.6.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.6.Outlook)]$INFO[Window.Property(Hourly.6.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.6.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.6.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.6.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.6.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.6.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.6.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.6.WindDirection)][CR]$INFO[Window.Property(Hourly.6.WindSpeed)]</label>
						</control>
					</control>
					<!-- Hour 7 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.7.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.7.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.7.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.7.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.7.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.7.Outlook)]$INFO[Window.Property(Hourly.7.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.7.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.7.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.7.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.7.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.7.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.7.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.7.WindDirection)][CR]$INFO[Window.Property(Hourly.7.WindSpeed)]</label>
						</control>
					</control>
					<!-- Hour 8 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.8.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.8.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.8.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.8.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.8.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.8.Outlook)]$INFO[Window.Property(Hourly.8.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.8.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.8.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.8.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.8.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.8.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.8.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.8.WindDirection)][CR]$INFO[Window.Property(Hourly.8.WindSpeed)]</label>
						</control>
					</control>
					<!-- Hour 9 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.9.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.9.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.9.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.9.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.9.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.9.Outlook)]$INFO[Window.Property(Hourly.9.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.9.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.9.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.9.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.9.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.9.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.9.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.9.WindDirection)][CR]$INFO[Window.Property(Hourly.9.WindSpeed)]</label>
						</control>
					</control>
					<!-- Hour 10 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.10.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.10.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.10.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.10.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.10.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.10.Outlook)]$INFO[Window.Property(Hourly.10.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.10.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.10.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.10.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.10.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.10.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.10.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.10.WindDirection)][CR]$INFO[Window.Property(Hourly.10.WindSpeed)]</label>
						</control>
					</control>
					<!-- Hour 11 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.11.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.11.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.11.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.11.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.11.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.11.Outlook)]$INFO[Window.Property(Hourly.11.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.11.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.11.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.11.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.11.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.11.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.11.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.11.WindDirection)][CR]$INFO[Window.Property(Hourly.11.WindSpeed)]</label>
						</control>
					</control>
					<!-- Hour 12 -->
					<include>TWC.Daily.DailyHorizontalSeparator</include>
					<control type="group">
						<visible>!String.IsEmpty(Window.Property(Hourly.12.Time))</visible>
						<height>123</height>
						<include>TWC.Hourly.ListNoFocusTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListTime</include>
							<label>[B]$INFO[Window.Property(Hourly.12.Time)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.12.ShortDate)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListConditionTexture</include>
						<control type="image">
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Hourly.12.OutlookIcon)]</texture>
							<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="image">
							<description>Weather image</description>
							<include>TWC.Hourly.ListOutlookIcon</include>
							<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Hourly.12.OutlookIcon)]</texture>
							<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListOutlook</include>
							<label>$INFO[Window.Property(Hourly.12.Outlook)]$INFO[Window.Property(Hourly.12.Sunrise),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33027]: ,[/COLOR]]$INFO[Window.Property(Hourly.12.Sunset),[CR][COLOR=$VAR[value_headercolor]]$LOCALIZE[33028]: ,[/COLOR]]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListTempFeelsLike</include>
							<label>[B]$INFO[Window.Property(Hourly.12.Temperature)][/B][CR][COLOR=$VAR[value_headercolor]]$INFO[Window.Property(Hourly.12.FeelsLike)][/COLOR]</label>
						</control>
						<include>TWC.Hourly.ListHumidityTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListHumidity</include>
							<label>$INFO[Window.Property(Hourly.12.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.12.ChancePrecipitation)]</label>
							<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<include>TWC.Hourly.ListPrecipitation</include>
							<label>$INFO[Window.Property(Hourly.12.Precipitation)]</label>
							<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<include>TWC.Hourly.ListWindTexture</include>
						<control type="label">
							<include>TWC.Hourly.ListWind</include>
							<label>$INFO[Window.Property(Hourly.12.WindDirection)][CR]$INFO[Window.Property(Hourly.12.WindSpeed)]</label>
						</control>
					</control>
				</control>
				<!-- Scrollbar for forecast list -->
				<control type="scrollbar" id="6000">
					<description>Scroll Bar</description>
					<posx>1200</posx>
					<posy>68</posy>
					<height>738</height>
					<include>TWC.ScrollbarCommon</include>
					<onleft>SetFocus(51)</onleft>
					<onright>SetFocus(51)</onright>
				</control>
			</control>
		</control>
	</include>
	<!-- ######################################################################### 36Hour #########################################################################-->
	<include name="TWC.36Hour.PeriodLabelsCommon">
		<posx>0</posx>
		<posy>0</posy>
		<width>390</width>
		<height>36</height>
		<font>Font_15</font>
		<aligny>center</aligny>
		<align>center</align>
	</include>
	<include name="TWC.36Hour.PeriodIconCommon">
		<posx>0</posx>
		<posy>82</posy>
		<width>192</width>
		<height>180</height>
		<aspectratio>keep</aspectratio>
	</include>
	<include name="TWC.36Hour.PeriodOutlookCommon">
		<posx>0</posx>
		<posy>278</posy>
		<width>192</width>
		<height>192</height>
		<font>Font_15</font>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<aligny>top</aligny>
		<align>center</align>
		<wrapmultiline>true</wrapmultiline>
	</include>
	<include name="TWC.36Hour.PeriodTemperatureHeadingCommon">
		<posx>195</posx>
		<posy>81</posy>
		<width>195</width>
		<height>30</height>
		<font>Font_15</font>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<aligny>center</aligny>
		<align>center</align>
	</include>
	<include name="TWC.36Hour.PeriodTemperatureCommon">
		<posy>128</posy>
		<font>Font_15</font>
		<include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
	</include>
	<include name="TWC.36Hour.PeriodPrecipitationHeadingCommon">
		<control type="fadelabel">
			<description>precip title</description>
			<posx>180</posx>
			<width>210</width>
			<posy>188</posy>
			<font>Font_15</font>
			<include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
			<label>[B]$LOCALIZE[31862][/B]</label>
			<scrollout>false</scrollout>
		</control>
	</include>
	<include name="TWC.36Hour.PeriodPrecipitationCommon">
		<posy>225</posy>
		<font>Font_23</font>
		<include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
	</include>
	<include name="TWC.36Hour.PeriodForecastHeadingCommon">
		<control type="label">
			<posy>357</posy>
			<font>Font_15</font>
			<textcolor>$VAR[value_headercolor]</textcolor>
			<align>center</align>
			<aligny>center</aligny>
			<label>[B]$LOCALIZE[31847][/B]</label>
			<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
			<include>TWC.36Hour.PeriodLabelsCommon</include>
		</control>
	</include>
	<include name="TWC.36Hour.PeriodForecastCommon">
		<posy>390</posy>
		<height>360</height>
		<font>Font_17A</font>
		<align>center</align>
		<aligny>top</aligny>
		<autoscroll time="2000" delay="6000" repeat="6000">VisibleChange</autoscroll>
		<include>TWC.36Hour.PeriodLabelsCommon</include>
	</include>
	<include name="TWC.36Hour.PeriodDaylightCommon">
		<posy>765</posy>
		<font>Font_15</font>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<include>TWC.36Hour.PeriodLabelsCommon</include>
	</include>
	<include name="TWC.36Hour.PeriodSeparator">
		<control type="image">
			<posx>396</posx>
			<posy>0</posy>
			<width>3</width>
			<height>840</height>
			<texture>line_v.png</texture>
		</control>
	</include>
	<include name="TWC.36Hour">
		<control type="group">
			<posx>435</posx>
			<posy>90</posy>
			<visible>String.IsEqual(Window.Property(Weather.CurrentView),36hour) + !String.Contains(Window.Property(WeatherProvider),Yahoo)</visible>
			<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
			<control type="label">
				<description>loading label</description>
				<include>TWC.LoadingLabelCommon</include>
				<visible>String.IsEmpty(Window.Property(36Hour.IsFetched)) + !String.Contains(Window.Property(WeatherProvider),Yahoo)</visible>
			</control>
			<control type="grouplist">
				<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) | String.Contains(Window.Property(WeatherProvider),Yahoo)</visible>
				<posx>0</posx>
				<posy>60</posy>
				<width>1380</width>
				<itemgap>0</itemgap>
				<orientation>horizontal</orientation>
				<control type="group">
					<width>412</width>
					<control type="label">
						<description>heading</description>
						<include>TWC.36Hour.PeriodLabelsCommon</include>
						<label>[B]$INFO[Window.Property(36Hour.1.Heading)][/B]</label>
					</control>
					<control type="image">
						<description>outlook icon</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(36Hour.1.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(36Hour.1.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>outlook label</description>
						<include>TWC.36Hour.PeriodOutlookCommon</include>
						<info>Window.Property(36Hour.1.Outlook)</info>
					</control>
					<control type="label">
						<description>temp title</description>
						<include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
						<label>[B]$INFO[Window.Property(36Hour.1.TemperatureHeading)][/B]</label>
					</control>
					<control type="label">
						<description>temp label</description>
						<textcolor>FFFFFAF0</textcolor>
						<include>TWC.36Hour.PeriodTemperatureCommon</include>
						<info>Window.Property(36Hour.1.Temperature)</info>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(36Hour.1.Temperature),-100) + !Integer.IsGreater(Window.Property(36Hour.1.Temperature),-1)">Conditional</animation>
					</control>
					<include>TWC.36Hour.PeriodPrecipitationHeadingCommon</include>
					<control type="label">
						<description>precip</description>
						<include>TWC.36Hour.PeriodPrecipitationCommon</include>
						<info>Window.Property(36Hour.1.ChancePrecipitation)</info>
						<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
					<control type="label">
						<description>precip</description>
						<include>TWC.36Hour.PeriodPrecipitationCommon</include>
						<info>Window.Property(36Hour.1.Precipitation)</info>
						<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
					<include>TWC.36Hour.PeriodForecastHeadingCommon</include>
					<control type="textbox">
						<description>forecast label</description>
						<include>TWC.36Hour.PeriodForecastCommon</include>
						<info>Window.Property(36Hour.1.Forecast)</info>
						<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) +  !String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
					<control type="label">
						<description>daylight</description>
						<include>TWC.36Hour.PeriodDaylightCommon</include>
						<label>$INFO[Window.Property(36Hour.1.DaylightTitle)] $INFO[Window.Property(36Hour.1.DaylightTime)]</label>
						<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
					<include>TWC.36Hour.PeriodSeparator</include>
				</control>
				<control type="group">
					<width>412</width>
					<control type="label">
						<description>heading</description>
						<include>TWC.36Hour.PeriodLabelsCommon</include>
						<label>[B]$INFO[Window.Property(36Hour.2.Heading)][/B]</label>
					</control>
					<control type="image">
						<description>outlook icon</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(36Hour.2.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(36Hour.2.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>outlook label</description>
						<include>TWC.36Hour.PeriodOutlookCommon</include>
						<info>Window.Property(36Hour.2.Outlook)</info>
					</control>
					<control type="label">
						<description>temp title</description>
						<include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
						<label>[B]$INFO[Window.Property(36Hour.2.TemperatureHeading)][/B]</label>
					</control>
					<control type="label">
						<description>temp label</description>
						<textcolor>FFFFFAF0</textcolor>
						<include>TWC.36Hour.PeriodTemperatureCommon</include>
						<info>Window.Property(36Hour.2.Temperature)</info>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(36Hour.2.Temperature),-100) + !Integer.IsGreater(Window.Property(36Hour.2.Temperature),-1)">Conditional</animation>
					</control>
					<include>TWC.36Hour.PeriodPrecipitationHeadingCommon</include>
					<control type="label">
						<description>precip</description>
						<include>TWC.36Hour.PeriodPrecipitationCommon</include>
						<info>Window.Property(36Hour.2.ChancePrecipitation)</info>
						<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
					<control type="label">
						<description>precip</description>
						<include>TWC.36Hour.PeriodPrecipitationCommon</include>
						<info>Window.Property(36Hour.1.Precipitation)</info>
						<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
					<include>TWC.36Hour.PeriodForecastHeadingCommon</include>
					<control type="textbox">
						<description>forecast label</description>
						<include>TWC.36Hour.PeriodForecastCommon</include>
						<info>Window.Property(36Hour.2.Forecast)</info>
						<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) +  !String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
					<control type="label">
						<description>daylight</description>
						<include>TWC.36Hour.PeriodDaylightCommon</include>
						<label>$INFO[Window.Property(36Hour.2.DaylightTitle)] $INFO[Window.Property(36Hour.2.DaylightTime)]</label>
						<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
					<include>TWC.36Hour.PeriodSeparator</include>
				</control>
				<control type="group">
					<width>412</width>
					<control type="label">
						<description>heading</description>
						<include>TWC.36Hour.PeriodLabelsCommon</include>
						<label>[B]$INFO[Window.Property(36Hour.3.Heading)][/B]</label>
					</control>
					<control type="image">
						<description>outlook icon</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(36Hour.3.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(36Hour.3.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>outlook label</description>
						<include>TWC.36Hour.PeriodOutlookCommon</include>
						<info>Window.Property(36Hour.3.Outlook)</info>
					</control>
					<control type="label">
						<description>temp title</description>
						<include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
						<label>[B]$INFO[Window.Property(36Hour.3.TemperatureHeading)][/B]</label>
					</control>
					<control type="label">
						<description>temp label</description>
						<textcolor>FFFFFAF0</textcolor>
						<include>TWC.36Hour.PeriodTemperatureCommon</include>
						<info>Window.Property(36Hour.3.Temperature)</info>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(36Hour.3.Temperature),-100) + !Integer.IsGreater(Window.Property(36Hour.3.Temperature),-1)">Conditional</animation>
					</control>
					<include>TWC.36Hour.PeriodPrecipitationHeadingCommon</include>
					<control type="label">
						<description>precip</description>
						<include>TWC.36Hour.PeriodPrecipitationCommon</include>
						<info>Window.Property(36Hour.3.ChancePrecipitation)</info>
						<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
					<control type="label">
						<description>precip</description>
						<include>TWC.36Hour.PeriodPrecipitationCommon</include>
						<info>Window.Property(36Hour.1.Precipitation)</info>
						<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
					<include>TWC.36Hour.PeriodForecastHeadingCommon</include>
					<control type="textbox">
						<description>forecast label</description>
						<include>TWC.36Hour.PeriodForecastCommon</include>
						<info>Window.Property(36Hour.3.Forecast)</info>
						<visible>!String.IsEmpty(Window.Property(36Hour.IsFetched)) +  !String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
					<control type="label">
						<description>daylight</description>
						<include>TWC.36Hour.PeriodDaylightCommon</include>
						<label>$INFO[Window.Property(36Hour.3.DaylightTitle)] $INFO[Window.Property(36Hour.3.DaylightTime)]</label>
						<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
					</control>
				</control>
			</control>
		</control>
		<control type="group">
			<!-- Yahoo -->
			<posx>435</posx>
			<posy>90</posy>
			<visible>String.IsEqual(Window.Property(Weather.CurrentView),36hour) + String.Contains(Window.Property(WeatherProvider),Yahoo)</visible>
			<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
			<control type="grouplist">
				<posx>0</posx>
				<posy>60</posy>
				<width>1380</width>
				<itemgap>0</itemgap>
				<orientation>horizontal</orientation>
				<control type="group">
					<width>412</width>
					<control type="label">
						<description>heading</description>
						<include>TWC.36Hour.PeriodLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Day0.Title)][/B]</label>
					</control>
					<control type="image">
						<description>outlook icon</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Day0.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Day0.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>outlook label</description>
						<include>TWC.36Hour.PeriodOutlookCommon</include>
						<info>Window.Property(Day0.Outlook)</info>
					</control>
					<control type="label">
						<description>temp title</description>
						<include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
						<label>[B][UPPERCASE]$LOCALIZE[401][/UPPERCASE][/B]</label>
					</control>
					<control type="label">
						<description>temp label</description>
						<textcolor>FFFFFAF0</textcolor>
						<include>TWC.36Hour.PeriodTemperatureCommon</include>
						<info>Window.Property(Day0.HighTemp)</info>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(36Hour.1.Temperature),-100) + !Integer.IsGreater(Window.Property(36Hour.1.Temperature),-1)">Conditional</animation>
					</control>
					<include>TWC.36Hour.PeriodSeparator</include>
				</control>
				<control type="group">
					<width>412</width>
					<control type="label">
						<description>heading</description>
						<include>TWC.36Hour.PeriodLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Day1.Title)][/B]</label>
					</control>
					<control type="image">
						<description>outlook icon</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Day1.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Day1.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>outlook label</description>
						<include>TWC.36Hour.PeriodOutlookCommon</include>
						<info>Window.Property(Day1.Outlook)</info>
					</control>
					<control type="label">
						<description>temp title</description>
						<include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
						<label>[B][UPPERCASE]$LOCALIZE[401][/UPPERCASE][/B]</label>
					</control>
					<control type="label">
						<description>temp label</description>
						<textcolor>FFFFFAF0</textcolor>
						<include>TWC.36Hour.PeriodTemperatureCommon</include>
						<info>Window.Property(Day1.HighTemp)</info>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(36Hour.2.Temperature),-100) + !Integer.IsGreater(Window.Property(36Hour.2.Temperature),-1)">Conditional</animation>
					</control>
					<include>TWC.36Hour.PeriodSeparator</include>
				</control>
				<control type="group">
					<width>412</width>
					<control type="label">
						<description>heading</description>
						<include>TWC.36Hour.PeriodLabelsCommon</include>
						<label>[B]$INFO[Window.Property(Day2.Title)][/B]</label>
					</control>
					<control type="image">
						<description>outlook icon</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Day2.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.36Hour.PeriodIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Day2.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>outlook label</description>
						<include>TWC.36Hour.PeriodOutlookCommon</include>
						<info>Window.Property(Day2.Outlook)</info>
					</control>
					<control type="label">
						<description>temp title</description>
						<include>TWC.36Hour.PeriodTemperatureHeadingCommon</include>
						<label>[B][UPPERCASE]$LOCALIZE[401][/UPPERCASE][/B]</label>
					</control>
					<control type="label">
						<description>temp label</description>
						<textcolor>FFFFFAF0</textcolor>
						<include>TWC.36Hour.PeriodTemperatureCommon</include>
						<info>Window.Property(Day2.HighTemp)</info>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(36Hour.3.Temperature),-100) + !Integer.IsGreater(Window.Property(36Hour.3.Temperature),-1)">Conditional</animation>
					</control>
				</control>
			</control>
		</control>
	</include>
	<!-- ######################################################################### Weekend #########################################################################-->
	<include name="TWC.Weekend.DayCommon">
		<posx>0</posx>
		<posy>22</posy>
		<width>390</width>
		<height>36</height>
		<font>Font_15</font>
		<aligny>center</aligny>
		<align>center</align>
	</include>
	<include name="TWC.Weekend.DateCommon">
		<posx>375</posx>
		<posy>0</posy>
		<width>390</width>
		<height>22</height>
		<font>Font_15</font>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<aligny>center</aligny>
		<align>right</align>
	</include>
	<include name="TWC.Weekend.DayIconCommon">
		<posx>0</posx>
		<posy>105</posy>
		<width>192</width>
		<height>180</height>
		<aspectratio>keep</aspectratio>
	</include>
	<include name="TWC.Weekend.DayOutlookCommon">
		<posx>0</posx>
		<posy>300</posy>
		<width>192</width>
		<height>192</height>
		<font>Font_15</font>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<aligny>top</aligny>
		<align>center</align>
		<wrapmultiline>true</wrapmultiline>
	</include>
	<include name="TWC.Weekend.HighTemperatureHeadingCommon">
		<posx>195</posx>
		<posy>104</posy>
		<width>195</width>
		<height>30</height>
		<font>Font_15</font>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<aligny>center</aligny>
		<align>center</align>
	</include>
	<include name="TWC.Weekend.HighTemperatureCommon">
		<posy>148</posy>
		<font>Font_23</font>
		<textcolor>FFf5f5f5</textcolor>
		<include>TWC.Weekend.HighTemperatureHeadingCommon</include>
	</include>
	<include name="TWC.Weekend.LowTempHeadingCommon">
		<control type="label">
			<description>high temp title</description>
			<posy>214</posy>
			<label>[B]$LOCALIZE[391][/B]</label>
			<include>TWC.Weekend.HighTemperatureHeadingCommon</include>
		</control>
	</include>
	<include name="TWC.Weekend.LowTempCommon">
		<posy>255</posy>
		<font>Font_23</font>
		<textcolor>FFf5f5f5</textcolor>
		<include>TWC.Weekend.HighTemperatureHeadingCommon</include>
	</include>
	<include name="TWC.Weekend.ForecastHeadingCommon">
		<posy>615</posy>
		<font>Font_15</font>
		<align>center</align>
		<aligny>center</aligny>
		<label>[B]$LOCALIZE[31847][/B]</label>
		<include>TWC.Weekend.DayCommon</include>
	</include>
	<include name="TWC.Weekend.ForecastCommon">
		<posy>652</posy>
		<height>195</height>
		<font>Font_15</font>
		<align>center</align>
		<aligny>top</aligny>
		<autoscroll time="2000" delay="6000" repeat="6000">VisibleChange</autoscroll>
		<include>TWC.Weekend.DayCommon</include>
	</include>
	<include name="TWC.Weekend.DaySeparator">
		<control type="image">
			<posx>396</posx>
			<posy>0</posy>
			<width>3</width>
			<height>870</height>
			<texture>line_v.png</texture>
		</control>
	</include>
	<include name="TWC.Weekend.DetailsHeadingCommon">
		<posy>378</posy>
		<font>Font_15</font>
		<align>center</align>
		<aligny>center</aligny>
		<include>TWC.Weekend.DayCommon</include>
	</include>
	<include name="TWC.Weekend.DetailsValuesCommon">
		<posx>192</posx>
		<textcolor>FFf5f5f5</textcolor>
		<align>left</align>
		<include>TWC.Weekend.DetailsLabelsCommon</include>
	</include>
	<include name="TWC.Weekend.DetailsLabelsCommon">
		<posx>0</posx>
		<posy>416</posy>
		<width>210</width>
		<height>30</height>
		<font>Font_15</font>
		<align>right</align>
		<aligny>center</aligny>
		<textoffsetx>26</textoffsetx>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<focusedcolor>$VAR[value_headercolor]</focusedcolor>
		<texturefocus></texturefocus>
		<texturenofocus></texturenofocus>
	</include>
	<include name="TWC.Weekend.DetailsLabels">
		<posy>416</posy>
		<width>195</width>
		<height>225</height>
		<itemgap>0</itemgap>
		<orientation>vertical</orientation>
		<control type="label">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[406]:</label>
		</control>
		<control type="label">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[403]:</label>
			<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
		</control>
		<control type="label">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[387]:</label>
			<visible>String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
		</control>
		<control type="label">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[383]:</label>
		</control>
		<control type="label">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[33021]:</label>
		</control>
		<control type="label">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[33027]:</label>
			<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
		</control>
		<control type="label">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[33028]:</label>
			<visible>!String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
		</control>
	</include>
	<include name="TWC.Weekend.ObservedLabels">
		<posy>416</posy>
		<width>195</width>
		<height>255</height>
		<itemgap>0</itemgap>
		<orientation>vertical</orientation>
		<control type="button">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[31851]:</label>
		</control>
		<control type="button">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[31852]:</label>
		</control>
		<control type="button">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label></label>
		</control>
		<control type="button">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[31855]:</label>
		</control>
		<control type="button">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[31856]:</label>
		</control>
		<control type="button">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label></label>
		</control>
		<control type="button">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[31853]:</label>
		</control>
		<control type="button">
			<include>TWC.Weekend.DetailsLabelsCommon</include>
			<label>$LOCALIZE[31854]:</label>
		</control>
	</include>
	<include name="TWC.Weekend">
		<control type="group">
			<posx>435</posx>
			<posy>90</posy>
			<visible>String.IsEqual(Window.Property(Weather.CurrentView),weekend) + !String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
			<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
			<control type="label">
				<description>loading label</description>
				<include>TWC.LoadingLabelCommon</include>
				<visible>String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
			</control>
			<control type="grouplist">
				<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
				<posx>0</posx>
				<posy>38</posy>
				<width>1380</width>
				<itemgap>0</itemgap>
				<orientation>horizontal</orientation>
				<!-- friday -->
				<control type="group">
					<width>412</width>
					<control type="label">
						<description>heading</description>
						<include>TWC.Weekend.DateCommon</include>
						<label>$INFO[Window.Property(Weekend.1.Date)]</label>
					</control>
					<control type="label">
						<description>heading</description>
						<include>TWC.Weekend.DayCommon</include>
						<label>[B]$LOCALIZE[15][/B]</label>
					</control>
					<control type="image">
						<description>forecast icon</description>
						<include>TWC.Weekend.DayIconCommon</include>
						<texture>$INFO[Window(0).Property(current_wxicon_path)]$INFO[Window.Property(Weekend.1.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Weekend.DayIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Weekend.1.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>outlook label</description>
						<include>TWC.Weekend.DayOutlookCommon</include>
						<info>Window.Property(Weekend.1.Outlook)</info>
					</control>
					<control type="label">
						<description>high temp label</description>
						<label>[B]$LOCALIZE[393][/B]</label>
						<include>TWC.Weekend.HighTemperatureHeadingCommon</include>
					</control>
					<control type="label">
						<description>temp label</description>
						<label fallback="N/A">$INFO[Window.Property(Weekend.1.HighTemperature)]</label>
						<include>TWC.Weekend.HighTemperatureCommon</include>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Weekend.1.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Weekend.1.HighTemperature),-1)">Conditional</animation>
					</control>
					<include>TWC.Weekend.LowTempHeadingCommon</include>
					<control type="label">
						<description>low temp</description>
						<info>Window.Property(Weekend.1.LowTemperature)</info>
						<include>TWC.Weekend.LowTempCommon</include>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Weekend.1.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Weekend.1.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<label>[B]$LOCALIZE[33029][/B]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
					</control>
					<control type="label">
						<description>precip</description>
						<label>$INFO[Window.Property(Weekend.1.ObservedPrecipitation),$LOCALIZE[33021] ,]</label>
						<posx>195</posx>
						<include>TWC.Weekend.DayOutlookCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
					</control>
					<control type="label">
						<label>[B]$LOCALIZE[31861][/B]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
					</control>
					<control type="label">
						<description>observed</description>
						<posy>788</posy>
						<font>Font_15</font>
						<label>[I][B]($LOCALIZE[33025])[/B][/I]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
					</control>
					<!-- details -->
					<control type="grouplist">
						<description>details labels</description>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<include>TWC.Weekend.DetailsLabels</include>
					</control>
					<control type="grouplist">
						<description>details values</description>
						<itemgap>0</itemgap>
						<orientation>vertical</orientation>
						<height>225</height>
						<include>TWC.Weekend.DetailsValuesCommon</include>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.SolarRadiation)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.Wind)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.ChancePrecipitation)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.Sunrise)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.Sunset)]</label>
						</control>
					</control>
					<!-- observed -->
					<control type="grouplist">
						<description>observed labels</description>
						<visible>!String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<include>TWC.Weekend.ObservedLabels</include>
					</control>
					<control type="grouplist">
						<description>observed</description>
						<height>255</height>
						<itemgap>0</itemgap>
						<orientation>vertical</orientation>
						<include>TWC.Weekend.DetailsValuesCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.ObservedAvgHighTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.ObservedAvgLowTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsLabelsCommon</include>
							<label></label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.HighTemperature)]  ($INFO[Window.Property(Weekend.1.DepartureHigh)])</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.LowTemperature)]  ($INFO[Window.Property(Weekend.1.DepartureLow)])</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsLabelsCommon</include>
							<label></label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.ObservedRecordHighTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.ObservedRecordLowTemperature)]</label>
						</control>
					</control>
					<!-- forecast no details-->
					<control type="group">
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<control type="label">
							<description>forecast label</description>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
						<control type="textbox">
							<description>forecast</description>
							<include>TWC.Weekend.ForecastCommon</include>
							<info>Window.Property(Weekend.1.Forecast)</info>
							<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched)) + !String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
					</control>
					<!-- forecast w/ details-->
					<control type="group">
						<visible>Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<control type="label">
							<description>forecast label</description>
							<posy>380</posy>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
						<control type="textbox">
							<description>forecast</description>
							<posy>411</posy>
							<height>354</height>
							<include>TWC.Weekend.ForecastCommon</include>
							<info>Window.Property(Weekend.1.Forecast)</info>
							<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched)) + !String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
						</control>
						<control type="label">
							<description>precip</description>
							<posy>788</posy>
							<font>Font_15</font>
							<textcolor>$VAR[value_headercolor]</textcolor>
							<label>$INFO[Window.Property(Weekend.1.ChancePrecipitation)]</label>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
					</control>
					<include>TWC.Weekend.DaySeparator</include>
				</control>
				<!-- saturday -->
				<control type="group">
					<width>412</width>
					<control type="label">
						<description>heading</description>
						<include>TWC.Weekend.DateCommon</include>
						<label>$INFO[Window.Property(Weekend.2.Date)]</label>
					</control>
					<control type="label">
						<description>heading</description>
						<include>TWC.Weekend.DayCommon</include>
						<label>[B]$LOCALIZE[16][/B]</label>
					</control>
					<control type="image">
						<description>forecast icon</description>
						<include>TWC.Weekend.DayIconCommon</include>
						<texture>$INFO[Window(home).Property(current_wxicon_path)]$INFO[Window.Property(Weekend.2.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Weekend.DayIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Weekend.2.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>outlook label</description>
						<include>TWC.Weekend.DayOutlookCommon</include>
						<info>Window.Property(Weekend.2.Outlook)</info>
					</control>
					<control type="label">
						<description>high temp label</description>
						<label>[B]$LOCALIZE[393][/B]</label>
						<include>TWC.Weekend.HighTemperatureHeadingCommon</include>
					</control>
					<control type="label">
						<description>temp label</description>
						<label fallback="N/A">$INFO[Window.Property(Weekend.2.HighTemperature)]</label>
						<include>TWC.Weekend.HighTemperatureCommon</include>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Weekend.2.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Weekend.2.HighTemperature),-1)">Conditional</animation>
					</control>
					<include>TWC.Weekend.LowTempHeadingCommon</include>
					<control type="label">
						<description>low temp</description>
						<info>Window.Property(Weekend.2.LowTemperature)</info>
						<include>TWC.Weekend.LowTempCommon</include>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Weekend.2.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Weekend.2.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<label>[B]$LOCALIZE[33029][/B]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
					</control>
					<control type="label">
						<description>precip</description>
						<label>$INFO[Window.Property(Weekend.2.ObservedPrecipitation),$LOCALIZE[33021] ,]</label>
						<posx>195</posx>
						<include>TWC.Weekend.DayOutlookCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
					</control>
					<control type="label">
						<label>[B]$LOCALIZE[31861][/B]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
					</control>
					<control type="label">
						<description>observed</description>
						<posy>788</posy>
						<font>Font_15</font>
						<label>[I][B]($LOCALIZE[33025])[/B][/I]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
					</control>
					<!-- details -->
					<control type="grouplist">
						<description>details labels</description>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<include>TWC.Weekend.DetailsLabels</include>
					</control>
					<control type="grouplist">
						<description>details values</description>
						<itemgap>0</itemgap>
						<orientation>vertical</orientation>
						<height>225</height>
						<include>TWC.Weekend.DetailsValuesCommon</include>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.SolarRadiation)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.Wind)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.ChancePrecipitation)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.Sunrise)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.Sunset)]</label>
						</control>
					</control>
					<!-- observed -->
					<control type="grouplist">
						<description>observed labels</description>
						<visible>!String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<include>TWC.Weekend.ObservedLabels</include>
					</control>
					<control type="grouplist">
						<description>observed</description>
						<height>255</height>
						<itemgap>0</itemgap>
						<orientation>vertical</orientation>
						<include>TWC.Weekend.DetailsValuesCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.ObservedAvgHighTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.ObservedAvgLowTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsLabelsCommon</include>
							<label></label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.HighTemperature)]  ($INFO[Window.Property(Weekend.2.DepartureHigh)])</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.LowTemperature)]  ($INFO[Window.Property(Weekend.2.DepartureLow)])</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsLabelsCommon</include>
							<label></label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.ObservedRecordHighTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.ObservedRecordLowTemperature)]</label>
						</control>
					</control>
					<!-- forecast no details-->
					<control type="group">
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<control type="label">
							<description>forecast label</description>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
						<control type="textbox">
							<description>forecast</description>
							<include>TWC.Weekend.ForecastCommon</include>
							<info>Window.Property(Weekend.2.Forecast)</info>
							<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
						</control>
					</control>
					<!-- forecast w/ details-->
					<control type="group">
						<visible>Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<control type="label">
							<description>forecast label</description>
							<posy>380</posy>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
						<control type="textbox">
							<description>forecast</description>
							<posy>411</posy>
							<height>354</height>
							<include>TWC.Weekend.ForecastCommon</include>
							<info>Window.Property(Weekend.2.Forecast)</info>
							<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
						</control>
						<control type="label">
							<description>precip</description>
							<posy>788</posy>
							<font>Font_15</font>
							<textcolor>$VAR[value_headercolor]</textcolor>
							<label>$INFO[Window.Property(Weekend.2.ChancePrecipitation)]</label>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
					</control>
					<include>TWC.Weekend.DaySeparator</include>
				</control>
				<!-- sunday -->
				<control type="group">
					<width>412</width>
					<control type="label">
						<description>heading</description>
						<include>TWC.Weekend.DateCommon</include>
						<label>$INFO[Window.Property(Weekend.3.Date)]</label>
					</control>
					<control type="label">
						<description>heading</description>
						<include>TWC.Weekend.DayCommon</include>
						<label>[B]$LOCALIZE[17][/B]</label>
					</control>
					<control type="image">
						<description>forecast icon</description>
						<include>TWC.Weekend.DayIconCommon</include>
						<texture>$INFO[Window(home).Property(current_wxicon_path)]$INFO[Window.Property(Weekend.3.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Weekend.DayIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Weekend.3.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>outlook label</description>
						<include>TWC.Weekend.DayOutlookCommon</include>
						<info>Window.Property(Weekend.3.Outlook)</info>
					</control>
					<control type="label">
						<description>high temp label</description>
						<label>[B]$LOCALIZE[393][/B]</label>
						<include>TWC.Weekend.HighTemperatureHeadingCommon</include>
					</control>
					<control type="label">
						<description>temp label</description>
						<label fallback="N/A">$INFO[Window.Property(Weekend.3.HighTemperature)]</label>
						<include>TWC.Weekend.HighTemperatureCommon</include>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Weekend.3.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Weekend.3.HighTemperature),-1)">Conditional</animation>
					</control>
					<include>TWC.Weekend.LowTempHeadingCommon</include>
					<control type="label">
						<description>low temp</description>
						<info>Window.Property(Weekend.3.LowTemperature)</info>
						<include>TWC.Weekend.LowTempCommon</include>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Weekend.3.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Weekend.3.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<label>[B]$LOCALIZE[33029][/B]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.3.Observed))</visible>
					</control>
					<control type="label">
						<description>precip</description>
						<label>$INFO[Window.Property(Weekend.3.ObservedPrecipitation),$LOCALIZE[33021] ,]</label>
						<posx>195</posx>
						<include>TWC.Weekend.DayOutlookCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.3.Observed))</visible>
					</control>
					<control type="label">
						<label>[B]$LOCALIZE[31861][/B]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.3.Observed))</visible>
					</control>
					<control type="label">
						<description>observed</description>
						<posy>788</posy>
						<font>Font_15</font>
						<label>[I][B]($LOCALIZE[33025])[/B][/I]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.3.Observed))</visible>
					</control>
					<!-- details -->
					<control type="grouplist">
						<description>details labels</description>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.3.Observed))</visible>
						<include>TWC.Weekend.DetailsLabels</include>
					</control>
					<control type="grouplist">
						<description>details values</description>
						<itemgap>0</itemgap>
						<orientation>vertical</orientation>
						<height>225</height>
						<include>TWC.Weekend.DetailsValuesCommon</include>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.3.Observed))</visible>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.SolarRadiation)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.Wind)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.ChancePrecipitation)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.Sunrise)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.Sunset)]</label>
						</control>
					</control>
					<!-- observed -->
					<control type="grouplist">
						<description>observed labels</description>
						<visible>!String.IsEmpty(Window.Property(Weekend.3.Observed))</visible>
						<include>TWC.Weekend.ObservedLabels</include>
					</control>
					<control type="grouplist">
						<description>observed</description>
						<height>255</height>
						<itemgap>0</itemgap>
						<orientation>vertical</orientation>
						<include>TWC.Weekend.DetailsValuesCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.3.Observed))</visible>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.ObservedAvgHighTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.ObservedAvgLowTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsLabelsCommon</include>
							<label></label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.HighTemperature)]  ($INFO[Window.Property(Weekend.3.DepartureHigh)])</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.LowTemperature)]  ($INFO[Window.Property(Weekend.3.DepartureLow)])</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsLabelsCommon</include>
							<label></label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.ObservedRecordHighTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.3.ObservedRecordLowTemperature)]</label>
						</control>
					</control>
					<!-- forecast no details-->
					<control type="group">
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.3.Observed))</visible>
						<control type="label">
							<description>forecast label</description>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
						<control type="textbox">
							<description>forecast</description>
							<include>TWC.Weekend.ForecastCommon</include>
							<info>Window.Property(Weekend.3.Forecast)</info>
							<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
						</control>
					</control>
					<!-- forecast w/ details-->
					<control type="group">
						<visible>Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.3.Observed))</visible>
						<control type="label">
							<description>forecast label</description>
							<posy>380</posy>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
						<control type="textbox">
							<description>forecast</description>
							<posy>411</posy>
							<height>354</height>
							<include>TWC.Weekend.ForecastCommon</include>
							<info>Window.Property(Weekend.3.Forecast)</info>
							<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
						</control>
						<control type="label">
							<description>precip</description>
							<posy>788</posy>
							<font>Font_15</font>
							<textcolor>$VAR[value_headercolor]</textcolor>
							<label>$INFO[Window.Property(Weekend.3.ChancePrecipitation)]</label>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
					</control>
				</control>
			</control>
		</control>
		<!-- OpenWeatherMap -->
		<control type="group">
			<posx>435</posx>
			<posy>90</posy>
			<visible>String.IsEqual(Window.Property(Weather.CurrentView),weekend) + String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended)</visible>
			<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
			<control type="label">
				<description>loading label</description>
				<include>TWC.LoadingLabelCommon</include>
				<visible>String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
			</control>
			<control type="grouplist">
				<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
				<posx>0</posx>
				<posy>38</posy>
				<width>1380</width>
				<itemgap>0</itemgap>
				<orientation>horizontal</orientation>
				<!-- saturday -->
				<control type="group">
					<width>412</width>
					<control type="label">
						<description>heading</description>
						<include>TWC.Weekend.DateCommon</include>
						<label>$INFO[Window.Property(Weekend.1.ShortDate)]</label>
					</control>
					<control type="label">
						<description>heading</description>
						<include>TWC.Weekend.DayCommon</include>
						<label>[B]$LOCALIZE[16][/B]</label>
					</control>
					<control type="image">
						<description>forecast icon</description>
						<include>TWC.Weekend.DayIconCommon</include>
						<texture>$INFO[Window(home).Property(current_wxicon_path)]$INFO[Window.Property(Weekend.1.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Weekend.DayIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Weekend.1.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>outlook label</description>
						<include>TWC.Weekend.DayOutlookCommon</include>
						<info>Window.Property(Weekend.1.Outlook)</info>
					</control>
					<control type="label">
						<description>high temp label</description>
						<label>[B]$LOCALIZE[393][/B]</label>
						<include>TWC.Weekend.HighTemperatureHeadingCommon</include>
					</control>
					<control type="label">
						<description>temp label</description>
						<label fallback="N/A">$INFO[Window.Property(Weekend.1.HighTemperature)]</label>
						<include>TWC.Weekend.HighTemperatureCommon</include>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Weekend.1.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Weekend.1.HighTemperature),-1)">Conditional</animation>
					</control>
					<include>TWC.Weekend.LowTempHeadingCommon</include>
					<control type="label">
						<description>low temp</description>
						<info>Window.Property(Weekend.1.LowTemperature)</info>
						<include>TWC.Weekend.LowTempCommon</include>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Weekend.1.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Weekend.1.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<label>[B]$LOCALIZE[33029][/B]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
					</control>
					<control type="label">
						<description>precip</description>
						<label>$INFO[Window.Property(Weekend.1.Precipitation),$LOCALIZE[33021] ,]</label>
						<posx>195</posx>
						<include>TWC.Weekend.DayOutlookCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
					</control>
					<control type="label">
						<label>[B]$LOCALIZE[31861][/B]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
					</control>
					<control type="label">
						<description>observed</description>
						<posy>788</posy>
						<font>Font_15</font>
						<label>[I][B]($LOCALIZE[33025])[/B][/I]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
					</control>
					<!-- details -->
					<control type="grouplist">
						<description>details labels</description>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<include>TWC.Weekend.DetailsLabels</include>
					</control>
					<control type="grouplist">
						<description>details values</description>
						<itemgap>0</itemgap>
						<orientation>vertical</orientation>
						<height>225</height>
						<include>TWC.Weekend.DetailsValuesCommon</include>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.Cloudiness)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.WindSpeed)]$INFO[Window.Property(Weekend.1.WindDirection), - ]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.Precipitation)]</label>
						</control>
					</control>
					<!-- observed ??? -->
					<control type="grouplist">
						<description>observed labels</description>
						<visible>!String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<include>TWC.Weekend.ObservedLabels</include>
					</control>
					<control type="grouplist">
						<description>observed</description>
						<height>255</height>
						<itemgap>0</itemgap>
						<orientation>vertical</orientation>
						<include>TWC.Weekend.DetailsValuesCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.ObservedAvgHighTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.ObservedAvgLowTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsLabelsCommon</include>
							<label></label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.HighTemperature)]  ($INFO[Window.Property(Weekend.1.DepartureHigh)])</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.LowTemperature)]  ($INFO[Window.Property(Weekend.1.DepartureLow)])</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsLabelsCommon</include>
							<label></label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.ObservedRecordHighTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.1.ObservedRecordLowTemperature)]</label>
						</control>
					</control>
					<!-- forecast no details-->
					<control type="group">
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<control type="label">
							<description>forecast label</description>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
						<control type="textbox">
							<description>forecast</description>
							<include>TWC.Weekend.ForecastCommon</include>
							<info>Window.Property(Weekend.1.Outlook)</info>
							<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
						</control>
					</control>
					<!-- forecast w/ details-->
					<control type="group">
						<visible>Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.1.Observed))</visible>
						<control type="label">
							<description>forecast label</description>
							<posy>380</posy>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
						<control type="textbox">
							<description>forecast</description>
							<posy>411</posy>
							<height>354</height>
							<include>TWC.Weekend.ForecastCommon</include>
							<info>Window.Property(Weekend.1.Outlook)</info>
							<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
						</control>
						<control type="label">
							<description>precip</description>
							<posy>788</posy>
							<font>Font_15</font>
							<textcolor>$VAR[value_headercolor]</textcolor>
							<label>$INFO[Window.Property(Weekend.1.Precipitation)]</label>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
					</control>
					<include>TWC.Weekend.DaySeparator</include>
				</control>
				<!-- sunday -->
				<control type="group">
					<width>412</width>
					<control type="label">
						<description>heading</description>
						<include>TWC.Weekend.DateCommon</include>
						<label>$INFO[Window.Property(Weekend.2.ShortDate)]</label>
					</control>
					<control type="label">
						<description>heading</description>
						<include>TWC.Weekend.DayCommon</include>
						<label>[B]$LOCALIZE[17][/B]</label>
					</control>
					<control type="image">
						<description>forecast icon</description>
						<include>TWC.Weekend.DayIconCommon</include>
						<texture>$INFO[Window(home).Property(current_wxicon_path)]$INFO[Window.Property(Weekend.2.OutlookIcon)]</texture>
						<visible>!Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="image">
						<description>Weather image</description>
						<include>TWC.Weekend.DayIconCommon</include>
						<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Weekend.2.OutlookIcon)]</texture>
						<visible>Skin.HasSetting(custom_wxicons.multi)</visible>
					</control>
					<control type="label">
						<description>outlook label</description>
						<include>TWC.Weekend.DayOutlookCommon</include>
						<info>Window.Property(Weekend.2.Outlook)</info>
					</control>
					<control type="label">
						<description>high temp label</description>
						<label>[B]$LOCALIZE[393][/B]</label>
						<include>TWC.Weekend.HighTemperatureHeadingCommon</include>
					</control>
					<control type="label">
						<description>temp label</description>
						<label fallback="N/A">$INFO[Window.Property(Weekend.2.HighTemperature)]</label>
						<include>TWC.Weekend.HighTemperatureCommon</include>
						<animation effect="slide" start="0,0" end="-10,0" time="0" condition="Integer.IsGreater(Window.Property(Weekend.2.HighTemperature),-100) + !Integer.IsGreater(Window.Property(Weekend.2.HighTemperature),-1)">Conditional</animation>
					</control>
					<include>TWC.Weekend.LowTempHeadingCommon</include>
					<control type="label">
						<description>low temp</description>
						<info>Window.Property(Weekend.2.LowTemperature)</info>
						<include>TWC.Weekend.LowTempCommon</include>
						<animation effect="slide" start="0,0" end="-9,0" time="0" condition="Integer.IsGreater(Window.Property(Weekend.2.LowTemperature),-100) + !Integer.IsGreater(Window.Property(Weekend.2.LowTemperature),-1)">Conditional</animation>
					</control>
					<control type="label">
						<label>[B]$LOCALIZE[33029][/B]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
					</control>
					<control type="label">
						<description>precip</description>
						<label>$INFO[Window.Property(Weekend.2.Precipitation),$LOCALIZE[33021] ,]</label>
						<posx>195</posx>
						<include>TWC.Weekend.DayOutlookCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
					</control>
					<control type="label">
						<label>[B]$LOCALIZE[31861][/B]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
					</control>
					<control type="label">
						<description>observed</description>
						<posy>788</posy>
						<font>Font_15</font>
						<label>[I][B]($LOCALIZE[33025])[/B][/I]</label>
						<include>TWC.Weekend.DetailsHeadingCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
					</control>
					<!-- details -->
					<control type="grouplist">
						<description>details labels</description>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<include>TWC.Weekend.DetailsLabels</include>
					</control>
					<control type="grouplist">
						<description>details values</description>
						<itemgap>0</itemgap>
						<orientation>vertical</orientation>
						<height>225</height>
						<include>TWC.Weekend.DetailsValuesCommon</include>
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.Humidity)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.Cloudiness)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.WindSpeed)]$INFO[Window.Property(Weekend.2.WindDirection), - ]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.Precipitation)]</label>
						</control>
					</control>
					<!-- observed -->
					<control type="grouplist">
						<description>observed labels</description>
						<visible>!String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<include>TWC.Weekend.ObservedLabels</include>
					</control>
					<control type="grouplist">
						<description>observed</description>
						<height>255</height>
						<itemgap>0</itemgap>
						<orientation>vertical</orientation>
						<include>TWC.Weekend.DetailsValuesCommon</include>
						<visible>!String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.ObservedAvgHighTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.ObservedAvgLowTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsLabelsCommon</include>
							<label></label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.HighTemperature)]  ($INFO[Window.Property(Weekend.2.DepartureHigh)])</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.LowTemperature)]  ($INFO[Window.Property(Weekend.2.DepartureLow)])</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsLabelsCommon</include>
							<label></label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.ObservedRecordHighTemperature)]</label>
						</control>
						<control type="label">
							<include>TWC.Weekend.DetailsValuesCommon</include>
							<label>$INFO[Window.Property(Weekend.2.ObservedRecordLowTemperature)]</label>
						</control>
					</control>
					<!-- forecast no details-->
					<control type="group">
						<visible>!Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<control type="label">
							<description>forecast label</description>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
						<control type="textbox">
							<description>forecast</description>
							<include>TWC.Weekend.ForecastCommon</include>
							<info>Window.Property(Weekend.2.Outlook)</info>
							<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
						</control>
					</control>
					<!-- forecast w/ details-->
					<control type="group">
						<visible>Skin.HasSetting(TWC.ShowWeekendDetails) + String.IsEmpty(Window.Property(Weekend.2.Observed))</visible>
						<control type="label">
							<description>forecast label</description>
							<posy>380</posy>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
						<control type="textbox">
							<description>forecast</description>
							<posy>411</posy>
							<height>354</height>
							<include>TWC.Weekend.ForecastCommon</include>
							<info>Window.Property(Weekend.2.Outlook)</info>
							<visible>!String.IsEmpty(Window.Property(Weekend.IsFetched))</visible>
						</control>
						<control type="label">
							<description>precip</description>
							<posy>788</posy>
							<font>Font_15</font>
							<textcolor>$VAR[value_headercolor]</textcolor>
							<label>$INFO[Window.Property(Weekend.2.Precipitation)]</label>
							<include>TWC.Weekend.ForecastHeadingCommon</include>
						</control>
					</control>
					<include>TWC.Weekend.DaySeparator</include>
				</control>
			</control>
		</control>
	</include>
	<!-- ######################################################################### Maps #########################################################################-->
	<include name="MapsRadioButton">
		<height>38</height>
		<width>286</width>
		<font>Font_17A</font>
		<texturefocus>grey.png</texturefocus>
		<alttexturefocus>grey.png</alttexturefocus>
		<textcolor>FFFFFAF0</textcolor>
		<focusedcolor>FF101010</focusedcolor>
		<textoffsetx>15</textoffsetx>
		<textwidth>285</textwidth>
		<pulseonselect>true</pulseonselect>
		<radiowidth>134</radiowidth>
		<radioposx>200</radioposx>
		<radioheight>75</radioheight>
		<align>left</align>
		<aligny>center</aligny>
		<textureradioonnofocus>radiobutton_on.png</textureradioonnofocus>
		<textureradioonfocus>radiobutton_on.png</textureradioonfocus>
	</include>
	<control type="button" id="90200">
		<include>InvisibleButton</include>
		<onfocus>SetFocus(98)</onfocus>
		<onfocus>Skin.SetString(TWC.DefaultMap,$INFO[Window.Property(Weather.CurrentMap)])</onfocus>
		<visible>!String.IsEqual(Window.Property(Weather.CurrentMap),Skin.String(TWC.DefaultMap))</visible>
	</control>
	<include name="TWC.Maps.ListCommon">
		<posx>-120</posx>
		<posy>75</posy>
		<width>1058</width>
		<height>698</height>
		<onleft>50</onleft>
		<viewtype label="536">icon</viewtype>
		<scrolltime>200</scrolltime>
		<preloaditems>2</preloaditems>
		<itemlayout width="352" height="232">
			<control type="image">
				<posx>15</posx>
				<posy>15</posy>
				<width>315</width>
				<height>202</height>
				<aspectratio>keep</aspectratio>
				<texture fallback="na.jpg" background="true">$INFO[ListItem.Icon]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="345" width="232">
			<control type="image">
				<posx>15</posx>
				<posy>15</posy>
				<width>315</width>
				<height>202</height>
				<aspectratio>keep</aspectratio>
				<texture fallback="na.jpg" background="true">$INFO[ListItem.Icon]</texture>
			</control>
		</focusedlayout>
	</include>
	<include name="TWC.Maps.ListTitleCommon">
		<posx>-105</posx>
		<posy>820</posy>
		<width>1080</width>
		<height>45</height>
		<font>Font_17A</font>
		<textcolor>FFf5f5f5</textcolor>
		<align>center</align>
		<aligny>center</aligny>
	</include>
	<include name="TWC.Maps">
		<control type="group">  <!-- Weatherbit.IO and openweathermap maps -->
			<posx>435</posx>
			<posy>90</posy>
			<onright>5200</onright>
			<visible>String.IsEqual(Window.Property(Weather.CurrentView),maps) + [String.IsEqual(Window.Property(WeatherProvider),OpenWeatherMap Extended) | String.Contains(Window.Property(WeatherProvider), Weatherbit)] + System.HasAddon(script.openweathermap.maps)</visible>
			<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
			<!-- Category buttons and maps -->
			<control type="group" id="5200">
				<posx>180</posx>
				<posy>60</posy>
				<control type="image">
					<posx>-135</posx>
					<posy>-15</posy>
					<width>1140</width>
					<height>825</height>
					<texture>black.png</texture>
				</control>
				<control type="radiobutton" id="5201">
					<description>Map List Button</description>
					<include>MapsRadioButton</include>
					<posx>-650</posx>
					<posy>630</posy>
					<label>$INFO[Window.Property(Map.1.Heading)]</label>
					<onleft>51</onleft>
					<onright>51</onright>
					<onup>5205</onup>
					<ondown>5202</ondown>
					<visible>!String.IsEmpty(Window.Property(Map.1.Heading))</visible>
					<onfocus>SetProperty(CurrentMap,1)</onfocus>
					<selected>String.IsEqual(Window.Property(CurrentMap),1)</selected>
				</control>
				<control type="radiobutton" id="5202">
					<description>Map List Button</description>
					<include>MapsRadioButton</include>
					<posx>-650</posx>
					<posy>675</posy>
					<label>$INFO[Window.Property(Map.2.Heading)]</label>
					<onleft>51</onleft>
					<onright>51</onright>
					<onup>5201</onup>
					<ondown>5203</ondown>
					<visible>!String.IsEmpty(Window.Property(Map.2.Heading))</visible>
					<onfocus>SetProperty(CurrentMap,2)</onfocus>
					<selected>String.IsEqual(Window.Property(CurrentMap),2)</selected>
				</control>
				<control type="radiobutton" id="5203">
					<description>Map List Button</description>
					<include>MapsRadioButton</include>
					<posx>-650</posx>
					<posy>720</posy>
					<label>$INFO[Window.Property(Map.3.Heading)]</label>
					<onleft>51</onleft>
					<onright>51</onright>
					<onup>5202</onup>
					<ondown>5204</ondown>
					<visible>!String.IsEmpty(Window.Property(Map.3.Heading))</visible>
					<onfocus>SetProperty(CurrentMap,3)</onfocus>
					<selected>String.IsEqual(Window.Property(CurrentMap),3)</selected>
				</control>
				<control type="radiobutton" id="5204">
					<description>Map List Button</description>
					<include>MapsRadioButton</include>
					<posx>-650</posx>
					<posy>765</posy>
					<label>$INFO[Window.Property(Map.4.Heading)]</label>
					<onleft>51</onleft>
					<onright>51</onright>
					<onup>5203</onup>
					<ondown>5205</ondown>
					<visible>!String.IsEmpty(Window.Property(Map.4.Heading))</visible>
					<onfocus>SetProperty(CurrentMap,4)</onfocus>
					<selected>String.IsEqual(Window.Property(CurrentMap),4)</selected>
				</control>
				<control type="radiobutton" id="5205">
					<description>Map List Button</description>
					<include>MapsRadioButton</include>
					<posx>-650</posx>
					<posy>810</posy>
					<label>$INFO[Window.Property(Map.5.Heading)]</label>
					<onleft>51</onleft>
					<onright>51</onright>
					<onup>5204</onup>
					<ondown>5201</ondown>
					<visible>!String.IsEmpty(Window.Property(Map.5.Heading))</visible>
					<onfocus>SetProperty(CurrentMap,5)</onfocus>
					<selected>String.IsEqual(Window.Property(CurrentMap),5)</selected>
				</control>
				<control type="group"> <!-- Map 1 -->
					<visible>String.IsEqual(Window.Property(CurrentMap),1)</visible>
					<control type="image">
						<description>map</description>
						<posx>-135</posx>
						<posy>-15</posy>
						<width>1140</width>
						<height>825</height>
						<texture>$INFO[Window.Property(Map.1.Area)]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>map</description>
						<posx>-135</posx>
						<posy>-15</posy>
						<width>1140</width>
						<height>825</height>
						<texture>$INFO[Window.Property(Map.1.Layer)]</texture>
						<aspectratio>scale</aspectratio>
						<colordiffuse>70FFFFFF</colordiffuse>
					</control>
					<control type="image">
						<description>legend image</description>
						<posx>408</posx>
						<posy>830</posy>
						<width>600</width>
						<height>75</height>
						<texture>$INFO[Window.Property(Map.1.Legend)]</texture>
						<align>right</align>
						<aligny>top</aligny>
						<aspectratio>keep</aspectratio>
						<colordiffuse>BFFFFFFF</colordiffuse>
					</control>
				</control>
				<control type="group"> <!-- Map 2 -->
					<visible>String.IsEqual(Window.Property(CurrentMap),2)</visible>
					<control type="image">
						<description>map</description>
						<posx>-135</posx>
						<posy>-15</posy>
						<width>1140</width>
						<height>825</height>
						<texture>$INFO[Window.Property(Map.2.Area)]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>map</description>
						<posx>-135</posx>
						<posy>-15</posy>
						<width>1140</width>
						<height>825</height>
						<texture>$INFO[Window.Property(Map.2.Layer)]</texture>
						<aspectratio>scale</aspectratio>
						<colordiffuse>70FFFFFF</colordiffuse>
					</control>
					<control type="image">
						<description>legend image</description>
						<posx>408</posx>
						<posy>830</posy>
						<width>600</width>
						<height>75</height>
						<texture>$INFO[Window.Property(Map.2.Legend)]</texture>
						<align>right</align>
						<aligny>top</aligny>
						<aspectratio>keep</aspectratio>
						<colordiffuse>BFFFFFFF</colordiffuse>
					</control>
				</control>
				<control type="group"> <!-- Map 3 -->
					<visible>String.IsEqual(Window.Property(CurrentMap),3)</visible>
					<control type="image">
						<description>map</description>
						<posx>-135</posx>
						<posy>-15</posy>
						<width>1140</width>
						<height>825</height>
						<texture>$INFO[Window.Property(Map.3.Area)]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>map</description>
						<posx>-135</posx>
						<posy>-15</posy>
						<width>1140</width>
						<height>825</height>
						<texture>$INFO[Window.Property(Map.3.Layer)]</texture>
						<aspectratio>scale</aspectratio>
						<colordiffuse>70FFFFFF</colordiffuse>
					</control>
					<control type="image">
						<description>legend image</description>
						<posx>408</posx>
						<posy>830</posy>
						<width>600</width>
						<height>75</height>
						<texture>$INFO[Window.Property(Map.3.Legend)]</texture>
						<align>right</align>
						<aligny>top</aligny>
						<aspectratio>keep</aspectratio>
						<colordiffuse>BFFFFFFF</colordiffuse>
					</control>
				</control>
				<control type="group"> <!-- Map 4 -->
					<visible>String.IsEqual(Window.Property(CurrentMap),4)</visible>
					<control type="image">
						<description>map</description>
						<posx>-135</posx>
						<posy>-15</posy>
						<width>1140</width>
						<height>825</height>
						<texture>$INFO[Window.Property(Map.4.Area)]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>map</description>
						<posx>-135</posx>
						<posy>-15</posy>
						<width>1140</width>
						<height>825</height>
						<texture>$INFO[Window.Property(Map.4.Layer)]</texture>
						<aspectratio>scale</aspectratio>
						<colordiffuse>70FFFFFF</colordiffuse>
					</control>
					<control type="image">
						<description>legend image</description>
						<posx>408</posx>
						<posy>830</posy>
						<width>600</width>
						<height>75</height>
						<texture>$INFO[Window.Property(Map.4.Legend)]</texture>
						<align>right</align>
						<aligny>top</aligny>
						<aspectratio>keep</aspectratio>
						<colordiffuse>BFFFFFFF</colordiffuse>
					</control>
				</control>
				<control type="group"> <!-- Map 5 -->
					<visible>String.IsEqual(Window.Property(CurrentMap),5)</visible>
					<control type="image">
						<description>map</description>
						<posx>-135</posx>
						<posy>-15</posy>
						<width>1140</width>
						<height>825</height>
						<texture>$INFO[Window.Property(Map.5.Area)]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>map</description>
						<posx>-135</posx>
						<posy>-15</posy>
						<width>1140</width>
						<height>825</height>
						<texture>$INFO[Window.Property(Map.5.Layer)]</texture>
						<aspectratio>scale</aspectratio>
						<colordiffuse>70FFFFFF</colordiffuse>
					</control>
					<control type="image">
						<description>legend image</description>
						<posx>408</posx>
						<posy>830</posy>
						<width>600</width>
						<height>75</height>
						<texture>$INFO[Window.Property(Map.5.Legend)]</texture>
						<align>right</align>
						<aligny>top</aligny>
						<aspectratio>keep</aspectratio>
						<colordiffuse>BFFFFFFF</colordiffuse>
					</control>
				</control>
			</control>
			<!-- Category Lists  -->
		</control>
		<!-- OpenWeatherMaps -->
	</include>
	<!-- ######################################################################### Maps Content #########################################################################-->
	<include name="MapsList1.Content">
		<content>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.1)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.1)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.1)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.1)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.1)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.1))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.2)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.2)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.2)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.2)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.2)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.2))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.3)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.3)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.3)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.3)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.3)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.3))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.4)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.4)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.4)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.4)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.4)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.4))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.5)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.5)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.5)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.5)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.5)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.5))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.6)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.6)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.6)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.6)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.6)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.6))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.7)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.7)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.7)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.7)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.7)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.7))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.8)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.8)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.8)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.8)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.8)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.8))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.9)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.9)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.9)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.9)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.9)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.9))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.10)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.10)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.10)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.10)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.10)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.10))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.11)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.11)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.11)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.11)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.11)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.11))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.12)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.12)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.12)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.12)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.12)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.12))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.13)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.13)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.13)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.13)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.13)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.13))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.14)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.14)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.14)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.14)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.14)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.14))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.15)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.15)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.15)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.15)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.15)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.15))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.16)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.16)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.16)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.16)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.16)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.16))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.17)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.17)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.17)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.17)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.17)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.17))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.18)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.18)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.18)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.18)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.18)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.18))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.19)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.19)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.19)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.19)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.19)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.19))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.20)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.20)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.20)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.20)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.20)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.20))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.21)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.21)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.21)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.21)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.21)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.21))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.22)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.22)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.22)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.22)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.22)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.22))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.23)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.23)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.23)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.23)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.23)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.23))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.24)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.24)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.24)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.24)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.24)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.24))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.25)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.25)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.25)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.25)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.25)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.25))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.26)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.26)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.26)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.26)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.26)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.26))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.27)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.27)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.27)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.27)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.27)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.27))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.28)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.28)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.28)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.28)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.28)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.28))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.29)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.29)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.29)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.29)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.29)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.29))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.1.MapLabel.30)]</label>
				<label2>$INFO[Window.Property(MapList.1.MapLabel2.30)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.1.MapIcon.30)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.1.MapLabel.30)])</onclick>
				<onclick>$INFO[Window.Property(MapList.1.MapOnclick.30)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.1.MapLabel.30))</visible>
			</item>
		</content>
	</include>
	<include name="MapsList2.Content">
		<content>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.1)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.1)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.1)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.1)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.1)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.1))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.2)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.2)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.2)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.2)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.2)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.2))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.3)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.3)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.3)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.3)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.3)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.3))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.4)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.4)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.4)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.4)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.4)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.4))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.5)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.5)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.5)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.5)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.5)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.5))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.6)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.6)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.6)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.6)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.6)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.6))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.7)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.7)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.7)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.7)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.7)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.7))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.8)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.8)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.8)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.8)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.8)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.8))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.9)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.9)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.9)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.9)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.9)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.9))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.10)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.10)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.10)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.10)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.10)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.10))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.11)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.11)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.11)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.11)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.11)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.11))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.12)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.12)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.12)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.12)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.12)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.12))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.13)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.13)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.13)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.13)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.13)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.13))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.14)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.14)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.14)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.14)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.14)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.14))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.15)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.15)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.15)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.15)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.15)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.15))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.16)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.16)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.16)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.16)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.16)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.16))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.17)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.17)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.17)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.17)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.17)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.17))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.18)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.18)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.18)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.18)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.18)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.18))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.19)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.19)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.19)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.19)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.19)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.19))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.20)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.20)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.20)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.20)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.20)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.20))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.21)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.21)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.21)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.21)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.21)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.21))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.22)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.22)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.22)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.22)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.22)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.22))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.23)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.23)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.23)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.23)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.23)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.23))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.24)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.24)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.24)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.24)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.24)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.24))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.25)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.25)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.25)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.25)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.25)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.25))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.26)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.26)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.26)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.26)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.26)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.26))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.27)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.27)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.27)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.27)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.27)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.27))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.28)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.28)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.28)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.28)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.28)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.28))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.29)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.29)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.29)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.29)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.29)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.29))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.2.MapLabel.30)]</label>
				<label2>$INFO[Window.Property(MapList.2.MapLabel2.30)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.2.MapIcon.30)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.2.MapLabel.30)])</onclick>
				<onclick>$INFO[Window.Property(MapList.2.MapOnclick.30)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.2.MapLabel.30))</visible>
			</item>
		</content>
	</include>
	<include name="MapsList3.Content">
		<content>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.1)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.1)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.1)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.1)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.1)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.1))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.2)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.2)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.2)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.2)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.2)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.2))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.3)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.3)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.3)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.3)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.3)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.3))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.4)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.4)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.4)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.4)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.4)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.4))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.5)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.5)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.5)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.5)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.5)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.5))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.6)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.6)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.6)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.6)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.6)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.6))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.7)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.7)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.7)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.7)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.7)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.7))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.8)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.8)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.8)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.8)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.8)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.8))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.9)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.9)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.9)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.9)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.9)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.9))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.10)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.10)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.10)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.10)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.10)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.10))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.11)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.11)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.11)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.11)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.11)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.11))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.12)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.12)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.12)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.12)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.12)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.12))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.13)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.13)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.13)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.13)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.13)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.13))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.14)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.14)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.14)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.14)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.14)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.14))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.15)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.15)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.15)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.15)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.15)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.15))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.16)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.16)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.16)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.16)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.16)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.16))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.17)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.17)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.17)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.17)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.17)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.17))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.18)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.18)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.18)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.18)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.18)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.18))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.19)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.19)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.19)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.19)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.19)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.19))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.20)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.20)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.20)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.20)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.20)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.20))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.21)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.21)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.21)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.21)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.21)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.21))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.22)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.22)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.22)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.22)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.22)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.22))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.23)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.23)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.23)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.23)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.23)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.23))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.24)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.24)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.24)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.24)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.24)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.24))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.25)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.25)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.25)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.25)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.25)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.25))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.26)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.26)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.26)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.26)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.26)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.26))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.27)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.27)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.27)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.27)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.27)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.27))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.28)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.28)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.28)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.28)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.28)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.28))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.29)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.29)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.29)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.29)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.29)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.29))</visible>
			</item>
			<item>
				<label>$INFO[Window.Property(MapList.3.MapLabel.30)]</label>
				<label2>$INFO[Window.Property(MapList.3.MapLabel2.30)]</label2>
				<icon>$INFO[Skin.String(TWC.MapIconPath)]$INFO[Window.Property(MapList.3.MapIcon.30)]</icon>
				<onclick>SetProperty(Weather.CurrentMap,$INFO[Window.Property(MapList.3.MapLabel.30)])</onclick>
				<onclick>$INFO[Window.Property(MapList.3.MapOnclick.30)]</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!String.IsEmpty(Window.Property(MapList.3.MapLabel.30))</visible>
			</item>
		</content>
	</include>
	<!-- ######################################################################### Plus Video #########################################################################-->
	<include name="TWC.Video.VideoWindowDimensions">
		<posx>68</posx>
		<posy>60</posy>
		<width>1080</width>
		<height>810</height>
	</include>
	<include name="TWC.Video">
		<control type="group">
			<posx>435</posx>
			<posy>90</posy>
			<visible>String.IsEqual(Window.Property(Weather.CurrentView),video)</visible>
			<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
			<control type="image">
				<description>Border</description>
				<posx>60</posx>
				<posy>52</posy>
				<width>1095</width>
				<height>825</height>
				<texture border="5">settings_button.png</texture>
			</control>
			<control type="image">
				<description>background</description>
				<include>TWC.Video.VideoWindowDimensions</include>
				<texture>black.png</texture>
			</control>
			<control type="label">
				<description>no video label</description>
				<label>$LOCALIZE[31864][CR][CR]$LOCALIZE[31850]</label>
				<include>TWC.LoadingLabelCommon</include>
			</control>
			<control type="videowindow">
				<include>TWC.Video.VideoWindowDimensions</include>
				<visible>Player.HasVideo</visible>
			</control>
		</control>
	</include>
	<!-- ######################################################################### Alerts #########################################################################-->
	<include name="TWC.Alerts">
		<control type="group">
			<posx>435</posx>
			<posy>90</posy>
			<onright>8001</onright>
			<visible>String.IsEqual(Window.Property(Weather.CurrentView),alerts)</visible>
			<animation effect="fade" reversible="true" time="300">VisibleChange</animation>
			<control type="textbox" id="800">
				<description>alert text</description>
				<posx>0</posx>
				<posy>60</posy>
				<width>1185</width>
				<height>802</height>
				<font>Font_15</font>
				<pagecontrol>8001</pagecontrol>
				<scrolltime>200</scrolltime>
				<align>left</align>
				<aligny>top</aligny>
				<info>Window.Property(Alerts)</info>
				<autoscroll time="2000" delay="15000" repeat="15000">!Control.Hasfocus(8000)</autoscroll>
			</control>
			<control type="scrollbar" id="8001">
				<description>Scroll Bar</description>
				<posx>1200</posx>
				<posy>60</posy>
				<height>802</height>
				<include>TWC.ScrollbarCommon</include>
				<onleft>SetFocus(51)</onleft>
				<onright>SetFocus(51)</onright>
			</control>
		</control>
	</include>
</includes>
