<?xml version="1.0" encoding="UTF-8"?>
<!-- Aeon MQ 5 Helix 6.1.7 -->
<!-- Isengard 7.1.11 Mid List -->
<!-- Jarvis 8.1.13/8.1.14 -->
<!-- Krypton 9.1.16/9.1.17/9.1.19/9.2.1 window IDs/9.2.3 -->
<!-- Leia 10.2.4/10.3.0/10.4.0/10.5.0/10.5.2/10.6.0/10.6.1/10.6.2 -->
<includes>
	<!-- ######################################################################### Music Window #########################################################################-->
	<include name="MusicWindow">
		<defaultcontrol always="true">51</defaultcontrol>
		<menucontrol>9900</menucontrol>
		<onunload condition="Skin.HasSetting(kioskcode)">Skin.Reset($INFO[skin.string(custom_code)])</onunload>
		<onunload>ClearProperty(mv_artist,music)</onunload>
		<views>51,54,55,56,58,59,62,69,70,71</views>
		<controls>
		<control type="list" id="5032"> <!-- check if artist info has extrafanart note: if artist info entry is normalized it isn't found -->
			<posx>-500</posx>
			<posy>-500</posy>
			<height>400</height>
			<width>50</width>
			<visible>Skin.HasSetting(musiclogo) + !String.IsEmpty(Skin.String(CustomMusicLogoPath)) + ![String.IsEmpty(ListItem.Artist) + String.IsEmpty(ListItem.Actor)]</visible>
			<itemlayout />
			<focusedlayout />
			<content target="filemanager">$INFO[Skin.String(CustomMusicLogoPath)]$VAR[value_musicartist]/extrafanart/</content>
		</control>
		<control type="list" id="5033"> <!-- check if mv lib path has extrafanart -->
			<posx>-500</posx>
			<posy>-500</posy>
			<height>400</height>
			<width>50</width>
			<itemlayout />
			<focusedlayout />
			<content target="filemanager">$INFO[ListItem.Path]extrafanart/</content>
		</control>
		<control type="list" id="5034"> <!-- check if song lib path has extrafanart -->
			<posx>-500</posx>
			<posy>-500</posy>
			<height>400</height>
			<width>50</width>
			<itemlayout />
			<focusedlayout />
			<content target="filemanager">$INFO[ListItem.Path]../extrafanart/</content>
		</control>
		<control type="image">
				<!-- Single Fanart -->
				<include>WindowBG</include>
				<texture fallback="special://skin/backgrounds/music.jpg" background="true">$VAR[value_defaultmusicfanart]</texture>
				<visible>![Container.Content(genres) | Container.Content(roles)]</visible>
			</control>
		<control type="multiimage">
				<!-- Multi Fanart -->
				<include>WindowBG</include>
				<imagepath background="true">$VAR[value_musicfanart]</imagepath>
				<visible>![Container.Content(genres) | Container.Content(roles)]</visible>
			</control>
			<control type="image">
				<!-- Single Fanart Genre -->
				<include>WindowBG</include>
				<texture fallback="special://skin/backgrounds/music.jpg" background="true">$VAR[value_defaultmusicfanart]</texture>
				<visible>Container.Content(genres) | Container.Content(roles)</visible>
			</control>
			<control type="multiimage">  <!-- set if 5034 has files -->
				<!-- Extra Fanart Song -->
				<include>WindowBG</include>
				<imagepath background="true">$INFO[ListItem.Path]../extrafanart/</imagepath>
				<visible>String.IsEqual(ListItem.DBType,song) + String.Contains(skin.string(musicfanart),extra) + Integer.IsGreater(Container(5034).NumItems,0) + [!Skin.HasSetting(musiclogo) | [Skin.HasSetting(musiclogo) + String.IsEmpty(Skin.String(CustomMusicLogoPath))]]</visible>
			</control>
			<control type="image" id="9924">
				<!-- record label control -->
				<include>InvisibleButton</include>
				<texture>$VAR[value_recordlabelsicon]</texture>
			</control>
			<control type="group">
				<!-- default group -->
				<include>Animation_Window</include>
				<control type="button" id="9900">
					<!-- to menu/kiosk condition -->
					<include>InvisibleButton</include>
					<onfocus condition="![Skin.HasSetting(kiosk) | Skin.HasSetting(kiosksmart) + !String.Contains(skin.string(codestep),step3)]">SetFocus(9300)</onfocus>
					<onfocus condition="Skin.HasSetting(kiosksmart) + !String.Contains(skin.string(codestep),step3)">SetFocus(9100)</onfocus>
					<onfocus condition="Skin.HasSetting(kiosk)">SetFocus(51)</onfocus>
				</control>
				<control type="button" id="9920">
					<!-- hidden colection/view fanart -->
					<include>InvisibleButton</include>
					<onleft>SetFocus(51)</onleft>
					<onright>SetFocus(51)</onright>
					<onup>SetFocus(51)</onup>
					<ondown>SetFocus(51)</ondown>
				</control>
				<control type="image" id="9921">
					<!-- painel de info auto -->
					<include>InvisibleButton</include>
					<animation effect="fade" start="0" end="100" time="150" delay="1000" condition="String.Contains(skin.string(panel_seconds),1)">Visible</animation>
					<animation effect="fade" start="0" end="100" time="150" delay="2000" condition="String.Contains(skin.string(panel_seconds),2)">Visible</animation>
					<animation effect="fade" start="0" end="100" time="150" delay="3000" condition="String.Contains(skin.string(panel_seconds),3)">Visible</animation>
					<animation effect="fade" start="0" end="100" time="150" delay="4000" condition="String.Contains(skin.string(panel_seconds),4)">Visible</animation>
					<animation effect="fade" start="0" end="100" time="150" delay="5000" condition="String.Contains(skin.string(panel_seconds),5)">Visible</animation>
					<visible>![Container.OnNext | Container.OnPrevious]</visible>
				</control>
				<control type="button" id="9922">
					<!-- refresh das vistas -->
					<include>InvisibleButton</include>
					<animation effect="fade" start="0" end="100" time="150" delay="3000">Hidden</animation>
					<visible>Window.IsVisible(1103)</visible>
					<!-- custom views music -->
				</control>
				<control type="group">
					<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">WindowOpen</animation>
					<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">Visible</animation>
					<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">WindowClose</animation>
					<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">Hidden</animation>
					<visible>![[Control.IsVisible(51) | Control.IsVisible(55) | Control.IsVisible(70) | Control.IsVisible(71)] + [Container.Content(artists) | Container.Content(songs)] | ControlGroup(9000).HasFocus | Control.HasFocus(9920) | Control.IsVisible(9922)]</visible>
					<control type="image">
						<posx>0</posx>
						<posy>0</posy>
						<height>225</height>
						<width>1920</width>
						<texture flipy="true">shadow_mask.png</texture>
						<colordiffuse>75000000</colordiffuse>
					</control>
					<control type="label">
						<!-- Artist -->
						<posx>45</posx>
						<posy>27</posy>
						<width>1650</width>
						<height>60</height>
						<font>Font_40A</font>
						<label>$VAR[value_music_title]</label>
						<textcolor>FFFFFAF0</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>105</posy>
						<width>1650</width>
						<height>38</height>
						<font>Font_18A</font>
						<label>$VAR[value_music_subtitle]</label>
						<textcolor>90FFFFFF</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
					</control>
				</control>
				<control type="group">
					<!-- Grupo ocultar flags ou fanart -->
					<posy>45</posy>
					<include>Animation_HiddenView</include>
					<control type="image">
						<!-- Barra do rodape -->
						<posx>0</posx>
						<posy>765</posy>
						<width>1920</width>
						<height>270</height>
						<colordiffuse>$VAR[value_flagsbar]</colordiffuse>
						<texture>shadow_mask.png</texture>
						<include>Animation_FloorGlass</include>
					</control>
					<control type="image">
						<posx>0</posx>
						<posy>765</posy>
						<width>1920</width>
						<height>270</height>
						<colordiffuse>$VAR[value_texturecolor]</colordiffuse>
						<texture diffuse="shadow_mask.png">shadow_spot.png</texture>
						<animation effect="fade" end="75" condition="true">Conditional</animation>
					</control>
					<control type="group">
						<!-- music -->
						<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">WindowOpen</animation>
						<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">Visible</animation>
						<animation effect="slide" start="0,0" end="0,450" time="500" tween="sine" easing="out">Hidden</animation>
						<visible>[String.Contains(skin.string(mediaflags),on) | String.Contains(skin.string(mediaflags),auto) + Control.IsVisible(9921)] + !String.IsEqual(ListItem.DBType,MusicVideo)</visible>
						<control type="grouplist">
							<!-- Etiquetas -->
							<posx>30</posx>
							<posy>968</posy>
							<orientation>horizontal</orientation>
							<itemgap>38</itemgap>
							<control type="image">
								<!-- recordlabel -->
								<include>FlagImage</include>
								<texture>$VAR[value_recordlabelsicon]</texture>
								<visible>!String.IsEmpty(Control.GetLabel(9924))</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(Control.GetLabel(9924))</visible>
							</control>
							<control type="label">
								<!-- Rating -->
								<include>FlagLabel</include>
								<label>$INFO[ListItem.Rating]</label>
								<visible>!String.IsEmpty(Control.GetLabel(199))</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(Control.GetLabel(199))</visible>
							</control>
							<control type="image">
								<!-- Codec -->
								<include>FlagImage</include>
								<texture>$VAR[value_musiccodec]</texture>
								<visible>!String.IsEmpty(Control.GetLabel(198))</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(Control.GetLabel(198))</visible>
							</control>
							<control type="label">
								<!-- Year -->
								<include>FlagLabel</include>
								<label>$INFO[ListItem.Year]</label>
								<visible>!String.IsEmpty(ListItem.Year)</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(ListItem.Year) + !String.IsEmpty(ListItem.Genre)</visible>
							</control>
							<control type="group">
								<!-- Drive Externo -->
								<width>188</width>
								<visible>!String.IsEmpty(Control.GetLabel(556))</visible>
								<control type="image">
									<posx>8</posx>
									<include>FlagImage</include>
									<texture>flags/externaldrive.png</texture>
								</control>
								<control type="label">
									<posx>20</posx>
									<posy>2</posy>
									<width>134</width>
									<height>75</height>
									<align>center</align>
									<aligny>center</aligny>
									<font>Font_20B</font>
									<textcolor>$VAR[value_flagscolor]</textcolor>
									<label>$VAR[value_drive]</label>
								</control>
								<control type="image">
									<posx>188</posx>
									<include>FlagSeparator</include>
								</control>
							</control>
							<control type="label">
								<!-- Genre -->
								<posx>18</posx>
								<posy>2</posy>
								<width>450</width>
								<height>75</height>
								<align>center</align>
								<aligny>center</aligny>
								<font>Font_20B</font>
								<label>$INFO[ListItem.Genre]</label>
								<textcolor>$VAR[value_flagscolor]</textcolor>
								<scroll>true</scroll>
							</control>
							<control type="label">
								<!-- Role -->
								<posx>18</posx>
								<posy>2</posy>
								<width>450</width>
								<height>75</height>
								<align>center</align>
								<aligny>center</aligny>
								<font>Font_20B</font>
								<label>$INFO[ListItem.Label]</label>
								<textcolor>$VAR[value_flagscolor]</textcolor>
								<scroll>true</scroll>
								<visible>String.StartsWith(Container.FolderName,Role)</visible>
							</control>
							<control type="label">
								<!-- specific roles -->
								<posx>18</posx>
								<posy>2</posy>
								<width>450</width>
								<height>75</height>
								<align>center</align>
								<aligny>center</aligny>
								<font>Font_20B</font>
								<label>$VAR[value_music_roles]</label>
								<textcolor>$VAR[value_flagscolor]</textcolor>
								<scroll>true</scroll>
								<visible>String.Contains(Container.FolderPath,role=) | String.Contains(Container.FolderPath,roleid=-1000)</visible>
							</control>
						</control>
					</control>
					<control type="group">
						<!-- Music Video -->
						<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">WindowOpen</animation>
						<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">Visible</animation>
						<animation effect="slide" start="0,0" end="0,450" time="500" tween="sine" easing="out">Hidden</animation>
						<visible>[String.Contains(skin.string(mediaflags),on) | String.Contains(skin.string(mediaflags),auto) + Control.IsVisible(9921)] + [String.IsEqual(ListItem.DBType,MusicVideo) | [String.IsEmpty(ListItem.DBType) + String.Contains(ListItem.Path,musicvideos)]]</visible>
						<control type="grouplist">
							<!-- Etiquetas/tags -->
							<posx>30</posx>
							<posy>968</posy>
							<orientation>horizontal</orientation>
							<itemgap>26</itemgap>
							<control type="image">
								<!-- studio -->
								<include>FlagImage</include>
								<texture>$VAR[value_studiosicon]</texture>
								<visible>!String.IsEmpty(Control.GetLabel(9924))</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(Control.GetLabel(9924))</visible>
							</control>
							<control type="image">
								<!-- Mpaa -->
								<include>FlagImage</include>
								<texture>$VAR[value_mpaa]</texture>
								<visible>!String.IsEmpty(ListItem.Mpaa)</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(ListItem.Mpaa)</visible>
							</control>
							<control type="group">
								<!-- Rating -->
								<width>188</width>
								<visible>!String.IsEmpty(ListItem.Title)</visible>
								<control type="image">
									<posx>8</posx>
									<include>FlagImage</include>
									<texture>flags/rating.png</texture>
								</control>
								<control type="label">
									<posx>20</posx>
									<posy>2</posy>
									<width>134</width>
									<height>75</height>
									<align>center</align>
									<aligny>center</aligny>
									<font>Font_20B</font>
									<textcolor>$VAR[value_flagscolor]</textcolor>
									<label fallback="NR">$INFO[ListItem.Rating]</label>
								</control>
								<control type="image">
									<posx>188</posx>
									<include>FlagSeparator</include>
								</control>
							</control>
							<control type="image">
								<!-- Codec -->
								<include>FlagImage</include>
								<texture>$VAR[value_videocodec]</texture>
								<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
							</control>
							<control type="image">
								<!-- Resolution -->
								<include>FlagImage</include>
								<texture>$INFO[ListItem.VideoResolution,flags/resolution/,.png]</texture>
								<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
							</control>
							<control type="image">
								<!-- Aspect -->
								<include>FlagImage</include>
								<texture>$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
								<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
							</control>
							<control type="image">
								<!-- Audio Codec -->
								<include>FlagImage</include>
								<texture>$INFO[ListItem.AudioCodec,flags/audiocodec/,.png]</texture>
								<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
							</control>
							<control type="image">
								<!-- Channels -->
								<include>FlagImage</include>
								<texture>$INFO[ListItem.AudioChannels,flags/audiochannels/,ch.png]</texture>
								<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
							</control>
							<control type="group">
								<!-- Drive Externo -->
								<width>188</width>
								<visible>!String.IsEmpty(Control.GetLabel(556))</visible>
								<control type="image">
									<posx>8</posx>
									<include>FlagImage</include>
									<texture>flags/externaldrive.png</texture>
								</control>
								<control type="label">
									<posx>20</posx>
									<posy>2</posy>
									<width>134</width>
									<height>75</height>
									<align>center</align>
									<aligny>center</aligny>
									<font>Font_20B</font>
									<textcolor>$VAR[value_flagscolor]</textcolor>
									<label>$VAR[value_drive]</label>
								</control>
								<control type="image">
									<posx>188</posx>
									<include>FlagSeparator</include>
								</control>
							</control>
							<control type="image">
								<!-- Trailer -->
								<include>FlagImage</include>
								<texture>flags/trailer.png</texture>
								<visible>!String.IsEmpty(ListItem.Trailer)</visible>
							</control>
							<control type="image">
								<include>FlagSeparator</include>
								<visible>!String.IsEmpty(ListItem.Trailer) + ListItem.IsResumable</visible>
							</control>
							<control type="group">
								<!-- % Played -->
								<width>188</width>
								<visible>ListItem.IsResumable</visible>
								<control type="image">
									<include>FlagImage</include>
									<texture>flags/percentplayed.png</texture>
								</control>
								<control type="label">
									<posx>18</posx>
									<posy>2</posy>
									<width>134</width>
									<height>75</height>
									<align>center</align>
									<aligny>center</aligny>
									<font>Font_20B</font>
									<textcolor>$VAR[value_flagscolor]</textcolor>
									<label>$INFO[ListItem.PercentPlayed]%</label>
								</control>
							</control>
						</control>
					</control>
					<include>ContainerViewPage</include>
					<control type="label" id="556">
						<!-- Hard Disk -->
						<include>InvisibleButton</include>
						<label>$VAR[value_drive]</label>
					</control>
					<control type="image">
						<posx>0</posx>
						<posy>975</posy>
						<height>63</height>
						<width>1920</width>
						<texture>gradient_small.png</texture>
					</control>
					<control type="image" id="198">
						<!-- Codec -->
						<include>InvisibleButton</include>
						<fadetime>FanartCrossFadeTime</fadetime>
						<texture>$VAR[value_musiccodec]</texture>
					</control>
					<control type="image" id="199">
						<!-- Rating -->
						<include>InvisibleButton</include>
						<fadetime>FanartCrossFadeTime</fadetime>
						<texture>$VAR[User_Rating_Stars]</texture>
					</control>
					<!-- ViewTypes -->
					<include>ViewWide</include>
					<!-- 51 -->
					<include condition="Skin.HasSetting(viewposter_music)">ViewPoster</include>
					<!-- 54 -->
					<include condition="Skin.HasSetting(viewlowlist_music)">ViewLowList</include>
					<!-- 55 -->
					<include condition="Skin.HasSetting(viewwall_music)">ViewWallAudio</include>
					<!-- 56 -->
					<include condition="Skin.HasSetting(viewcoverflow_music)">ViewCoverFlowAudio</include>
					<!-- 58 -->
					<include condition="Skin.HasSetting(viewrightlist_music)">ViewRightList</include>
					<!-- 59 -->
					<include condition="Skin.HasSetting(viewpanel_music)">ViewPanel</include>
					<!-- 62 -->
					<include condition="Skin.HasSetting(viewmidlist_music)">ViewMidList</include>
					<!-- 70-->
					<include condition="Skin.HasSetting(viewmultilist_music)">ViewMultiList</include>
					<!-- 71 -->
					<include condition="Skin.HasSetting(viewshelfcase_music)">ViewShelfCase</include>
					<!-- 69-->
				</control>
				<control type="image">
					<!-- Logo -->
					<posx>1402</posx>
					<posy>489</posy>
					<width>300</width>
					<height>75</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" fallback="transparent.png">$INFO[ListItem.Art(artist.clearlogo)]</texture>
					<fadetime>FanartCrossFadeTime</fadetime>
					<animation effect="slide" end="-735,-270" tween="cubic" easing="in" condition="Control.IsVisible(54)">Conditional</animation>
					<include>Animation_HiddenView</include>
					<visible>Control.IsVisible(54) + !String.IsEqual(ListItem.DBType,genre)</visible>
				</control>
				<include>TouchScreen</include>
				<include>ScrollLabel</include>
				<include condition="Skin.HasSetting(musicinfobar)">MultiData</include>
				<include condition="Skin.HasSetting(musicdate)">TopDate</include>
				<include>TopMenu_Audio</include>
				<include>BGBlack</include>
			</control>
		</controls>
	</include>
	<include name="MusicPLWindow">
		<control type="list" id="5032"> <!-- check if artist info has extrafanart note: if artist info entry is normalized it isn't found -->
			<posx>-500</posx>
			<posy>-500</posy>
			<height>400</height>
			<width>50</width>
			<visible>Skin.HasSetting(musiclogo) + !String.IsEmpty(Skin.String(CustomMusicLogoPath)) + ![String.IsEmpty(ListItem.Artist) + String.IsEmpty(ListItem.Actor)]</visible>
			<itemlayout />
			<focusedlayout />
			<content target="filemanager">$INFO[Skin.String(CustomMusicLogoPath)]$VAR[value_musicartist]/extrafanart/</content>
		</control>
		<control type="list" id="5033"> <!-- check if mv lib path has extrafanart -->
			<posx>-500</posx>
			<posy>-500</posy>
			<height>400</height>
			<width>50</width>
			<itemlayout />
			<focusedlayout />
			<content target="filemanager">$INFO[ListItem.Path]extrafanart/</content>
		</control>
		<control type="list" id="5034"> <!-- check if song lib path has extrafanart -->
			<posx>-500</posx>
			<posy>-500</posy>
			<height>400</height>
			<width>50</width>
			<itemlayout />
			<focusedlayout />
			<content target="filemanager">$INFO[ListItem.Path]../extrafanart/</content>
		</control>		
		<control type="image">
			<!-- Single Fanart -->
			<include>WindowBG</include>
			<texture fallback="special://skin/backgrounds/music.jpg" background="true">$VAR[value_defaultmusicfanart]</texture>
			<visible>![Container.Content(genres) | Container.Content(roles)]</visible>
		</control>
		<control type="multiimage">
			<!-- Multi Fanart -->
			<include>WindowBG</include>
			<imagepath background="true">$VAR[value_musicfanart]</imagepath>
			<visible>![Container.Content(genres) | Container.Content(roles)]</visible>
		</control>
		<control type="image">
			<!-- Single Fanart Genre -->
			<include>WindowBG</include>
			<texture fallback="special://skin/backgrounds/music.jpg" background="true">$VAR[value_defaultmusicfanart]</texture>
			<visible>Container.Content(genres) | Container.Content(roles)</visible>
		</control>
		<control type="image" id="9924">
			<!-- record label control -->
			<include>InvisibleButton</include>
			<texture>$VAR[value_recordlabelsicon]</texture>
		</control>
		<include>LiveBG</include>
		<control type="group">
			<!-- default group -->
			<include>Animation_Window</include>
			<control type="button" id="9900">
				<!-- to menu/kiosk condition -->
				<include>InvisibleButton</include>
				<onfocus condition="![Skin.HasSetting(kiosk) | Skin.HasSetting(kiosksmart) + !String.Contains(skin.string(codestep),step3)]">SetFocus(9300)</onfocus>
				<onfocus condition="Skin.HasSetting(kiosksmart) + !String.Contains(skin.string(codestep),step3)">SetFocus(9100)</onfocus>
				<onfocus condition="Skin.HasSetting(kiosk)">SetFocus(51)</onfocus>
			</control>
			<control type="button" id="9920">
				<!-- hidden colection/view fanart -->
				<include>InvisibleButton</include>
				<onleft>SetFocus(51)</onleft>
				<onright>SetFocus(51)</onright>
				<onup>SetFocus(51)</onup>
				<ondown>SetFocus(51)</ondown>
			</control>
			<control type="image" id="9921">
				<!-- painel de info auto -->
				<include>InvisibleButton</include>
				<animation effect="fade" start="0" end="100" time="150" delay="1000" condition="String.Contains(skin.string(panel_seconds),1)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="2000" condition="String.Contains(skin.string(panel_seconds),2)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="3000" condition="String.Contains(skin.string(panel_seconds),3)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="4000" condition="String.Contains(skin.string(panel_seconds),4)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="5000" condition="String.Contains(skin.string(panel_seconds),5)">Visible</animation>
				<visible>![Container.OnNext | Container.OnPrevious]</visible>
			</control>
			<control type="button" id="9922">
				<!-- refresh das vistas -->
				<include>InvisibleButton</include>
				<animation effect="fade" start="0" end="100" time="150" delay="3000">Hidden</animation>
				<visible>Window.IsVisible(1103)</visible>
				<!-- custom views music -->
			</control>
			<control type="group">
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">WindowOpen</animation>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">Visible</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">WindowClose</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">Hidden</animation>
				<visible>![Control.IsVisible(51) | [Control.IsVisible(55) | Control.IsVisible(70)] + [Container.Content(artists) | Container.Content(songs)] | ControlGroup(9000).HasFocus | Control.HasFocus(9920) | Control.IsVisible(9922)]</visible>
				<control type="image">
					<posx>0</posx>
					<posy>0</posy>
					<height>225</height>
					<width>1920</width>
					<texture flipy="true">shadow_mask.png</texture>
					<colordiffuse>75000000</colordiffuse>
				</control>
				<control type="label">
					<!-- Artist -->
					<posx>45</posx>
					<posy>27</posy>
					<width>1650</width>
					<height>60</height>
					<font>Font_40A</font>
					<label>$VAR[value_music_title]</label>
					<textcolor>FFFFFAF0</textcolor>
					<scroll>true</scroll>
					<scrollout>false</scrollout>
				</control>
				<control type="label">
					<posx>45</posx>
					<posy>105</posy>
					<width>1650</width>
					<height>38</height>
					<font>Font_18A</font>
					<label>$VAR[value_music_subtitle]</label>
					<textcolor>90FFFFFF</textcolor>
					<scroll>true</scroll>
					<scrollout>false</scrollout>
				</control>
			</control>
			<control type="group">
				<!-- Grupo ocultar flags ou fanart -->
				<posy>45</posy>
				<include>Animation_HiddenView</include>
				<control type="image">
					<!-- Barra do rodape -->
					<posx>0</posx>
					<posy>765</posy>
					<width>1920</width>
					<height>270</height>
					<colordiffuse>$VAR[value_flagsbar]</colordiffuse>
					<texture>shadow_mask.png</texture>
					<include>Animation_FloorGlass</include>
				</control>
				<control type="image">
					<posx>0</posx>
					<posy>765</posy>
					<width>1920</width>
					<height>270</height>
					<colordiffuse>$VAR[value_texturecolor]</colordiffuse>
					<texture diffuse="shadow_mask.png">shadow_spot.png</texture>
					<animation effect="fade" end="75" condition="true">Conditional</animation>
				</control>
				<control type="group">
					<!-- music -->
					<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">WindowOpen</animation>
					<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">Visible</animation>
					<animation effect="slide" start="0,0" end="0,450" time="500" tween="sine" easing="out">Hidden</animation>
					<visible>[String.Contains(skin.string(mediaflags),on) | String.Contains(skin.string(mediaflags),auto) + Control.IsVisible(9921)] + !String.IsEqual(ListItem.DBType,MusicVideo)</visible>
					<control type="grouplist">
						<!-- Etiquetas -->
						<posx>30</posx>
						<posy>968</posy>
						<orientation>horizontal</orientation>
						<itemgap>38</itemgap>
						<control type="image">
							<!-- recordlabel -->
							<include>FlagImage</include>
							<texture>$VAR[value_recordlabelsicon]</texture>
							<visible>!String.IsEmpty(Control.GetLabel(9924))</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(Control.GetLabel(9924))</visible>
						</control>
						<control type="label">
							<!-- Rating -->
							<include>FlagLabel</include>
							<label>$INFO[ListItem.Rating]</label>
							<visible>!String.IsEmpty(Control.GetLabel(199))</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(Control.GetLabel(199))</visible>
						</control>
						<control type="image">
							<!-- Codec -->
							<include>FlagImage</include>
							<texture>$VAR[value_musiccodec]</texture>
							<visible>!String.IsEmpty(Control.GetLabel(198))</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(Control.GetLabel(198))</visible>
						</control>
						<control type="label">
							<!-- Year -->
							<include>FlagLabel</include>
							<label>$INFO[ListItem.Year]</label>
							<visible>!String.IsEmpty(ListItem.Year)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.Year) + !String.IsEmpty(ListItem.Genre)</visible>
						</control>
						<control type="group">
							<!-- Drive Externo -->
							<width>188</width>
							<visible>!String.IsEmpty(Control.GetLabel(556))</visible>
							<control type="image">
								<posx>8</posx>
								<include>FlagImage</include>
								<texture>flags/externaldrive.png</texture>
							</control>
							<control type="label">
								<posx>20</posx>
								<posy>2</posy>
								<width>134</width>
								<height>75</height>
								<align>center</align>
								<aligny>center</aligny>
								<font>Font_20B</font>
								<textcolor>$VAR[value_flagscolor]</textcolor>
								<label>$VAR[value_drive]</label>
							</control>
							<control type="image">
								<posx>188</posx>
								<include>FlagSeparator</include>
							</control>
						</control>
						<control type="label">
							<!-- Genre -->
							<posx>18</posx>
							<posy>2</posy>
							<width>450</width>
							<height>75</height>
							<align>center</align>
							<aligny>center</aligny>
							<font>Font_20B</font>
							<label>$INFO[ListItem.Genre]</label>
							<textcolor>$VAR[value_flagscolor]</textcolor>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<!-- Role -->
							<posx>18</posx>
							<posy>2</posy>
							<width>450</width>
							<height>75</height>
							<align>center</align>
							<aligny>center</aligny>
							<font>Font_20B</font>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>$VAR[value_flagscolor]</textcolor>
							<scroll>true</scroll>
							<visible>String.IsEqual(Container.FolderName,Roles)</visible>
						</control>
					</control>
				</control>
				<control type="group">
					<!-- Music Video -->
					<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">WindowOpen</animation>
					<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">Visible</animation>
					<animation effect="slide" start="0,0" end="0,450" time="500" tween="sine" easing="out">Hidden</animation>
					<visible>[String.Contains(skin.string(mediaflags),on) | String.Contains(skin.string(mediaflags),auto) + Control.IsVisible(9921)] + [String.IsEqual(ListItem.DBType,MusicVideo) | [String.IsEmpty(ListItem.DBType) + String.Contains(ListItem.Path, musicvideos)]]</visible>
					<control type="grouplist">
						<!-- Etiquetas/tags -->
						<posx>30</posx>
						<posy>968</posy>
						<orientation>horizontal</orientation>
						<itemgap>26</itemgap>
						<control type="image">
							<!-- studio -->
							<include>FlagImage</include>
							<texture>$VAR[value_studiosicon]</texture>
							<visible>!String.IsEmpty(Control.GetLabel(9924))</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(Control.GetLabel(9924))</visible>
						</control>
						<control type="image">
							<!-- Mpaa -->
							<include>FlagImage</include>
							<texture>$VAR[value_mpaa]</texture>
							<visible>!String.IsEmpty(ListItem.Mpaa)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.Mpaa)</visible>
						</control>
						<control type="group">
							<!-- Rating -->
							<width>188</width>
							<visible>!String.IsEmpty(ListItem.Title)</visible>
							<control type="image">
								<posx>8</posx>
								<include>FlagImage</include>
								<texture>flags/rating.png</texture>
							</control>
							<control type="label">
								<posx>20</posx>
								<posy>2</posy>
								<width>134</width>
								<height>75</height>
								<align>center</align>
								<aligny>center</aligny>
								<font>Font_20B</font>
								<textcolor>$VAR[value_flagscolor]</textcolor>
								<label fallback="NR">$INFO[ListItem.Rating]</label>
							</control>
							<control type="image">
								<posx>188</posx>
								<include>FlagSeparator</include>
							</control>
						</control>
						<control type="image">
							<!-- Codec -->
							<include>FlagImage</include>
							<texture>$VAR[value_videocodec]</texture>
							<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
						</control>
						<control type="image">
							<!-- Resolution -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.VideoResolution,flags/resolution/,.png]</texture>
							<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
						</control>
						<control type="image">
							<!-- Aspect -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
							<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
						</control>
						<control type="image">
							<!-- Audio Codec -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.AudioCodec,flags/audiocodec/,.png]</texture>
							<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
						</control>
						<control type="image">
							<!-- Channels -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.AudioChannels,flags/audiochannels/,ch.png]</texture>
							<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
						</control>
						<control type="group">
							<!-- Drive Externo -->
							<width>188</width>
							<visible>!String.IsEmpty(Control.GetLabel(556))</visible>
							<control type="image">
								<posx>8</posx>
								<include>FlagImage</include>
								<texture>flags/externaldrive.png</texture>
							</control>
							<control type="label">
								<posx>20</posx>
								<posy>2</posy>
								<width>134</width>
								<height>75</height>
								<align>center</align>
								<aligny>center</aligny>
								<font>Font_20B</font>
								<textcolor>$VAR[value_flagscolor]</textcolor>
								<label>$VAR[value_drive]</label>
							</control>
							<control type="image">
								<posx>188</posx>
								<include>FlagSeparator</include>
							</control>
						</control>
						<control type="image">
							<!-- Trailer -->
							<include>FlagImage</include>
							<texture>flags/trailer.png</texture>
							<visible>!String.IsEmpty(ListItem.Trailer)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.Trailer) + ListItem.IsResumable</visible>
						</control>
						<control type="group">
							<!-- % Played -->
							<width>188</width>
							<visible>ListItem.IsResumable</visible>
							<control type="image">
								<include>FlagImage</include>
								<texture>flags/percentplayed.png</texture>
							</control>
							<control type="label">
								<posx>18</posx>
								<posy>2</posy>
								<width>134</width>
								<height>75</height>
								<align>center</align>
								<aligny>center</aligny>
								<font>Font_20B</font>
								<textcolor>$VAR[value_flagscolor]</textcolor>
								<label>$INFO[ListItem.PercentPlayed]%</label>
							</control>
						</control>
					</control>
				</control>
				<control type="label" id="556">
					<!-- Hard Disk -->
					<include>InvisibleButton</include>
					<label>$VAR[value_drive]</label>
				</control>
				<control type="image">
					<posx>0</posx>
					<posy>975</posy>
					<height>63</height>
					<width>1920</width>
					<texture>gradient_small.png</texture>
				</control>
				<control type="image" id="198">
					<!-- Codec -->
					<include>InvisibleButton</include>
					<fadetime>FanartCrossFadeTime</fadetime>
					<texture>$VAR[value_musiccodec]</texture>
				</control>
				<control type="image" id="199">
					<!-- Rating -->
					<include>InvisibleButton</include>
					<fadetime>FanartCrossFadeTime</fadetime>
					<texture>$VAR[User_Rating_Stars]</texture>
				</control>
				<!-- ViewTypes -->
				<include>ViewWide</include>
				<!-- 51 -->
				<include condition="Skin.HasSetting(viewposter_music)">ViewPoster</include>
				<!-- 54 -->
				<include condition="Skin.HasSetting(viewlowlist_music)">ViewLowList</include>
				<!-- 55 -->
				<include condition="Skin.HasSetting(viewwall_music)">ViewWallAudio</include>
				<!-- 56 -->
				<include condition="Skin.HasSetting(viewcoverflow_music)">ViewCoverFlowAudio</include>
				<!-- 58 -->
				<include condition="Skin.HasSetting(viewrightlist_music)">ViewRightList</include>
				<!-- 59 -->
				<include condition="Skin.HasSetting(viewpanel_music)">ViewPanel</include>
				<!-- 62 -->
				<include condition="Skin.HasSetting(viewmidlist_music)">ViewMidList</include>
				<!-- 70-->
				<include condition="Skin.HasSetting(viewshelfcase_music)">ViewShelfCase</include>
				<!-- 69-->
			</control>
			<control type="image">
				<!-- Logo -->
				<posx>1402</posx>
				<posy>962</posy>
				<width>300</width>
				<height>75</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" fallback="transparent.png">$INFO[ListItem.Art(artist.clearlogo)]</texture>
				<fadetime>FanartCrossFadeTime</fadetime>
				<animation effect="slide" end="-735,-270" tween="cubic" easing="in" condition="Control.IsVisible(54)">Conditional</animation>
				<include>Animation_HiddenView</include>
				<visible>Control.IsVisible(54) + !String.IsEqual(ListItem.DBType, genre)</visible>
			</control>
			<include>TouchScreen</include>
			<include>ScrollLabel</include>
			<include condition="Skin.HasSetting(musicinfobar)">MultiData</include>
			<include condition="Skin.HasSetting(musictopdate)">TopDate</include>
			<include>TopMenu_Audio</include>
			<include>BGBlack</include>
		</control>
	</include>
</includes>
