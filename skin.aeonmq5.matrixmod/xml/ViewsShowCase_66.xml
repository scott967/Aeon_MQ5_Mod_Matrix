<?xml version="1.0" encoding="UTF-8"?>
<!-- Aeon MQ 5 Helix 6.1.6 -->
<!-- Jarvis 8.1.13 -->
<!-- Krypton 9.1.18/9.1.19/9.2.1 window IDs -->
<!-- Leia 10.6.1/10.6.2 -->
<includes>
	<!--##################################################################################   VISTA ShowCase - ID 66   ##################################################################################-->
	<include name="EpisodeShowCaseThumbDimensions">
		<posx>-222</posx>
		<posy>140</posy>
		<width>351</width>
		<height>216</height>
	</include>
	<include name="EpisodeShowCaseThumbReflection">
		<include>EpisodeShowCaseThumbReflectionDimensions</include>
		<texture background="true" flipy="true" diffuse="thumb_cdcover_mask_cdart.png">DefaultVideo.png</texture>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<animation effect="fade" start="50" end="50" time="0" condition="true">Conditional</animation>
	</include>
	<include name="EpisodeShowCaseThumbReflectionDimensions">
		<posx>-222</posx>
		<posy>357</posy>
		<width>351</width>
		<height>216</height>
	</include>
	<include name="ShowCasePoster">
		<posx>74</posx>
		<posy>12</posy>
		<width>260</width>
		<height>381</height>
		<aspectratio align="center" aligny="bottom">stretch</aspectratio>
	</include>
	<include name="ShowCasePosterReflect">
		<posx>74</posx>
		<posy>394</posy>
		<width>260</width>
		<height>381</height>
		<aspectratio align="center" aligny="top">stretch</aspectratio>
		<colordiffuse>50FFFFFF</colordiffuse>
	</include>
	<include name="WatchedShowCase">
		<posx>284</posx>
		<posy>9</posy>
		<width>52</width>
		<height>52</height>
		<texture>$VAR[value_watchedstyle]</texture>
		<colordiffuse>$VAR[value_watchedcolor]</colordiffuse>
		<visible>!Skin.HasSetting(nooverlays)</visible>
	</include>
	<include name="ShowCaseThumbReflect">
		<posx>84</posx>
		<posy>400</posy>
		<width>228</width>
		<height>318</height>
		<aspectratio align="center" aligny="top">scale</aspectratio>
	</include>
	<include name="ShowCaseThumbCaseReflect">
		<posx>63</posx>
		<posy>369</posy>
		<width>284</width>
		<height>390</height>
	</include>
	<include name="ShowCaseCase">
		<posx>84</posx>
		<posy>64</posy>
		<width>228</width>
		<height>318</height>
		<aspectratio align="center" aligny="bottom">stretch</aspectratio>
	</include>
	<include name="ShowCaseCodec">
		<posx>174</posx>
		<posy>27</posy>
		<width>57</width>
		<height>57</height>
		<align>center</align>
		<aligny>center</aligny>
		<aspectratio>keep</aspectratio>
	</include>
	<include name="ShowCaseThumbCase">
		<posx>63</posx>
		<posy>21</posy>
		<width>284</width>
		<height>390</height>
	</include>
	<include name="WatchedShowCaseCase">
		<posx>261</posx>
		<posy>70</posy>
		<width>52</width>
		<height>52</height>
		<texture>$VAR[value_watchedstyle]</texture>
		<colordiffuse>$VAR[value_watchedcolor]</colordiffuse>
		<animation effect="slide" start="0,0" end="3,-16" time="800" tween="cubic" easing="inout" condition="Skin.HasSetting(flattenshowcase)">Conditional</animation>
		<visible>!Skin.HasSetting(nooverlays)</visible>
	</include>
	<include name="ShowCaseCaseFlat">
		<posx>84</posx>
		<posy>56</posy>
		<width>232</width>
		<height>330</height>
		<aspectratio align="center" aligny="bottom">stretch</aspectratio>
	</include>
	<include name="ShowCaseCodecFlat">
		<posx>171</posx>
		<posy>3</posy>
		<width>69</width>
		<height>69</height>
		<align>center</align>
		<aligny>center</aligny>
		<aspectratio>keep</aspectratio>
	</include>
	<include name="ShowCaseThumbCaseFlat">
		<posx>63</posx>
		<posy>0</posy>
		<width>286</width>
		<height>418</height>
		<aspectratio>stretch</aspectratio>
	</include>
	<include name="ShowCaseThumbReflectFlat">
		<posx>84</posx>
		<posy>410</posy>
		<width>232</width>
		<height>328</height>
		<aspectratio align="center" aligny="top">scale</aspectratio>
	</include>
	<include name="ShowCaseThumbCaseReflectFlat">
		<posx>63</posx>
		<posy>375</posy>
		<width>286</width>
		<height>418</height>
		<aspectratio>stretch</aspectratio>
	</include>
	<include name="ShowCaseLabel_Fanart">
		<posx>0</posx>
		<height>30</height>
		<width>518</width>
		<font>Font_18A</font>
		<aligny>top</aligny>
		<align>left</align>
		<textcolor>$VAR[value_headercolor]</textcolor>
		<textoffsetx>0</textoffsetx>
		<textoffsety>0</textoffsety>
		<scroll>true</scroll>
	</include>
	<include name="ShowCaseLabel_Extrathumbs">
		<posx>450</posx>
		<width>472</width>
		<height>20</height>
		<font>Font_18A</font>
		<textcolor>$VAR[value_headercolor]</textcolor>
	</include>
	<include name="ShowCaseValue_Extrathumbs">
		<posx>450</posx>
		<width>472</width>
		<height>20</height>
		<align>left</align>
		<font>Font_18A</font>
		<textcolor>FFFFFAF0</textcolor>
		<scroll>true</scroll>
		<scrollout>false</scrollout>
	</include>
	<include name="MovieShowCaseFixedList">
		<control type="fixedlist" id="66">
			<include>MovieShowCase_List_Content</include>
		</control>
	</include>
	<include name="MovieShowCaseWrapList">
		<control type="wraplist" id="66">
			<include>MovieShowCase_List_Content</include>
		</control>
	</include>
	<include name="MovieShowCase_List_Content">
		<viewtype label="31802">list</viewtype>
		<posx>-124</posx>
		<posy>540</posy>
		<width>2169</width>
		<height>525</height>
		<onleft>66</onleft>
		<onright>66</onright>
		<onup condition="String.IsEqual(skin.string(showcasevideopanel),manual) + !String.IsEqual(ListItem.Label,..)">9966</onup>
		<onup condition="![String.IsEqual(skin.string(showcasevideopanel),manual) + !String.IsEqual(ListItem.Label,..)]">9900</onup>
		<ondown>80</ondown>
		<pagecontrol>80</pagecontrol>
		<orientation>horizontal</orientation>
		<focusposition>3</focusposition>
		<preloaditems>2</preloaditems>
		<scrolltime>450</scrolltime>
		<visible>![Container.Content(episodes) | Container.Content(years)]</visible>
		<itemlayout height="570" width="294" condition="Window.IsActive(videos) + !Container.Content(episodes) | Window.IsActive(programs)">
			<control type="group">
				<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs)]</visible>
				<control type="image">
					<!-- Poster reflexo -->
					<include>ShowCasePosterReflect</include>
					<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
					<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
				</control>
				<control type="image">
					<!-- Poster -->
					<include>ShowCasePoster</include>
					<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
					<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
				</control>
				<control type="image">
					<include>WatchedShowCase</include>
					<visible>String.IsEqual(ListItem(0).Overlay,OverlayWatched.png) + [Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
				</control>
			</control>
			<control type="group">
				<visible>![Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs)]</visible>
				<control type="image">
					<!-- Poster reflexo -->
					<include>ShowCaseThumbReflectFlat</include>
					<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
					<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
				</control>
				<control type="image">
					<!-- Poster + Estojo Reflexo -->
					<include>ShowCaseThumbCaseReflectFlat</include>
					<texture flipy="true" diffuse="thumb_box_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_videocase0]</texture>
					<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
				</control>
				<control type="image">
					<!-- Poster + Estojo -->
					<include>ShowCaseCaseFlat</include>
					<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
					<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
				</control>
				<control type="image">
					<include>WatchedShowCaseCase</include>
					<visible>String.IsEqual(ListItem(0).Overlay,OverlayWatched.png) + [Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
				</control>
				<control type="image">
					<!-- Estojo -->
					<include>ShowCaseThumbCaseFlat</include>
					<texture>$VAR[value_videocase0]</texture>
					<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
				</control>
				<control type="image">
					<!-- Codec -->
					<include>ShowCaseCodecFlat</include>
					<texture>$VAR[value_videocodec0]</texture>
					<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
				</control>
			</control>
		</itemlayout>
		<focusedlayout height="570" width="294" condition="Window.IsActive(videos) + !Container.Content(episodes) | Window.IsActive(programs)">
			<control type="group">
				<animation effect="zoom" start="100" end="110" center="202,308" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
				<animation effect="zoom" start="110" end="100" center="202,308" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(66) + [Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Window.IsActive(programs)] | !Window.IsActive(Videos) + Skin.HasSetting(flattenshowcasemusic)]">Unfocus</animation>
				<control type="group">
					<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs)]</visible>
					<control type="image">
						<!-- Poster reflexo -->
						<include>ShowCasePosterReflect</include>
						<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
						<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
					</control>
					<control type="image">
						<!-- Poster -->
						<include>ShowCasePoster</include>
						<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
						<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
					</control>
					<control type="image">
						<include>WatchedShowCase</include>
						<visible>String.IsEqual(ListItem(0).Overlay,OverlayWatched.png) + [Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
					</control>
				</control>
				<control type="group">
					<visible>![Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs)]</visible>
					<control type="image">
						<!-- Poster reflexo -->
						<include>ShowCaseThumbReflectFlat</include>
						<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
						<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
					</control>
					<control type="image">
						<!-- Poster + Estojo Reflexo -->
						<include>ShowCaseThumbCaseReflectFlat</include>
						<texture flipy="true" diffuse="thumb_box_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_videocase0]</texture>
						<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
					</control>
					<control type="image">
						<!-- Poster + Estojo -->
						<include>ShowCaseCaseFlat</include>
						<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
						<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
					</control>
					<control type="image">
						<include>WatchedShowCaseCase</include>
						<visible>String.IsEqual(ListItem(0).Overlay,OverlayWatched.png) + [Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
					</control>
					<control type="image">
						<!-- Estojo -->
						<include>ShowCaseThumbCaseFlat</include>
						<texture>$VAR[value_videocase0]</texture>
						<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
					</control>
					<control type="image">
						<!-- Codec -->
						<include>ShowCaseCodecFlat</include>
						<texture>$VAR[value_videocodec0]</texture>
						<visible>[Skin.HasSetting(flattenshowcase) + [Window.IsActive(videos) | Window.IsActive(programs)] | Skin.HasSetting(flattenshowcasemusic) + [Window.IsActive(musicplaylist) | Window.IsActive(music)]] + !Control.IsVisible(6000)</visible>
					</control>
				</control>
			</control>
		</focusedlayout>
		<itemlayout height="525" width="375" condition="[Container.Content(episodes) + Skin.HasSetting(flattenshowcase)]">
			<control type="image">
				<include>EpisodeShowCaseThumbDimensions</include>
				<texture diffuse="thumb_tvmask.png" background="true">$VAR[value_poster]</texture>
				<aspectratio scalediffuse="false">scale</aspectratio>
				<visible>Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(episodes)]</visible>
			</control>
			<control type="image">
				<include>EpisodeShowCaseThumbDimensions</include>
				<texture diffuse="thumb_tvmask.png" background="true">$INFO[ListItem.Art(fanart)]</texture>
				<aspectratio scalediffuse="false">scale</aspectratio>
				<visible>[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos)]]</visible>
			</control>
			<control type="image">
				<include>EpisodeShowCaseThumbReflection</include>
				<texture background="true">$VAR[value_poster]</texture>
				<visible>Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(episodes)]</visible>
			</control>
			<control type="image">
				<posx>56</posx>
				<posy>135</posy>
				<width>75</width>
				<height>75</height>
				<texture>$VAR[value_watchedstyle]</texture>
				<colordiffuse>$VAR[value_watchedcolor]</colordiffuse>
				<visible>String.IsEqual(ListItem(0).Overlay,OverlayWatched.png) + Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(episodes) | Window.IsActive(programs)] + !Skin.HasSetting(nooverlays)</visible>
			</control>
		</itemlayout>
		<focusedlayout height="525" width="375" condition="[Container.Content(episodes) + Skin.HasSetting(flattenshowcase)]">
			<control type="group">
				<animation effect="zoom" start="100" end="140" center="-52,270" time="400" easing="out" reversible="false" tween="cubic">Focus</animation>
				<animation effect="zoom" start="140" end="100" center="-52,270" time="400" easing="out" reversible="false" tween="cubic" condition="!Control.HasFocus(66) + [[[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [!Window.IsActive(Videos) + Skin.HasSetting(flattenshowcasemusic)]]]">Unfocus</animation>
				<control type="image">
					<include>EpisodeShowCaseThumbDimensions</include>
					<texture diffuse="thumb_tvmask.png" background="true">$VAR[value_poster]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<visible>[Skin.HasSetting(flattenshowcase) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] | !Window.IsActive(Videos) + Skin.HasSetting(flattenshowcasemusic)]</visible>
				</control>
				<control type="image">
					<include>EpisodeShowCaseThumbDimensions</include>
					<texture diffuse="thumb_tvmask.png" background="true">$INFO[ListItem.Art(fanart)]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<visible>Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos)]</visible>
				</control>
				<control type="image">
					<include>EpisodeShowCaseThumbReflection</include>
					<texture diffuse="thumb_tvmask.png" background="true">$VAR[value_poster]</texture>
					<visible>[Skin.HasSetting(flattenshowcase) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] | !Window.IsActive(Videos) + Skin.HasSetting(flattenshowcasemusic)]</visible>
				</control>
				<control type="image">
					<posx>56</posx>
					<posy>135</posy>
					<width>75</width>
					<height>75</height>
					<texture>$VAR[value_watchedstyle]</texture>
					<colordiffuse>$VAR[value_watchedcolor]</colordiffuse>
					<visible>String.IsEqual(ListItem(0).Overlay,OverlayWatched.png) + Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(episodes) | Window.IsActive(programs)] + !Skin.HasSetting(nooverlays)</visible>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="ShowCaseMovies">
		<control type="group">
			<control type="group" id="6001">
				<posy>540</posy>
				<camera x="960" y="810" />
				<visible>Container.OnNext + !String.IsEqual(container(66).numitems,1) + ![Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]</visible>
				<animation effect="slide" end="-135,0" time="210" reversible="false">Hidden</animation>
				<control type="group">
					<!-- -7 -->
					<posx>15</posx>
					<visible>Container.OnNext</visible>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-7).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="fade" start="100" end="0" time="210" reversible="false">Hidden</animation>
					<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-7</include>
				</control>
				<control type="group">
					<!-- -6 -->
					<posx>150</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-6).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-6</include>
				</control>
				<control type="group">
					<!-- -5 -->
					<posx>285</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-5).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-5</include>
				</control>
				<control type="group">
					<!-- -4 -->
					<posx>420</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-4).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-4</include>
				</control>
				<control type="group">
					<!-- -3 -->
					<posx>555</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-3).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-3</include>
				</control>
				<control type="group">
					<!-- -2 -->
					<posx>690</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-2).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-2</include>
				</control>
				<control type="group">
					<!-- 9 - fix to load poster -->
					<posx>1770</posx>
					<visible>!Container.OnNext</visible>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(9).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
					<control type="group">
						<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs)]</visible>
						<control type="image">
							<!-- Poster/Icon mode -->
							<include>ShowCasePoster</include>
							<texture fallback="DefaultVideoPoster.png" diffuse="thumb_poster_diffuse.png" background="true">$VAR[value_poster9]</texture>
						</control>
						<control type="image">
							<!-- reflect mode -->
							<include>ShowCasePosterReflect</include>
							<texture flipy="true" fallback="DefaultVideoPoster.png" diffuse="thumb_poster_reflect.png" background="true">$VAR[value_poster9]</texture>
						</control>
					</control>
					<control type="group">
						<visible>!Skin.HasSetting(noshowcasevideocase) + ![Container.Content(genres) | Window.IsActive(programs)]</visible>
						<control type="image">
							<!-- Poster/Icon mode -->
							<include>ShowCaseCase</include>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster9]</texture>
						</control>
						<control type="image">
							<!-- reflect mode -->
							<include>ShowCaseThumbCaseReflect</include>
							<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster9]</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<!-- 8 - fix to load poster -->
					<posx>1770</posx>
					<visible>!Container.OnNext</visible>
					<animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
					<control type="group">
						<control type="image">
							<!-- Poster/Icon mode -->
							<include>ShowCasePoster</include>
							<texture fallback="DefaultVideoPoster.png" diffuse="thumb_poster_diffuse.png" background="true">$VAR[value_poster8]</texture>
						</control>
						<control type="image">
							<!-- reflect mode -->
							<include>ShowCasePosterReflect</include>
							<texture flipy="true" fallback="DefaultVideoPoster.png" diffuse="thumb_poster_reflect.png" background="true">$VAR[value_poster8]</texture>
						</control>
					</control>
					<control type="group">
						<visible>!Skin.HasSetting(noshowcasevideocase) + ![Container.Content(genres) | Window.IsActive(programs)]</visible>
						<control type="image">
							<!-- Poster/Icon mode -->
							<include>ShowCaseCase</include>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster8]</texture>
						</control>
						<control type="image">
							<!-- reflect mode -->
							<include>ShowCaseThumbCaseReflect</include>
							<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster8]</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<!-- 7 -->
					<posx>1770</posx>
					<visible>!Container.OnNext</visible>
					<animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
					<control type="group">
						<control type="image">
							<!-- Icon mode -->
							<include condition="[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs)]">ShowCasePoster</include>
							<include condition="!Skin.HasSetting(noshowcasevideocase) + Window.IsActive(programs)">ShowCaseCase</include>
							<texture fallback="DefaultVideoPoster.png" diffuse="thumb_poster_diffuse.png" background="true">$VAR[value_poster7]</texture>
						</control>
						<control type="image">
							<!-- Icon reflect mode -->
							<include condition="[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs)]">ShowCasePosterReflect</include>
							<include condition="!Skin.HasSetting(noshowcasevideocase) + Window.IsActive(programs)">ShowCaseThumbCaseReflect</include>
							<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster7]</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<!-- 6 -->
					<posx>1635</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(6).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<visible>!Container.OnNext</visible>
					<animation effect="fade" start="0" end="100" delay="0" time="210" reversible="false">Visible</animation>
					<animation effect="rotatey" center="2205" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb6</include>
				</control>
				<control type="group">
					<!-- 5 -->
					<posx>1500</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(5).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="2070" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb5</include>
				</control>
				<control type="group">
					<!-- 4 -->
					<posx>1365</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(4).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1935" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb4</include>
				</control>
				<control type="group">
					<!-- 3 -->
					<posx>1230</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(3).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1800" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb3</include>
				</control>
				<control type="group">
					<!-- 2 -->
					<posx>1095</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(2).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1665" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb2</include>
				</control>
				<control type="group">
					<!-- 1 -->
					<posx>960</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(1).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1530" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb1</include>
				</control>
				<control type="group">
					<visible>Container.OnNext</visible>
					<animation effect="slide" end="75,0" time="210" reversible="false">Hidden</animation>
					<control type="group">
						<posx>825</posx>
						<visible>Container.OnNext</visible>
						<visible>!String.IsEmpty(Container(66).ListItemNoWrap(0).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
						<animation effect="rotatey" center="1395" start="0" end="-55" time="210" reversible="false" tween="quadratic" easing="in">Hidden</animation>
						<animation effect="rotatey" center="1395" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>VideoShowCaseThumb0</include>
					</control>
					<control type="group">
						<posx>758</posx>
						<visible>Container.OnNext</visible>
						<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-1).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
						<animation effect="rotatey" center="608" start="0" end="-55" time="210" reversible="false" tween="quadratic" easing="out">Hidden</animation>
						<include>VideoShowCaseThumb-1</include>
					</control>
				</control>
			</control>
			<control type="group" id="6002">
				<posy>540</posy>
				<camera x="960" y="810" />
				<visible>Container.OnPrevious + !String.IsEqual(container(66).numitems,1) + ![Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]</visible>
				<animation effect="slide" end="135,0" time="210" reversible="false">Hidden</animation>
				<control type="group">
					<!-- 7 -->
					<posx>1500</posx>
					<visible>Container.OnPrevious</visible>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(7).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="fade" start="100" end="0" time="210" reversible="false">Hidden</animation>
					<animation effect="rotatey" center="2070" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb7</include>
				</control>
				<control type="group">
					<!-- 6 -->
					<posx>1365</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(6).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1935" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb6</include>
				</control>
				<control type="group">
					<!-- 5 -->
					<posx>1230</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(5).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1800" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb5</include>
				</control>
				<control type="group">
					<!-- 4 -->
					<posx>1095</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(4).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1665" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb4</include>
				</control>
				<control type="group">
					<!-- 3 -->
					<posx>960</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(3).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1530" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb3</include>
				</control>
				<control type="group">
					<!-- 2 -->
					<posx>825</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(2).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1395" start="55" end="55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb2</include>
				</control>
				<control type="group">
					<!-- -8 -->
					<posx>-270</posx>
					<visible>!Container.OnPrevious</visible>
					<animation effect="fade" start="0" end="0" delay="0" time="0" reversible="false">Visible</animation>
					<control type="group">
						<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs)]</visible>
						<control type="image">
							<!-- Icon mode -->
							<include>ShowCasePoster</include>
							<texture background="true">$VAR[value_poster-8]</texture>
						</control>
						<control type="image">
							<!-- Icon reflect mode -->
							<include>ShowCasePosterReflect</include>
							<texture background="true">$VAR[value_poster-8]</texture>
						</control>
					</control>
					<control type="group">
						<visible>!Skin.HasSetting(noshowcasevideocase) + !Window.IsActive(programs)</visible>
						<control type="image">
							<!-- Icon mode -->
							<include>ShowCaseCase</include>
							<texture background="true">$VAR[value_poster-8]</texture>
						</control>
						<control type="image">
							<!-- Icon reflect mode -->
							<include>ShowCaseThumbCaseReflect</include>
							<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-8]</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<!-- -6 -->
					<posx>-120</posx>
					<visible>!Container.OnPrevious</visible>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-6).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="fade" start="0" end="100" time="210" reversible="false">Visible</animation>
					<animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-6</include>
				</control>
				<control type="group">
					<!-- -5 -->
					<posx>15</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-5).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-5</include>
				</control>
				<control type="group">
					<!-- -4 -->
					<posx>150</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-4).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-4</include>
				</control>
				<control type="group">
					<!-- -3 -->
					<posx>285</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-3).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-3</include>
				</control>
				<control type="group">
					<!-- -2 -->
					<posx>420</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-2).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-2</include>
				</control>
				<control type="group">
					<!-- -1 -->
					<posx>555</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-1).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<include>VideoShowCaseThumb-1</include>
				</control>
				<control type="group">
					<!-- 0-1 -->
					<visible>Container.OnPrevious</visible>
					<animation effect="slide" end="-75,0" time="210" reversible="false">Hidden</animation>
					<control type="group">
						<visible>!String.IsEmpty(Container(66).ListItemNoWrap(0).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
						<posx>690</posx>
						<visible>Container.OnPrevious</visible>
						<animation effect="rotatey" center="540" start="0" end="55" time="210" reversible="false" tween="quadratic" easing="in">Hidden</animation>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>VideoShowCaseThumb0</include>
					</control>
					<control type="group">
						<visible>!String.IsEmpty(Container(66).ListItemNoWrap(1).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
						<posx>758</posx>
						<visible>Container.OnPrevious</visible>
						<animation effect="rotatey" center="1328" start="0" end="55" time="210" reversible="false" tween="quadratic" easing="out">Hidden</animation>
						<include>VideoShowCaseThumb1</include>
					</control>
				</control>
			</control>
			<control type="button" id="960">
				<include>InvisibleButton</include>
				<visible>![Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]</visible>
				<animation effect="fade" start="100" end="0" time="800">Hidden</animation>
			</control>
			<control type="group" id="6000">
				<posy>540</posy>
				<animation effect="fade" time="500">WindowOpen</animation>
				<animation effect="fade" time="200">WindowClose</animation>
				<visible>[[!Control.IsVisible(6001) + !Control.IsVisible(6002) | String.IsEqual(container(66).numitems,1)]] + Control.IsVisible(960)</visible>
				<camera x="960" y="810" />
				<control type="group">
					<!-- -6 -->
					<posx>15</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-6).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="-135" start="0" end="55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="-1028" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb-6</include>
				</control>
				<control type="group">
					<!-- -5 -->
					<posx>150</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-5).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="0" start="0" end="55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="-866" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb-5</include>
				</control>
				<control type="group">
					<!-- -4 -->
					<posx>285</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-4).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="135" start="0" end="55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="-704" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb-4</include>
				</control>
				<control type="group">
					<!-- -3 -->
					<posx>420</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-3).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="270" start="0" end="55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="-543" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb-3</include>
				</control>
				<control type="group">
					<!-- -2 -->
					<posx>555</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-2).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="405" start="0" end="55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="-384" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb-2</include>
				</control>
				<control type="group">
					<!-- -1 -->
					<posx>690</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(-1).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="540" start="0" end="55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="-226" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb-1</include>
				</control>
				<control type="group">
					<!-- 6 -->
					<posx>1500</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(6).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="2070" start="55" end="55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="2070" start="0" end="-55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="1028" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb6</include>
				</control>
				<control type="group">
					<!-- 5 -->
					<posx>1365</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(5).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1935" start="55" end="55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="1935" start="0" end="-55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="866" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb5</include>
				</control>
				<control type="group">
					<!-- 4 -->
					<posx>1230</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(4).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1800" start="55" end="55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="1800" start="0" end="-55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="704" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb4</include>
				</control>
				<control type="group">
					<!-- 3 -->
					<posx>1095</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(3).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1665" start="55" end="55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="1665" start="0" end="-55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="543" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb3</include>
				</control>
				<control type="group">
					<!-- 2 -->
					<posx>960</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(2).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1530" start="55" end="55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="1530" start="0" end="-55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="384" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb2</include>
				</control>
				<control type="group">
					<!-- 1 -->
					<posx>825</posx>
					<visible>!String.IsEmpty(Container(66).ListItemNoWrap(1).label) | !Skin.HasSetting(ShowCasefixedlist)</visible>
					<animation effect="rotatey" center="1395" start="55" end="55" time="0" condition="true">Conditional</animation>
					<animation type="Conditional" condition="[Skin.HasSetting(flattenshowcase) + [Container.Content(movies) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Window.IsActive(programs)]]">
						<effect type="rotatey" center="1395" start="0" end="-55" time="800" tween="cubic" easing="inout" />
						<effect type="slide" start="0" end="226" time="800" tween="cubic" easing="inout" />
					</animation>
					<include>VideoShowCaseThumb1</include>
				</control>
				<control type="group">
					<!-- 0 -->
					<posx>758</posx>
					<include>VideoShowCaseThumb0</include>
				</control>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb0">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster0]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster0]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(0).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster0]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase0]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster0]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(0).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase0]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec0]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb1">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster1]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster1]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(1).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster1]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase1]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster1]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(1).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase1]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec1]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb2">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster2]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster2]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(2).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster2]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase2]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster2]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(2).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase2]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec2]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb3">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster3]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster3]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(3).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster3]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase3]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster3]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(3).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase3]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec3]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb4">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster4]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster4]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(4).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster4]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase4]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster4]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(4).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase4]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec4]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb5">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster5]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster5]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(5).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster5]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase5]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster5]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(5).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase5]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec5]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb6">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster6]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster6]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(6).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster6]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase6]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster6]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(6).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase6]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec6]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb7">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster7]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster7]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(7).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster7]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase7]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster7]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(7).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase7]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec7]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb-1">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-1]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-1]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(-1).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-1]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase-1]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-1]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(-1).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase-1]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec-1]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb-2">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-2]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-2]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(-2).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-2]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase-2]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-2]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(-2).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase-2]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec-2]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb-3">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-3]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-3]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(-3).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-3]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase-3]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-3]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(-3).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase-3]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec-3]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb-4">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-4]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-4]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(-4).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-4]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase-4]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-4]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(-4).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase-4]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec-4]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb-5">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-5]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-5]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(-5).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-5]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase-5]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-5]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(-5).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase-5]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec-5]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb-6">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-6]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-6]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(-6).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-6]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase-6]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-6]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(-6).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase-6]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec-6]</texture>
			</control>
		</control>
	</include>
	<include name="VideoShowCaseThumb-7">
		<control type="group">
			<visible>[Skin.HasSetting(noshowcasevideocase) | Window.IsActive(programs) | Container.Content(genres)]</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster reflexo -->
				<include>ShowCasePosterReflect</include>
				<texture flipy="true" diffuse="thumb_poster_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-7]</texture>
			</control>
			<control type="image">
				<!-- Poster -->
				<include>ShowCasePoster</include>
				<texture diffuse="thumb_poster_diffuse.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-7]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCase</include>
				<visible>String.IsEqual(ListItem(-7).Overlay,OverlayWatched.png)</visible>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(noshowcasevideocase) | Container.Content(genres) | Window.IsActive(programs)</visible>
			<include>Animation_VisibleChange</include>
			<control type="image">
				<!-- Poster Reflexo -->
				<include>ShowCaseThumbReflect</include>
				<texture flipy="true" diffuse="thumb_reflect.png" fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-7]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo Reflexo -->
				<include>ShowCaseThumbCaseReflect</include>
				<texture flipy="true" diffuse="thumb_box_reflect.png" background="true">$VAR[value_videocase-7]</texture>
			</control>
			<control type="image">
				<!-- Poster + Estojo -->
				<include>ShowCaseCase</include>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster-7]</texture>
			</control>
			<control type="image">
				<include>WatchedShowCaseCase</include>
				<visible>String.IsEqual(ListItem(-7).Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="image">
				<!-- Estojo -->
				<include>ShowCaseThumbCase</include>
				<texture>$VAR[value_videocase-7]</texture>
			</control>
			<control type="image">
				<!-- Codec -->
				<include>ShowCaseCodec</include>
				<texture>$VAR[value_videocodec-7]</texture>
			</control>
		</control>
	</include>
	<include name="ViewShowCaseVideo">
		<control type="group">
			<!-- default group -->
			<animation effect="fade" time="400">VisibleChange</animation>
			<control type="button" id="9966">
				<include>InvisibleButton</include>
				<onleft>66</onleft>
				<onright>66</onright>
				<onup>9900</onup>
				<ondown>66</ondown>
			</control>
			<visible>Control.IsVisible(66)</visible>
			<control type="group">
				<!-- painel de info fanart layout -->
				<animation effect="slide" start="0,-900" end="0,0" time="500" tween="sine" easing="out">Visible</animation>
				<animation effect="slide" start="0,0" end="0,-900" time="500" tween="sine" easing="out">Hidden</animation>
				<visible>[Control.HasFocus(9966) | String.IsEqual(skin.string(showcasevideopanel),alwayson) | String.IsEqual(skin.string(showcasevideopanel),auto) + Control.IsVisible(9921)] + String.Contains(skin.string(showcaselayout),fanart) + ![String.IsEqual(ListItem.Label,..) | Container.Content(years) | Container.Content(genres) | Container.Content(actors)]</visible>
				<control type="image">
					<posx>0</posx>
					<posy>84</posy>
					<width>1920</width>
					<height>45</height>
					<texture>shadow_h.png</texture>
					<colordiffuse>C3FFFFFF</colordiffuse>
				</control>
				<control type="image">
					<posx>0</posx>
					<posy>128</posy>
					<width>1920</width>
					<height>795</height>
					<texture flipy="true" diffuse="shadow_mask.png">darkgrey.png</texture>
					<colordiffuse>$VAR[value_texturecolor]</colordiffuse>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
				</control>
				<control type="grouplist">
					<posx>45</posx>
					<posy>156</posy>
					<orientation>vertical</orientation>
					<itemgap>15</itemgap>
					<visible>!Container.Content(addons)</visible>
					<control type="label">
						<include>ShowCaseLabel_Fanart</include>
						<label>$VAR[value_ground11_label]: [COLOR=FFFFFAF0]$VAR[value_ground11_value][/COLOR]</label>
					</control>
					<control type="label">
						<include>ShowCaseLabel_Fanart</include>
						<label>$VAR[value_ground12_label]: [COLOR=FFFFFAF0]$VAR[value_ground12_value][/COLOR]</label>
					</control>
					<control type="label">
						<include>ShowCaseLabel_Fanart</include>
						<label>$VAR[value_ground13_label]: [COLOR=FFFFFAF0]$VAR[value_ground13_value][/COLOR]</label>
					</control>
					<control type="label">
						<include>ShowCaseLabel_Fanart</include>
						<label>$VAR[value_ground14_label]: [COLOR=FFFFFAF0]$VAR[value_ground14_value][/COLOR]</label>
					</control>
					<control type="label">
						<include>ShowCaseLabel_Fanart</include>
						<label>$VAR[value_ground15_label]: [COLOR=FFFFFAF0]$VAR[value_ground15_value][/COLOR]</label>
					</control>
					<control type="label">
						<include>ShowCaseLabel_Fanart</include>
						<label>$VAR[value_ground16_label]: [COLOR=FFFFFAF0]$VAR[value_ground16_value][/COLOR]</label>
					</control>
					<control type="label">
						<include>ShowCaseLabel_Fanart</include>
						<label>$VAR[value_ground17_label]: [COLOR=FFFFFAF0]$VAR[value_ground17_value][/COLOR]</label>
						<visible>!Container.Content(seasons)</visible>
					</control>
				</control>
				<control type="image">
					<posx>600</posx>
					<posy>128</posy>
					<width>3</width>
					<height>410</height>
					<texture>separator_v.png</texture>
				</control>
				<control type="image">
					<posx>1208</posx>
					<posy>128</posy>
					<width>3</width>
					<height>410</height>
					<texture>separator_v.png</texture>
				</control>
				<control type="textbox">
					<posx>634</posx>
					<posy>156</posy>
					<width>540</width>
					<height>363</height>
					<font>Font_18A</font>
					<label>$VAR[value_plot]</label>
					<autoscroll delay="15000" time="2000" repeat="15000">!Skin.HasSetting(noallowscroll)</autoscroll>
				</control>
				<control type="image">
					<posx>0</posx>
					<posy>537</posy>
					<width>1920</width>
					<height>3</height>
					<texture>separator.png</texture>
				</control>
				<control type="image">
					<posx>1185</posx>
					<posy>159</posy>
					<width>750</width>
					<height>352</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">$INFO[ListItem.Art(fanart)]</texture>
					<bordertexture border="-2">black.png</bordertexture>
					<fadetime>FanartCrossFadeTime</fadetime>
				</control>
			</control>
			<control type="group">
				<!-- painel de info extrathumbs layout -->
				<animation effect="slide" start="0,-900" end="0,0" time="500" tween="sine" easing="out">Visible</animation>
				<animation effect="slide" start="0,0" end="0,-900" time="500" tween="sine" easing="out">Hidden</animation>
				<visible>[Control.HasFocus(9966) | String.IsEqual(skin.string(showcasevideopanel),alwayson) | String.IsEqual(skin.string(showcasevideopanel),auto) + Control.IsVisible(9921)] + String.Contains(skin.string(showcaselayout),extrathumbs) + ![String.IsEqual(ListItem.Label,..) | Container.Content(years) | Container.Content(genres) | Container.Content(actors)]</visible>
				<control type="image">
					<posx>0</posx>
					<posy>84</posy>
					<width>1920</width>
					<height>45</height>
					<texture>shadow_h.png</texture>
					<colordiffuse>C3FFFFFF</colordiffuse>
				</control>
				<control type="image">
					<posx>0</posx>
					<posy>128</posy>
					<width>1920</width>
					<height>795</height>
					<texture flipy="true" diffuse="shadow_mask.png">darkgrey.png</texture>
					<colordiffuse>$VAR[value_texturecolor]</colordiffuse>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<!-- Thumb 1 fundo -->
					<posx>22</posx>
					<posy>128</posy>
					<width>362</width>
					<height>210</height>
					<aspectratio align="left" aligny="bottom">stretch</aspectratio>
					<texture>fanartframe.png</texture>
					<colordiffuse>$VAR[value_texturecolor]</colordiffuse>
				</control>
				<control type="image">
					<!-- Thumb 1 -->
					<posx>30</posx>
					<posy>135</posy>
					<width>346</width>
					<height>195</height>
					<aspectratio align="left" aligny="bottom">stretch</aspectratio>
					<fadetime>FanartCrossFadeTime</fadetime>
					<texture fallback="DefaultExtraThumbs.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb1.jpg]</texture>
					<bordersize>5</bordersize>
				</control>
				<control type="image">
					<!-- Thumb 2 fundo -->
					<posx>22</posx>
					<posy>330</posy>
					<width>362</width>
					<height>210</height>
					<aspectratio align="left" aligny="bottom">stretch</aspectratio>
					<texture>fanartframe.png</texture>
					<colordiffuse>$VAR[value_texturecolor]</colordiffuse>
				</control>
				<control type="image">
					<!-- Thumb 2 -->
					<posx>30</posx>
					<posy>338</posy>
					<width>346</width>
					<height>195</height>
					<aspectratio align="left" aligny="bottom">stretch</aspectratio>
					<fadetime>FanartCrossFadeTime</fadetime>
					<texture fallback="DefaultExtraThumbs.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb2.jpg]</texture>
					<bordersize>5</bordersize>
				</control>
				<control type="image">
					<!-- Thumb 3 fundo -->
					<posx>1536</posx>
					<posy>128</posy>
					<width>362</width>
					<height>210</height>
					<aspectratio align="left" aligny="bottom">stretch</aspectratio>
					<texture>fanartframe.png</texture>
					<colordiffuse>$VAR[value_texturecolor]</colordiffuse>
				</control>
				<control type="image">
					<!-- Thumb 3 -->
					<posx>1544</posx>
					<posy>135</posy>
					<width>346</width>
					<height>195</height>
					<aspectratio align="right" aligny="bottom">stretch</aspectratio>
					<fadetime>FanartCrossFadeTime</fadetime>
					<texture fallback="DefaultExtraThumbs.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb3.jpg]</texture>
					<bordersize>5</bordersize>
				</control>
				<control type="image">
					<!-- Thumb 4 fundo -->
					<posx>1536</posx>
					<posy>330</posy>
					<width>362</width>
					<height>210</height>
					<aspectratio align="left" aligny="bottom">stretch</aspectratio>
					<texture>fanartframe.png</texture>
					<colordiffuse>$VAR[value_texturecolor]</colordiffuse>
				</control>
				<control type="image">
					<!-- Thumb 4 -->
					<posx>1544</posx>
					<posy>338</posy>
					<width>346</width>
					<height>195</height>
					<aspectratio align="right" aligny="bottom">stretch</aspectratio>
					<fadetime>FanartCrossFadeTime</fadetime>
					<texture fallback="DefaultExtraThumbs.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb4.jpg]</texture>
					<bordersize>5</bordersize>
				</control>
				<control type="label">
					<include>ShowCaseLabel_Extrathumbs</include>
					<posy>156</posy>
					<label>$VAR[value_ground1_label]</label>
				</control>
				<control type="fadelabel">
					<include>ShowCaseValue_Extrathumbs</include>
					<posy>186</posy>
					<label>$VAR[value_ground1_value]</label>
				</control>
				<control type="label">
					<include>ShowCaseLabel_Extrathumbs</include>
					<posy>231</posy>
					<label>$VAR[value_ground2_label]</label>
				</control>
				<control type="fadelabel">
					<include>ShowCaseValue_Extrathumbs</include>
					<posy>261</posy>
					<label>$VAR[value_ground2_value]</label>
				</control>
				<control type="label">
					<include>ShowCaseLabel_Extrathumbs</include>
					<posy>306</posy>
					<label>$VAR[value_ground3_label]</label>
				</control>
				<control type="fadelabel">
					<include>ShowCaseValue_Extrathumbs</include>
					<posy>336</posy>
					<label>$VAR[value_ground3_value]</label>
				</control>
				<control type="label">
					<include>ShowCaseLabel_Extrathumbs</include>
					<posy>381</posy>
					<label>$VAR[value_ground4_label]</label>
				</control>
				<control type="fadelabel">
					<include>ShowCaseValue_Extrathumbs</include>
					<posy>411</posy>
					<label>$VAR[value_ground4_value]</label>
				</control>
				<control type="label">
					<include>ShowCaseLabel_Extrathumbs</include>
					<posy>456</posy>
					<label>$VAR[value_ground5_label]</label>
				</control>
				<control type="fadelabel">
					<include>ShowCaseValue_Extrathumbs</include>
					<posy>486</posy>
					<label>$VAR[value_ground5_value]</label>
				</control>
				<control type="image">
					<posx>412</posx>
					<posy>128</posy>
					<width>3</width>
					<height>410</height>
					<texture>separator_v.png</texture>
				</control>
				<control type="image">
					<posx>960</posx>
					<posy>128</posy>
					<width>3</width>
					<height>410</height>
					<texture>separator_v.png</texture>
				</control>
				<control type="image">
					<posx>1508</posx>
					<posy>128</posy>
					<width>3</width>
					<height>410</height>
					<texture>separator_v.png</texture>
				</control>
				<control type="textbox">
					<posx>998</posx>
					<posy>156</posy>
					<width>465</width>
					<height>363</height>
					<font>Font_18A</font>
					<label>$VAR[value_plot]</label>
					<autoscroll delay="15000" time="2000" repeat="15000">!Skin.HasSetting(noallowscroll)</autoscroll>
				</control>
				<control type="image">
					<posx>0</posx>
					<posy>537</posy>
					<width>1920</width>
					<height>3</height>
					<texture>separator.png</texture>
				</control>
			</control>
			<include condition="Skin.HasSetting(ShowCasefixedlist)">MovieShowCaseFixedList</include>
			<include condition="!Skin.HasSetting(ShowCasefixedlist)">MovieShowCaseWrapList</include>
			<include>ShowCaseMovies</include>
			<control type="scrollbar" id="80">
				<include>ScrollBar_Horizontal</include>
				<posx>285</posx>
				<posy>920</posy>
				<width>1350</width>
				<onup>66</onup>
				<ondown>9920</ondown>
				<include>Animation_Fade</include>
				<visible allowhiddenfocus="true">Control.IsVisible(66) + Control.HasFocus(80)</visible>
			</control>
		</control>
	</include>
</includes>
