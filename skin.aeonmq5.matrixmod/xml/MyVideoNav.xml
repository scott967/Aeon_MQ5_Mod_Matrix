<?xml version="1.0" encoding="UTF-8"?>
<!-- Aeon MQ 5 Helix 6.1.2/6.1.3 -->
<!-- Isengard 7.1.9 ShelfCase/7.1.11 MidList -->
<!-- Jarvis 8.1.13 -->
<!-- Krypton 9.1.16/9.1.19/9.2.1 window IDs 25/9.2.2/9.2.3 -->
<!-- Leia 10.3.0/10.4.0/10.6.1/10.6.2 -->
<window>
	<defaultcontrol always="true">51</defaultcontrol>
	<menucontrol>9900</menucontrol>
	<onload condition="System.HasAddon(script.tv.show.next.aired) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]">RunScript(script.tv.show.next.aired,backend=True)</onload>
	<onunload condition="Skin.HasSetting(kioskcode)">Skin.Reset($INFO[skin.string(custom_code)])</onunload>
	<onunload condition="Skin.HasSetting(trailers)">Skin.Reset(trailers)</onunload>
	<onunload condition="Skin.HasSetting(playlists)">Skin.Reset(playlists)</onunload>
	<views>51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70</views>
	<controls>
		<control type="list" id="5020"> <!-- check if video movies tvshows musicvideos sets has extrafanartfanart -->
			<posx>-500</posx>
			<posy>-500</posy>
			<height>400</height>
			<width>50</width>
			<visible>[Container.Content(movies) + !Skin.HasSetting(trailers) + String.Contains(skin.string(moviesfanart),extra) | Container.Content(tvshows) + String.Contains(skin.string(tvshowsfanart),extra) | Container.Content(musicvideos) + String.Contains(skin.string(musicvideosfanart),extra)] + ![ListItem.IsParentFolder | String.StartsWith(ListItem.Path,Plugin)]</visible>
			<itemlayout />
			<focusedlayout />
			<content target="filemanager">$INFO[ListItem.Path]extrafanart/</content>
		</control>
		<control type="list" id="5021"> <!-- check if video seasons has extrafanartfanart -->
			<posx>-500</posx>
			<posy>-500</posy>
			<height>400</height>
			<width>50</width>
			<visible>Container.Content(seasons) + String.Contains(skin.string(seasonsfanart),extra) + ![ListItem.IsParentFolder | String.StartsWith(ListItem.Path,Plugin)]</visible>
			<itemlayout />
			<focusedlayout />
			<content target="filemanager">$INFO[ListItem.Path,,extrafanart/]</content>
		</control>
		<control type="list" id="5022"> <!-- check if video episodes has extrafanart in parent folder (episodes in season folders) -->
			<posx>-500</posx>
			<posy>-500</posy>
			<height>400</height>
			<width>50</width>
			<visible>Container.Content(episodes) + String.Contains(skin.string(episodesfanart),extra) + ![ListItem.IsParentFolder | String.StartsWith(ListItem.Path,Plugin)]</visible>
			<itemlayout />
			<focusedlayout />
			<content target="filemanager">$INFO[ListItem.Path,,../extrafanart/]</content>
		</control>
		<control type="image" id="5023">
			<!-- Season single Fanart -->
			<include>InvisibleButton</include>
			<texture background="true">$INFO[ListItem.Path]$INFO[ListItem.Label,,/fanart.jpg]</texture>
			<visible>Container.Content(seasons) + String.Contains(skin.string(seasonsfanart),seasons)</visible>
		</control>
		<control type="image" id="5024">
			<!-- Season single Fanart/episodes -->
			<include>InvisibleButton</include>
			<texture background="true">$INFO[ListItem.Path,,fanart.jpg]</texture>
			<visible>Container.Content(episodes) + String.Contains(skin.string(episodesfanart),seasons)</visible>
		</control>
		<control type="image">
			<!-- Single Fanart -->
			<include>WindowBG</include>
			<texture background="true">$VAR[value_defaultvideofanart]</texture>
			<visible>!Container.Content(genres)</visible>
		</control>
		<control type="multiimage">
			<!-- Multi Fanart -->
			<include>WindowBG</include>
			<imagepath background="true">$VAR[value_videofanart]</imagepath>
			<visible>!Container.Content(genres)</visible>
		</control>
		<control type="image">
			<!-- Single Fanart Genre -->
			<include>WindowBG</include>
			<texture fallback="special://skin/backgrounds/movies.jpg" background="true">$VAR[value_defaultvideofanart]</texture>
			<visible>Container.Content(genres)</visible>
		</control>

		<!-- end background fanart display control -->
		<!-- currently playing video in background -->
		<include>LiveBG</include>
		<control type="image">
			<posx>0</posx>
			<posy>0</posy>
			<width>1920</width>
			<height>1080</height>
			<texture>black.png</texture>
			<colordiffuse>C3FFFFFF</colordiffuse>
			<include>Animation_Fade</include>
			<visible>Player.HasVideo + !Skin.HasSetting(fullscreentrailer)</visible>
		</control>
		<control type="group">
			<!-- default group -->
			<include>Animation_Window</include>
			<!-- default group animation control buttons -->
			<control type="button" id="9900">
				<!-- to menu/kiosk condition -->
				<include>InvisibleButton</include>
				<onfocus condition="![Skin.HasSetting(kiosk) | Skin.HasSetting(kiosksmart) + !String.Contains(skin.string(codestep),step3)]">SetFocus(9300)</onfocus>
				<onfocus condition="Skin.HasSetting(kiosksmart) + !String.Contains(skin.string(codestep),step3)">SetFocus(9100)</onfocus>
				<onfocus condition="Skin.HasSetting(kiosk)">SetFocus(51)</onfocus>
			</control>
			<control type="button" id="9920">
				<!-- hidden colection/view fanart -->
				<include>InvisibleButton</include>
				<onleft>SetFocus(51)</onleft>
				<onright>SetFocus(51)</onright>
				<onup>SetFocus(51)</onup>
				<ondown>SetFocus(51)</ondown>
			</control>
			<control type="image" id="9921">
				<!-- painel de info auto -->
				<include>InvisibleButton</include>
				<animation effect="fade" start="0" end="100" time="150" delay="1000" condition="String.Contains(skin.string(panel_seconds),1)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="2000" condition="String.Contains(skin.string(panel_seconds),2)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="3000" condition="String.Contains(skin.string(panel_seconds),3)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="4000" condition="String.Contains(skin.string(panel_seconds),4)">Visible</animation>
				<animation effect="fade" start="0" end="100" time="150" delay="5000" condition="String.Contains(skin.string(panel_seconds),5)">Visible</animation>
				<visible>![Container.OnNext | Container.OnPrevious]</visible>
			</control>
			<control type="button" id="9922">
				<!-- refresh das vistas/refresh view -->
				<include>InvisibleButton</include>
				<animation effect="fade" start="0" end="100" time="150" delay="3000">Hidden</animation>
				<visible>Window.IsVisible(1110)</visible>
			</control>
			<control type="image" id="9923">
				<!-- delay da arte de disco -->
				<include>InvisibleButton</include>
				<animation effect="fade" start="0" end="100" time="150" delay="1000">Visible</animation>
				<visible>![Container.OnNext | Container.OnPrevious]</visible>
			</control>
			<control type="image" id="9924">
				<!-- Controle estudio -->
				<include>InvisibleButton</include>
				<texture>$VAR[value_studiosicon]</texture>
			</control>
			<!-- end default group animation control buttons -->
			<!-- Flags bar 540-720 -->
			<control type="group">
				<!-- Grupo ocultar flags ou fanart -->
				<posy>45</posy>
				<include condition="Skin.HasSetting(view3dwall_video)">View3DWall</include>
				<!-- 67,68 -->
				<include>Animation_HiddenView</include>
				<control type="image">
					<!-- Barra do rodape/footer bar -->
					<posx>0</posx>
					<posy>765</posy>
					<width>1920</width>
					<height>270</height>
					<colordiffuse>$VAR[value_flagsbar]</colordiffuse>
					<texture>shadow_mask.png</texture>
					<include>Animation_FloorGlass</include>
				</control>
				<control type="image">
					<posx>0</posx>
					<posy>765</posy>
					<width>1920</width>
					<height>270</height>
					<colordiffuse>$VAR[value_texturecolor]</colordiffuse>
					<texture diffuse="shadow_mask.png">shadow_spot.png</texture>
					<animation effect="fade" end="75" condition="true">Conditional</animation>
				</control>
				<control type="group">
					<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">WindowOpen</animation>
					<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">Visible</animation>
					<animation effect="slide" start="0,0" end="0,450" time="500" tween="sine" easing="out">Hidden</animation>
					<visible>!Control.IsVisible(57) + [String.Contains(skin.string(mediaflags),on) | String.Contains(skin.string(mediaflags),auto) + Control.IsVisible(9921)]</visible>
					<control type="grouplist">
						<!-- Etiquetas/tags -->
						<posx>30</posx>
						<posy>968</posy>
						<orientation>horizontal</orientation>
						<itemgap>22</itemgap>
						<control type="image">
							<!-- studio -->
							<include>FlagImage</include>
							<texture>$VAR[value_studiosicon]</texture>
							<visible>!String.IsEmpty(Control.GetLabel(9924))</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(Control.GetLabel(9924))</visible>
						</control>
						<control type="image">
							<!-- Mpaa -->
							<include>FlagImage</include>
							<texture>$VAR[value_mpaa]</texture>
							<visible>!String.IsEmpty(ListItem.Mpaa)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.Mpaa)</visible>
						</control>
						<control type="group">
							<!-- Rating -->
							<width>188</width>
							<visible>!String.IsEmpty(ListItem.Title)</visible>
							<control type="image">
								<posx>8</posx>
								<include>FlagImage</include>
								<texture>flags/rating.png</texture>
							</control>
							<control type="label">
								<posx>20</posx>
								<posy>2</posy>
								<width>134</width>
								<height>75</height>
								<align>center</align>
								<aligny>center</aligny>
								<font>Font_20B</font>
								<textcolor>$VAR[value_flagscolor]</textcolor>
								<label fallback="NR">$INFO[ListItem.Rating]</label>
							</control>
							<control type="image">
								<posx>188</posx>
								<include>FlagSeparator</include>
							</control>
						</control>
						<control type="image">
							<!-- Codec -->
							<include>FlagImage</include>
							<texture>$VAR[value_videocodec]</texture>
							<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
						</control>
						<control type="image">
							<!-- Resolution -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.VideoResolution,flags/resolution/,.png]</texture>
							<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
						</control>
						<control type="image">
							<!-- Aspect -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
							<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
						</control>
						<control type="image">
							<!-- Audio Codec -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.AudioCodec,flags/audiocodec/,.png]</texture>
							<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
						</control>
						<control type="image">
							<!-- Channels -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.AudioChannels,flags/audiochannels/,ch.png]</texture>
							<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
						</control>
						<control type="group">
							<!-- Drive Externo -->
							<width>188</width>
							<visible>!String.IsEmpty(Control.GetLabel(556))</visible>
							<control type="image">
								<posx>8</posx>
								<include>FlagImage</include>
								<texture>flags/externaldrive.png</texture>
							</control>
							<control type="label">
								<posx>20</posx>
								<posy>2</posy>
								<width>134</width>
								<height>75</height>
								<align>center</align>
								<aligny>center</aligny>
								<font>Font_20B</font>
								<textcolor>$VAR[value_flagscolor]</textcolor>
								<label>$VAR[value_drive]</label>
							</control>
							<control type="image">
								<posx>188</posx>
								<include>FlagSeparator</include>
							</control>
						</control>
						<control type="image">
							<!-- Trailer -->
							<include>FlagImage</include>
							<texture>flags/trailer.png</texture>
							<visible>!String.IsEmpty(ListItem.Trailer)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.Trailer) + ListItem.IsResumable</visible>
						</control>
						<control type="group">
							<!-- % Played -->
							<width>188</width>
							<visible>ListItem.IsResumable</visible>
							<control type="image">
								<include>FlagImage</include>
								<texture>flags/percentplayed.png</texture>
							</control>
							<control type="label">
								<posx>18</posx>
								<posy>2</posy>
								<width>134</width>
								<height>75</height>
								<align>center</align>
								<aligny>center</aligny>
								<font>Font_20B</font>
								<textcolor>$VAR[value_flagscolor]</textcolor>
								<label>$INFO[ListItem.PercentPlayed]%</label>
							</control>
						</control>
					</control>
					<control type="label" id="556">
						<!-- Hard Disk -->
						<include>InvisibleButton</include>
						<label>$VAR[value_drive]</label>
					</control>
					<control type="image">
						<posx>0</posx>
						<posy>975</posy>
						<height>63</height>
						<width>1920</width>
						<texture>gradient_small.png</texture>
					</control>
				</control>
				<include>ContainerViewPage</include>
			</control>
			<!-- end flags bar -->
			<!-- title bar 0-270 -->
			<!-- NOT for wide, lowlist, glasslist, rightlist, midlist -->
			<control type="group">
				<!-- Titulo e subtitulo -->
				<posy>-45</posy>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">WindowOpen</animation>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">Visible</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">WindowClose</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">Hidden</animation>
				<animation effect="slide" end="0,-30" time="500" tween="sine" easing="out" condition="![Skin.HasSetting(videoinfobar) | Skin.HasSetting(videodate)]">Conditional</animation>
				<visible>[Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(56) | Control.IsVisible(58) | Control.IsVisible(60) | Control.IsVisible(61) | Control.IsVisible(62) | Control.IsVisible(63) | Control.IsVisible(64) | Control.IsVisible(65) | Control.IsVisible(66) | Control.IsVisible(67) | Control.IsVisible(68) | Control.IsVisible(69)] + ![ControlGroup(9000).HasFocus | Control.HasFocus(9920) | Control.IsVisible(9922) | Control.HasFocus(9940) | Window.IsActive(movieinformation)]</visible>
				<control type="image">
					<posx>0</posx>
					<posy>0</posy>
					<width>1920</width>
					<height>450</height>
					<texture flipy="true">shadow_mask.png</texture>
					<colordiffuse>F9000000</colordiffuse>
					<animation effect="fade" end="75" condition="true">Conditional</animation>
				</control>
				<control type="group">
					<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
					<control type="label">
						<!-- Title -->
						<posx>45</posx>
						<posy>87</posy>
						<width>1125</width>
						<height>60</height>
						<aligny>center</aligny>
						<font>Font_40</font>
						<label>$VAR[value_videotitle]</label>
						<textcolor>FFFFFAF0</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<shadowcolor>grey</shadowcolor>
						<visible>![Skin.HasSetting(clearlogotitle) + !String.IsEmpty(ListItem.Art(clearlogo))]</visible>
					</control>
					<control type="image">
						<!-- clearlogo -->
						<posx>45</posx>
						<posy>87</posy>
						<width>450</width>
						<height>68</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio align="left" aligny="bottom">keep</aspectratio>
						<fadetime>FanartCrossFadeTime</fadetime>
						<visible>Skin.HasSetting(clearlogotitle) + !String.IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<!--  edit for MV artist -->
					<control type="label">
						<posx>45</posx>
						<posy>160</posy>
						<width>1125</width>
						<height>38</height>
						<aligny>center</aligny>
						<font>Font_21A</font>
						<label>$INFO[ListItem.Tagline]</label>
						<textcolor>90FFFFFF</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<shadowcolor>grey</shadowcolor>
						<visible>!Skin.HasSetting(nomoviestagline) + !Container.Content(musicvideos)</visible>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>160</posy>
						<width>1125</width>
						<height>38</height>
						<aligny>center</aligny>
						<font>Font_21A</font>
						<label>$INFO[ListItem.Artist]</label>
						<textcolor>90FFFFFF</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<shadowcolor>grey</shadowcolor>
						<visible>Container.Content(musicvideos)</visible>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>195</posy>
						<width>1125</width>
						<height>38</height>
						<aligny>center</aligny>
						<font>Font_18A</font>
						<label>$VAR[value_videotvshowtag]</label>
						<textcolor>90FFFFFF</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<shadowcolor>grey</shadowcolor>
						<animation effect="slide" start="0,0" end="0,-45" condition="String.IsEmpty(ListItem.Tagline) | Skin.HasSetting(nomoviestagline)">Conditional</animation>
						<visible>[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + ![String.IsEqual(ListItem.Label,..) | Skin.HasSetting(notvshowstagline)]</visible>
					</control>
				</control>
				<control type="group">
					<visible>String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
					<control type="label">
						<!-- Title -->
						<posx>45</posx>
						<posy>87</posy>
						<width>1650</width>
						<height>60</height>
						<aligny>center</aligny>
						<font>Font_40</font>
						<label>$VAR[value_videotitle]</label>
						<textcolor>FFFFFAF0</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<shadowcolor>grey</shadowcolor>
						<visible>![Skin.HasSetting(clearlogotitle) + !String.IsEmpty(ListItem.Art(clearlogo))]</visible>
					</control>
					<control type="image">
						<!-- clearlogo -->
						<posx>45</posx>
						<posy>87</posy>
						<width>450</width>
						<height>68</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio align="left" aligny="bottom">keep</aspectratio>
						<fadetime>FanartCrossFadeTime</fadetime>
						<visible>Skin.HasSetting(clearlogotitle) + !String.IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<!--  edit for MV artist -->
					<control type="label">
						<posx>45</posx>
						<posy>160</posy>
						<width>1650</width>
						<height>38</height>
						<aligny>center</aligny>
						<font>Font_21A</font>
						<label>$INFO[ListItem.Tagline]</label>
						<textcolor>90FFFFFF</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<shadowcolor>grey</shadowcolor>
						<visible>!Skin.HasSetting(nomoviestagline) + !Container.Content(musicvideos)</visible>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>160</posy>
						<width>1125</width>
						<height>38</height>
						<aligny>center</aligny>
						<font>Font_21A</font>
						<label>$INFO[ListItem.Artist]</label>
						<textcolor>90FFFFFF</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<shadowcolor>grey</shadowcolor>
						<visible>Container.Content(musicvideos)</visible>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>195</posy>
						<width>1650</width>
						<height>38</height>
						<aligny>center</aligny>
						<font>Font_18A</font>
						<label>$VAR[value_videotvshowtag]</label>
						<textcolor>90FFFFFF</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<shadowcolor>grey</shadowcolor>
						<animation effect="slide" start="0,0" end="0,-45" condition="String.IsEmpty(ListItem.Tagline) | Skin.HasSetting(nomoviestagline)">Conditional</animation>
						<visible>[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + ![String.IsEqual(ListItem.Label,..) | Skin.HasSetting(notvshowstagline)]</visible>
					</control>
				</control>
			</control>
			<!-- end title bar 0-270 -->
			<!-- TV Show next aired bar  0-270 -->
			<!-- ONLY for wide, lowlist, rightlist -->
			<control type="group">
				<!-- Somente subtitulo/only subtitle -->
				<posy>-45</posy>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">WindowOpen</animation>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">Visible</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">WindowClose</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">Hidden</animation>
				<animation effect="slide" end="0,-30" time="500" tween="sine" easing="out" condition="![Skin.HasSetting(videoinfobar) | Skin.HasSetting(videodate)]">Conditional</animation>
				<animation effect="slide" end="0,30" time="500" tween="sine" easing="out" condition="!String.IsEmpty(ListItem.Property(AudioLanguage.1))">Conditional</animation>
				<visible>[Control.IsVisible(51) | Control.IsVisible(55) | Control.IsVisible(59)] + ![ControlGroup(9000).HasFocus | Control.HasFocus(9920) | Control.IsVisible(9922) | Control.HasFocus(9940) | Window.IsActive(movieinformation) | Skin.HasSetting(notvshowstagline) | String.IsEmpty(Control.GetLabel(555)) | String.IsEqual(ListItem.Label,..) | Skin.HasSetting(notvshowstagline)]</visible>
				<control type="image">
					<posx>0</posx>
					<posy>0</posy>
					<width>1920</width>
					<height>450</height>
					<texture flipy="true">shadow_mask.png</texture>
					<colordiffuse>F9000000</colordiffuse>
					<animation effect="fade" end="75" condition="true">Conditional</animation>
				</control>
				<control type="label" id="555">
					<posx>45</posx>
					<posy>105</posy>
					<width>825</width>
					<height>38</height>
					<aligny>center</aligny>
					<font>Font_18A</font>
					<label>$VAR[value_videotvshowtag2]</label>
					<textcolor>90FFFFFF</textcolor>
					<scroll>true</scroll>
					<scrollout>false</scrollout>
					<shadowcolor>grey</shadowcolor>
					<visible>[Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + ![String.IsEqual(ListItem.Label,..) | Skin.HasSetting(notvshowstagline)]</visible>
				</control>
			</control>
			<!-- end subtitle only bar 0-270 -->
			<!-- audio language and subitle langauge bar -->
			<control type="group">
				<!-- Linguagem de audio e legendas/Language for audio and subtitles -->
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">WindowOpen</animation>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">Visible</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">WindowClose</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">Hidden</animation>
				<animation effect="slide" end="-1170,0" time="0" condition="Control.IsVisible(55)">Conditional</animation>
				<animation effect="slide" end="-675,0" time="0" condition="Control.IsVisible(57)">Conditional</animation>
				<animation effect="slide" end="-1170,0" time="0" condition="Control.IsVisible(59)">Conditional</animation>
				<animation effect="slide" end="0,-30" time="500" tween="sine" easing="out" condition="![Skin.HasSetting(videoinfobar) | Skin.HasSetting(videodate)]">Conditional</animation>
				<visible>![Control.IsVisible(70) | Skin.HasSetting(nolanguageflags) | String.IsEqual(ListItem.Label,..) | IsEmpty(ListItem.Property(AudioLanguage.1)) + IsEmpty(ListItem.Property(SubtitleLanguage.1)) | Control.IsVisible(51) | Control.HasFocus(9920) | Control.HasFocus(9940) | Control.IsVisible(9922) | Window.IsActive(movieinformation) | Window.IsVisible(1110)]</visible>
				<posx>1215</posx>
				<posy>52</posy>
				<include>AudioandSub</include>
			</control>
			<!--  all views included here -->
			<control type="group">
				<!-- Grupo vistas -->
				<posy>45</posy>
				<include>Animation_HiddenView</include>
				<!-- ViewTypes -->
				<include>ViewWide</include>
				<!-- 51 -->
				<include condition="Skin.HasSetting(viewbanner_video)">ViewBanner</include>
				<!-- 52 -->
				<include condition="Skin.HasSetting(viewbannerinfo_video)">ViewBannerInfo</include>
				<!-- 53 -->
				<include condition="Skin.HasSetting(viewposter_video)">ViewPoster</include>
				<!-- 54 -->
				<include condition="Skin.HasSetting(viewlowlist_video)">ViewLowList</include>
				<!-- 55 -->
				<include condition="Skin.HasSetting(viewwall_video)">ViewWallVideo</include>
				<!-- 56 -->
				<include condition="Skin.HasSetting(viewglasslist_video)">ViewGlassList</include>
				<!-- 57 -->
				<include condition="Skin.HasSetting(viewcoverflow_video)">ViewCoverFlowVideo</include>
				<!-- 58 -->
				<include condition="Skin.HasSetting(viewrightlist_video)">ViewRightList</include>
				<!-- 59 -->
				<include condition="Skin.HasSetting(viewshowart_video)">ViewShowArt</include>
				<!-- 60 -->
				<include condition="Skin.HasSetting(viewmultiplex_video)">ViewMultiplex</include>
				<!-- 61 -->
				<include condition="Skin.HasSetting(viewpanel_video)">ViewPanel</include>
				<!-- 62 -->
				<include condition="Skin.HasSetting(viewshelf_video)">ViewShelf</include>
				<!-- 63 -->
				<include condition="Skin.HasSetting(viewshelfcase_video)">ViewShelfCase</include>
				<!-- 69 -->
				<!-- ShelfCase Mod -->
				<include condition="Skin.HasSetting(viewlandscapex_video)">ViewLandScapeX</include>
				<!-- 64 -->
				<include condition="Skin.HasSetting(viewsets_video)">ViewSets</include>
				<!-- 65 -->
				<include condition="Skin.HasSetting(viewshowcase_video)">ViewShowCaseVideo</include>
				<!-- 66 -->
				<include condition="Skin.HasSetting(viewmidlist_video)">ViewMidList</include>
				<!-- 70 -->
				<!-- Midlist Mod -->
			</control>
			<!-- additional includes for multidata and date/weather, and top pull down menu -->
			<include>TouchScreen</include>
			<include>ScrollLabel</include>
			<include condition="Skin.HasSetting(videoinfobar)">MultiData</include>
			<include condition="Skin.HasSetting(videodate)">TopDate</include>
			<include>TopMenu_Video</include>
			<include>BGBlack</include>
			<include>TrailerWindow</include>
		</control>
	</controls>
</window>
