<?xml version="1.0" encoding="UTF-8"?>
<!-- Aeon MQ5 Krypton 9.1.15/9.1.17/9.1.19/9.2.1 window IDs -->
<!-- Leia 10.3.0/10.4.0/10.6.1/10.6.2 -->
<includes>
	<include name="VideoPLWindow">
		<control type="image">
			<!-- Imagem padrao (standard image) or livebg -->
			<include>WindowBG</include>
			<texture>special://skin/backgrounds/movies.jpg</texture>
			<visible>Skin.HasSetting(noliveplaylistbg) | !Player.HasVideo</visible>
		</control>
		<include>LiveBG</include>
		<!-- video window on black -->
		<control type="image">
			<!-- Single Fanart -->
			<include>WindowBG</include>
			<texture background="true">$VAR[value_defaultvideofanart]</texture>
			<visible>!Player.HasVideo</visible>
		</control>
		<control type="group">
			<!-- default group -->
			<include>Animation_Window</include>
			<control type="button" id="9900">
				<!-- to menu/kiosk condition -->
				<include>InvisibleButton</include>
				<onfocus condition="![Skin.HasSetting(kiosk) | Skin.HasSetting(kiosksmart) + !String.Contains(skin.string(codestep),step3)]">SetFocus(9300)</onfocus>
				<onfocus condition="Skin.HasSetting(kiosksmart) + !String.Contains(skin.string(codestep),step3)">SetFocus(9100)</onfocus>
				<onfocus condition="Skin.HasSetting(kiosk)">SetFocus(51)</onfocus>
			</control>
			<control type="button" id="9920">
				<!-- hidden colection/view fanart -->
				<include>InvisibleButton</include>
				<onleft>SetFocus(51)</onleft>
				<onright>SetFocus(51)</onright>
				<onup>SetFocus(51)</onup>
				<ondown>SetFocus(51)</ondown>
			</control>
			<control type="group">
				<!-- Title / tag line -->
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">WindowOpen</animation>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">Visible</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">WindowClose</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">Hidden</animation>
				<visible>[Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(56) | Control.IsVisible(58) | Control.IsVisible(60) | Control.IsVisible(61) | Control.IsVisible(62) | Control.IsVisible(63) | Control.IsVisible(64) | Control.IsVisible(65) | Control.IsVisible(69)] + ![Control.HasFocus(9920) | Window.IsActive(movieinformation)]</visible>
				<control type="image">
					<posx>0</posx>
					<posy>0</posy>
					<height>225</height>
					<width>1920</width>
					<texture flipy="true">shadow_mask.png</texture>
					<colordiffuse>85000000</colordiffuse>
				</control>
				<control type="group">
					<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
					<control type="label">
						<!-- Title -->
						<posx>45</posx>
						<posy>12</posy>
						<width>1125</width>
						<height>60</height>
						<font>Font_40</font>
						<aligny>center</aligny>
						<label>$VAR[value_videotitle]</label>
						<textcolor>FFFFFAF0</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>75</posy>
						<width>1125</width>
						<height>38</height>
						<font>Font_18A</font>
						<label>$INFO[ListItem.Tagline]</label>
						<textcolor>90FFFFFF</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.1)) + !String.IsEqual(ListItem.DBTYPE,musicvideo)</visible>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>75</posy>
						<width>1125</width>
						<height>38</height>
						<font>Font_18A</font>
						<label>$INFO[ListItem.Artist]</label>
						<textcolor>90FFFFFF</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.1)) + String.IsEqual(ListItem.DBTYPE,musicvideo)</visible>
					</control>
				</control>
				<control type="group">
					<visible>String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
					<control type="label">
						<!-- Title -->
						<posx>45</posx>
						<posy>12</posy>
						<width>1650</width>
						<height>60</height>
						<font>Font_40</font>
						<aligny>center</aligny>
						<label>$VAR[value_videotitle]</label>
						<textcolor>FFFFFAF0</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<visible>String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
					</control>
					<control type="label">
						<posx>45</posx>
						<posy>75</posy>
						<width>1650</width>
						<height>38</height>
						<font>Font_18A</font>
						<label>$INFO[ListItem.Tagline]</label>
						<textcolor>90FFFFFF</textcolor>
						<scroll>true</scroll>
						<scrollout>false</scrollout>
						<visible>String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
					</control>
				</control>
			</control>
			<control type="group">
				<!-- Linguagem de audio e legendas -->
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">WindowOpen</animation>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">Visible</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">WindowClose</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">Hidden</animation>
				<animation effect="slide" end="-1170,0" time="0" condition="Control.IsVisible(55)">Conditional</animation>
				<animation effect="slide" end="-675,0" time="0" condition="Control.IsVisible(57)">Conditional</animation>
				<animation effect="slide" end="-1170,0" time="0" condition="Control.IsVisible(59)">Conditional</animation>
				<visible>![Control.IsVisible(70) | Skin.HasSetting(nolanguageflags) | String.IsEqual(ListItem.Label,..) | String.IsEmpty(ListItem.Property(AudioLanguage.1)) + String.IsEmpty(ListItem.Property(SubtitleLanguage.1)) | Control.IsVisible(51) | Control.HasFocus(9920) | Window.IsActive(movieinformation)] + !Skin.HasSetting(vplaylistinfobar)</visible>
				<posx>1215</posx>
				<posy>22</posy>
				<include>AudioandSub</include>
			</control>
			<control type="group">
				<!-- Linguagem de audio e legendas -->
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">WindowOpen</animation>
				<animation effect="slide" time="400" start="0,-375" end="0,0" easing="inout" tween="cubic">Visible</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">WindowClose</animation>
				<animation effect="slide" time="400" start="0,0" end="0,-375" easing="inout" tween="cubic">Hidden</animation>
				<animation effect="slide" end="-1170,0" time="0" condition="Control.IsVisible(55)">Conditional</animation>
				<animation effect="slide" end="-675,0" time="0" condition="Control.IsVisible(57)">Conditional</animation>
				<animation effect="slide" end="-1170,0" time="0" condition="Control.IsVisible(59)">Conditional</animation>
				<visible>![Control.IsVisible(70) | Skin.HasSetting(nolanguageflags) | String.IsEqual(ListItem.Label,..) | String.IsEmpty(ListItem.Property(AudioLanguage.1)) + String.IsEmpty(ListItem.Property(SubtitleLanguage.1)) | Control.IsVisible(51) | Control.HasFocus(9920) | Window.IsActive(movieinformation)] + Skin.HasSetting(vplaylistinfobar)</visible>
				<posx>1215</posx>
				<posy>52</posy>
				<include>AudioandSub</include>
			</control>
			<control type="group">
				<!-- Video Flags and views -->
				<posy>45</posy>
				<include>Animation_HiddenView</include>
				<control type="group">
					<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">WindowOpen</animation>
					<animation effect="slide" start="0,450" end="0,0" time="500" tween="sine" easing="out">Visible</animation>
					<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
					<visible>![Skin.HasSetting(nomediaflags) | Control.IsVisible(57)]</visible>
					<control type="image">
						<!-- Flag Bar -->
						<posx>0</posx>
						<posy>915</posy>
						<width>1920</width>
						<height>123</height>
						<colordiffuse>$VAR[value_flagsbar]</colordiffuse>
						<texture>shadow_mask.png</texture>
					</control>
					<control type="grouplist">
						<!-- Flags for not playing media -->
						<posx>30</posx>
						<posy>976</posy>
						<orientation>horizontal</orientation>
						<itemgap>40</itemgap>
						<visible>!String.IsEqual(ListItem.Label,..)</visible>
						<control type="image">
							<!-- Mpaa -->
							<include>FlagImage</include>
							<texture>$VAR[value_mpaa]</texture>
							<visible>!String.IsEmpty(ListItem.Mpaa)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.Mpaa)</visible>
						</control>
						<control type="label">
							<!-- Rating -->
							<include>FlagLabel</include>
							<label>$INFO[ListItem.Rating]</label>
							<visible>!String.IsEmpty(ListItem.Title)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.Title)</visible>
						</control>
						<control type="image">
							<!-- Codec -->
							<include>FlagImage</include>
							<texture>$VAR[value_videocodec]</texture>
							<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
						</control>
						<control type="image">
							<!-- Resolution -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.VideoResolution,flags/resolution/,.png]</texture>
							<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
						</control>
						<control type="image">
							<!-- Aspect -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
							<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
						</control>
						<control type="image">
							<!-- Audio Codec -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.AudioCodec,flags/audiocodec/,.png]</texture>
							<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
						</control>
						<control type="image">
							<!-- Channels -->
							<include>FlagImage</include>
							<texture>$INFO[ListItem.AudioChannels,flags/audiochannels/,ch.png]</texture>
							<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
						</control>
						<control type="image">
							<!-- Trailer -->
							<include>FlagImage</include>
							<texture>logo_trailer.png</texture>
							<visible>!String.IsEmpty(ListItem.Trailer)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(ListItem.Trailer) + ListItem.IsResumable</visible>
						</control>
						<control type="label">
							<!-- % Played -->
							<include>FlagLabel</include>
							<label>$INFO[ListItem.PercentPlayed]%</label>
							<visible>ListItem.IsResumable</visible>
						</control>
					</control>
					<control type="grouplist">
						<!-- Flags for playing media (only .. entry when playing MusicVudeo from musicplaylist) -->
						<posx>30</posx>
						<posy>976</posy>
						<orientation>horizontal</orientation>
						<itemgap>40</itemgap>
						<visible>String.IsEqual(ListItem.Label,..) + Player.HasVideo</visible>
						<control type="image">
							<!-- Mpaa -->
							<include>FlagImage</include>
							<texture>$VAR[value_mpaa_fs]</texture>
							<visible>!String.IsEmpty(VideoPlayer.Mpaa)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(VideoPlayer.Mpaa)</visible>
						</control>
						<control type="label">
							<!-- Rating -->
							<include>FlagLabel</include>
							<label>$INFO[VideoPlayer.Rating]</label>
							<visible>!String.IsEmpty(VideoPlayer.Title)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(VideoPlayer.Title)</visible>
						</control>
						<control type="image">
							<!-- Codec -->
							<include>FlagImage</include>
							<texture>$VAR[value_videocodec_fs]</texture>
							<visible>!String.IsEmpty(VideoPlayer.VideoCodec)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(VideoPlayer.VideoCodec)</visible>
						</control>
						<control type="image">
							<!-- Resolution -->
							<include>FlagImage</include>
							<texture>$INFO[VideoPlayer.VideoResolution,flags/resolution/,.png]</texture>
							<visible>!String.IsEmpty(VideoPlayer.VideoResolution)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(VideoPlayer.VideoResolution)</visible>
						</control>
						<control type="image">
							<!-- Aspect -->
							<include>FlagImage</include>
							<texture>$INFO[VideoPlayer.VideoAspect,flags/aspectratio/,.png]</texture>
							<visible>!String.IsEmpty(VideoPlayer.VideoAspect)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(VideoPlayer.VideoAspect)</visible>
						</control>
						<control type="image">
							<!-- Audio Codec -->
							<include>FlagImage</include>
							<texture>$INFO[VideoPlayer.AudioCodec,flags/audiocodec/,.png]</texture>
							<visible>!String.IsEmpty(VideoPlayer.AudioCodec)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(VideoPlayer.AudioCodec)</visible>
						</control>
						<control type="image">
							<!-- Channels -->
							<include>FlagImage</include>
							<texture>$INFO[VideoPlayer.AudioChannels,flags/audiochannels/,ch.png]</texture>
							<visible>!String.IsEmpty(VideoPlayer.AudioChannels)</visible>
						</control>
						<control type="image">
							<include>FlagSeparator</include>
							<visible>!String.IsEmpty(VideoPlayer.AudioChannels)</visible>
						</control>
					</control>
					<control type="image">
						<posx>0</posx>
						<posy>975</posy>
						<height>63</height>
						<width>1920</width>
						<texture>gradient_small.png</texture>
					</control>
				</control>
				<!-- ViewTypes -->
				<!-- ViewTypes -->
				<include>ViewWide</include>
				<!-- 51 -->
				<include condition="Skin.HasSetting(viewbanner_video)">ViewBanner</include>
				<!-- 52 -->
				<include condition="Skin.HasSetting(viewbannerinfo_video)">ViewBannerInfo</include>
				<!-- 53 -->
				<include condition="Skin.HasSetting(viewposter_video)">ViewPoster</include>
				<!-- 54 -->
				<include condition="Skin.HasSetting(viewlowlist_video)">ViewLowList</include>
				<!-- 55 -->
				<include condition="Skin.HasSetting(viewwall_video)">ViewWallVideo</include>
				<!-- 56 -->
				<include condition="Skin.HasSetting(viewglasslist_video)">ViewGlassList</include>
				<!-- 57 -->
				<include condition="Skin.HasSetting(viewcoverflow_video)">ViewCoverFlowVideo</include>
				<!-- 58 -->
				<include condition="Skin.HasSetting(viewrightlist_video)">ViewRightList</include>
				<!-- 59 -->
				<include condition="Skin.HasSetting(viewshowart_video)">ViewShowArt</include>
				<!-- 60 -->
				<include condition="Skin.HasSetting(viewmultiplex_video)">ViewMultiplex</include>
				<!-- 61 -->
				<include condition="Skin.HasSetting(viewpanel_video)">ViewPanel</include>
				<!-- 62 -->
				<include condition="Skin.HasSetting(viewshelf_video)">ViewShelf</include>
				<!-- 63 -->
				<include condition="Skin.HasSetting(viewshelfcase_video)">ViewShelfCase</include>
				<!-- 69 -->
				<!-- ShelfCase Mod -->
				<include condition="Skin.HasSetting(viewlandscapex_video)">ViewLandScapeX</include>
				<!-- 64 -->
				<include condition="Skin.HasSetting(viewsets_video)">ViewSets</include>
				<!-- 65 -->
				<include condition="Skin.HasSetting(viewshowcase_video)">ViewShowCaseVideo</include>
				<!-- 66 -->
				<include condition="Skin.HasSetting(viewmidlist_video)">ViewMidList</include>
				<!-- 70 -->
				<!-- Midlist Mod -->
			</control>
			<!-- Furniture -->
			<control type="group">
				<posy>45</posy>
				<include>ContainerViewPage</include>
			</control>
			<include>TouchScreen</include>
			<include>ScrollLabel</include>
			<include condition="Skin.HasSetting(vplaylistinfobar)">MultiData</include>
			<include>TopMenu_Video</include>
			<include>BGBlack</include>
			<!-- sets default settings if not 2 -->
			<include>TrailerWindow</include>
		</control>
	</include>
</includes>
